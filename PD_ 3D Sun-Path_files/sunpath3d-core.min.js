/**! @preserve
 * ============================================================================
 * PERFORMATIVE DESIGN WEB APP SOURCE CODE
 * This work is protected by copyright laws and international treaties.
 * Copyright (c) 2014-2018, Dr. Andrew J. Marsh.
 * All Rights Reserved.
 * ============================================================================
 */
var pd = pd || {};
!(function () {
  (pd.version = "0.1.2"),
    (pd.isBrowser = "undefined" != typeof window),
    (pd.Const = {
      EPSILON: 1e-6,
      HALF_PI: 0.5 * Math.PI,
      TWO_PI: 2 * Math.PI,
      DEG2RAD: Math.PI / 180,
      RAD2DEG: 180 / Math.PI,
    }),
    (pd.Align = {
      NONE: 0,
      LEFT: 1,
      CENTER: 2,
      RIGHT: 4,
      BOTTOM: 8,
      MIDDLE: 16,
      TOP: 32,
      BASELINE: 64,
      BOT_LEFT: 9,
      BOT_CENTER: 10,
      BOT_RIGHT: 12,
      MID_LEFT: 17,
      MID_CENTER: 18,
      MID_RIGHT: 20,
      TOP_LEFT: 33,
      TOP_CENTER: 34,
      TOP_RIGHT: 36,
      OUTSIDE: 1,
      INSIDE: 2,
    }),
    (pd.Align.isLeft = function (t) {
      return t & pd.Align.LEFT;
    }),
    (pd.Align.isCenter = function (t) {
      return t & pd.Align.CENTER;
    }),
    (pd.Align.isRight = function (t) {
      return t & pd.Align.RIGHT;
    }),
    (pd.Align.isTop = function (t) {
      return t & pd.Align.TOP;
    }),
    (pd.Align.isMiddle = function (t) {
      return t & pd.Align.MIDDLE;
    }),
    (pd.Align.isBottom = function (t) {
      return t & pd.Align.BOTTOM;
    }),
    (pd.sign = function (t) {
      return t < 0 ? -1 : 1;
    }),
    (pd.isNumeric = function (t) {
      return null != t && !isNaN(parseFloat(t)) && isFinite(t);
    }),
    (pd.isInteger = function (t) {
      return null != t && Math.round(t) === t;
    }),
    (pd.toNumber = function (t, e) {
      return (t = parseFloat(t)), !isNaN(t) && isFinite(t) ? t : e;
    }),
    (pd.toNumberInRange = function (t, e, r, n) {
      return pd.constrainTo(pd.toNumber(t, e), r, n);
    }),
    (pd.toInteger = function (t, e) {
      return (
        (t = parseFloat(t)),
        !isNaN(t) && isFinite(t) ? Math.round(t) : Math.round(+e)
      );
    }),
    (pd.toBoolean = function (t, e) {
      return null != t ? !!t : !!e;
    }),
    (pd.isBetween = function (t, e, r, n) {
      return (
        e <= r && ((n = +n || 0), !(isNaN(t) || r + n < t) && !(t < e - n))
      );
    }),
    (pd.isBetweenRange = function (t, e, r, n) {
      return (
        (n = +n || 0),
        !(isNaN(t) || t > Math.max(e, r) + n) && !(t < Math.min(e, r) - n)
      );
    }),
    (pd.isPowerOfTwo = function (t) {
      return 0 == (t & (t - 1));
    }),
    (pd.nextPowerOfTwo = function (t) {
      return (
        --t,
        (t |= t >> 1),
        (t |= t >> 2),
        (t |= t >> 4),
        (t |= t >> 8),
        (t |= t >> 16),
        ++t
      );
    }),
    (pd.closeTo = function (t, e, r) {
      return (r = r || pd.Const.EPSILON), !(isNaN(t) || e + r < t || t < e - r);
    }),
    (pd.constrainTo = function (t, e, r) {
      if (isNaN(t)) return e;
      if (r < e) {
        if (e < t) return e;
        if (t < r) return r;
      } else {
        if (t < e) return e;
        if (r < t) return r;
      }
      return t;
    }),
    (pd.wrapAt = function (t, e, r, n) {
      var i = Math.min(r, e),
        a = Math.max(r, e);
      if (n && t > a - pd.Const.EPSILON && t < a + pd.Const.EPSILON) return i;
      if (t < i || a < t) {
        var o = a - i;
        return 0 < o ? (t = t < i ? a - ((i - t) % o) : i + ((t - i) % o)) : i;
      }
      return t;
    }),
    (pd._fastWrap = function (t, e, r) {
      if (t < e || r < t) {
        var n = r - e;
        return 0 < n ? (t < e ? r - ((e - t) % n) : e + ((t - e) % n)) : e;
      }
      return t;
    }),
    (pd.snapTo = function (t, e) {
      return (e = e || 1) * Math.round(t / e);
    }),
    (pd.incrementBy = function (t, e) {
      var r = (e = e || 1) * Math.floor(t / e) + e,
        n = Math.abs(0.1 * e);
      return r - n < t && t < r + n ? r + e : r;
    }),
    (pd.mapAndConstrainTo = function (t, e, r, n, i) {
      var a = r - e;
      return Math.abs(a) < pd.Const.EPSILON
        ? 0.5 * (n + i)
        : pd.constrainTo(n + ((t - e) / a) * (i - n), n, i);
    }),
    (pd.mapTo = function (t, e, r, n, i) {
      var a = r - e;
      return Math.abs(a) < pd.Const.EPSILON
        ? 0.5 * (n + i)
        : n + ((t - e) / a) * (i - n);
    }),
    (pd.interpolate = function (t, e, r) {
      return t + r * (e - t);
    }),
    (pd.getTickIncrement = function (t, e) {
      var r = Math.pow(10, Math.floor(Math.log10(t)));
      r < pd.Const.EPSILON && (r = 1);
      var n = t / r;
      return n <= 0.1 * (e = e || 20)
        ? 0.1 * r
        : n <= 0.2 * e
        ? 0.2 * r
        : n <= 0.5 * e
        ? 0.5 * r
        : n <= e
        ? r
        : pd.snapTo(t / e, 0.1 * r);
    }),
    (pd.randomRange = function (t, e) {
      return Math.random() * (e - t) + t;
    }),
    (pd.safeDivide = function (t, e) {
      return Math.abs(e) > pd.Const.EPSILON ? t / e : 0;
    }),
    (pd.degreesToRadians = function (t) {
      return t * pd.Const.DEG2RAD;
    }),
    (pd.radiansToDegrees = function (t) {
      return t * pd.Const.RAD2DEG;
    }),
    (pd.sinDegrees = function (t) {
      return Math.sin(t * pd.Const.DEG2RAD);
    }),
    (pd.cosDegrees = function (t) {
      return Math.cos(t * pd.Const.DEG2RAD);
    }),
    (pd.tanDegrees = function (t) {
      return Math.tan(t * pd.Const.DEG2RAD);
    });
  var e = 987655555,
    r = 123455555,
    n = 4294967295;
  (pd.randomNumber = function (t) {
    return (
      t && ((e = 987654321 + t), (r = 123456789 - t)),
      ((((r = (36969 * (65535 & r) + (r >> 16)) & n) << 16) +
        (e = (18e3 * (65535 & e) + (e >> 16)) & n)) &
        n) /
        4294967296 +
        0.5
    );
  }),
    (pd.randomNumberInRange = function (t, e) {
      return pd.randomNumber() * (e - t) + t;
    }),
    (pd.toHexColorString = function (t) {
      var e,
        r = "#";
      return pd.isArray(t)
        ? ((e = Math.round(255 * t[0])) < 16 && (r += "0"),
          (r += e.toString(16).toUpperCase()),
          (e = Math.round(255 * t[1])) < 16 && (r += "0"),
          (r += e.toString(16).toUpperCase()),
          (e = Math.round(255 * t[2])) < 16 && (r += "0"),
          (r += e.toString(16).toUpperCase()))
        : "none";
    }),
    (pd.visibleTextColor = function (t, e) {
      return (
        t
          ? pd.isArray(t) || (t = pd.parseHexColorString(t.toString()))
          : (t = [0, 0, 0]),
        0.65 < 0.265 * t[0] + 0.67 * t[1] + 0.065 * t[2]
          ? e
            ? "#888"
            : "#000"
          : e
          ? "#CCC"
          : "#FFF"
      );
    }),
    (pd.parseHexColorString = function (t, e) {
      if ((e || (e = [1, 1, 1, 1]), t && 1 < t.length))
        if (0 <= t.indexOf("[") && 0 <= t.indexOf("]")) {
          if ((r = JSON.parse(t)) && pd.isArray(r))
            return (
              (e[0] = pd.constrainTo(pd.toNumber(r[0], 0), 0, 1)),
              (e[1] = pd.constrainTo(pd.toNumber(r[1], 0), 0, 1)),
              (e[2] = pd.constrainTo(pd.toNumber(r[2], 0), 0, 1)),
              (e[3] = pd.constrainTo(pd.toNumber(r[3], 1), 0, 1)),
              e
            );
        } else {
          var r;
          (t = t.replace(
            /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
            function (t, e, r, n) {
              return e + e + r + r + n + n;
            }
          )),
            (r = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t)) &&
              ((e[0] = parseInt(r[1], 16) / 255),
              (e[1] = parseInt(r[2], 16) / 255),
              (e[2] = parseInt(r[3], 16) / 255),
              (e[3] = 1));
        }
      return e;
    }),
    (pd.randomColorArray = function (t, e) {
      var r = [];
      if (
        ((t = pd.constrainTo(pd.toNumber(t, 0), -0.9, 0.9)),
        e && pd.randomNumber(e),
        1e-4 < t)
      ) {
        var n = 1 - t;
        (r[0] = t + pd.randomNumber() * n),
          (r[1] = t + pd.randomNumber() * n),
          (r[2] = t + pd.randomNumber() * n);
      } else if (t < -1e-4) {
        n = 1 + t;
        (r[0] = pd.randomNumber() * n),
          (r[1] = pd.randomNumber() * n),
          (r[2] = pd.randomNumber() * n);
      } else
        (r[0] = pd.randomNumber()),
          (r[1] = pd.randomNumber()),
          (r[2] = pd.randomNumber());
      return (r[3] = 1), r;
    }),
    (pd.darkenColorArray = function (t, e, r) {
      return (
        ((t = t || [])[0] = pd.constrainTo(+e[0] * r, 0, 1)),
        (t[1] = pd.constrainTo(+e[1] * r, 0, 1)),
        (t[2] = pd.constrainTo(+e[2] * r, 0, 1)),
        (t[3] = pd.toNumber(e[3], 1)),
        t
      );
    }),
    (pd.setColorArray = function (t, e, r, n, i) {
      if (((t = t || []), 2 == arguments.length && pd.isArray(e))) {
        var a = e;
        (t[0] = +a[0] || 0),
          (t[1] = +a[1] || 0),
          (t[2] = +a[2] || 0),
          (t[3] = pd.toNumber(a[3], 1));
      } else
        (t[0] = +e || 0),
          (t[1] = +r || 0),
          (t[2] = +n || 0),
          (t[3] = pd.toNumber(i, 1));
      return t;
    }),
    (pd.setVectorArray = function (t, e, r, n) {
      if (((t = t || []), 2 == arguments.length && pd.isArray(e))) {
        var i = e;
        (t[0] = +i[0] || 0), (t[1] = +i[1] || 0), (t[2] = +i[2] || 0);
      } else (t[0] = +e || 0), (t[1] = +r || 0), (t[2] = +n || 0);
      return t;
    }),
    (pd.notZeroLength = function (t) {
      return (
        1e-9 < t[0] ||
        t[0] < -1e-9 ||
        1e-9 < t[1] ||
        t[1] < -1e-9 ||
        1e-9 < t[2] ||
        t[2] < -1e-9
      );
    }),
    (pd.cloneSimpleObject = function (t) {
      return JSON.parse(JSON.stringify(t));
    }),
    (pd.hashMapFactory = function () {
      return Object.create(null);
    }),
    (pd.hashMapHasEntry = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }),
    (pd.hashMapValues = function (t) {
      var e = [];
      for (var r in t) null != r && e.push(t[r]);
      return e;
    }),
    (pd.hashMapIsEmpty = function (t) {
      for (var e in t) if (null != e) return !1;
      return !0;
    }),
    (pd.hashMapClear = function (t) {
      for (var e in t) delete t[e];
    }),
    Array.prototype.fill ||
      Object.defineProperty(Array.prototype, "fill", {
        value: function (t) {
          if (null == this) throw new TypeError("this is null or not defined");
          for (
            var e = Object(this),
              r = e.length >>> 0,
              n = arguments[1] >> 0,
              i = n < 0 ? Math.max(r + n, 0) : Math.min(n, r),
              a = arguments[2],
              o = void 0 === a ? r : a >> 0,
              s = o < 0 ? Math.max(r + o, 0) : Math.min(o, r);
            i < s;

          )
            (e[i] = t), i++;
          return e;
        },
      });
  var i = 1.6 * Math.PI,
    a = Math.PI / 1.5;
  (pd.colorScaleRainbow = function (t, e) {
    e = e || [];
    var r = pd.constrainTo(t, 0, 1) * i;
    return (
      (e[0] = 0.5 - 0.5 * Math.sin(r)),
      (e[1] = 0.5 - 0.5 * Math.sin((r += a))),
      (e[2] = 0.5 - 0.5 * Math.sin((r += a))),
      (e[3] = 1),
      e
    );
  }),
    (pd.colorScaleRed = function (t, e) {
      e = e || [];
      var r = 0.75 * (t = pd.constrainTo(t, 0, 1));
      return (e[0] = 0.25 + r), (e[1] = e[2] = t * r), (e[3] = 1), e;
    }),
    (pd.colorScaleGreen = function (t, e) {
      return (
        (e = e || []),
        (t = pd.constrainTo(t, 0, 1)),
        (e[0] = 0.5 < t ? 1.6 * (t - 0.5) : 0),
        (e[1] = 0.4 + 0.6 * t),
        (e[2] = 0),
        (e[3] = 1),
        e
      );
    }),
    (pd.colorScaleBlue = function (t, e) {
      e = e || [];
      var r = 0.75 * (t = pd.constrainTo(t, 0, 1));
      return (e[0] = e[1] = t * r), (e[2] = 0.25 + r), (e[3] = 1), e;
    }),
    (pd.colorScaleRedWhiteBlue = function (t, e) {
      e = e || [];
      var r = pd.constrainTo(t, 0, 1);
      return (
        r <= 0.5
          ? ((e[0] = e[1] = 2 * r), (e[2] = 1))
          : ((e[0] = 1),
            (e[1] = e[2] = pd.mapAndConstrainTo(r, 0.5, 0.95, 1, 0))),
        (e[3] = 1),
        e
      );
    }),
    (pd.colorScaleSepia = function (t, e) {
      e = e || [];
      var r = 0.1 + 0.9 * pd.constrainTo(t, 0, 1);
      return (e[0] = r), (e[1] = r), (e[2] = 0.25 * r), (e[3] = 1), e;
    }),
    (pd.colorScaleEcotect = function (t, e) {
      e = e || [];
      var r,
        n = 2.1 * pd.constrainTo(t, 0, 1),
        i = 0;
      return (
        1 < n && ((i = n - 1), (n = 1)),
        1 < i && (i = 1),
        i < 0 && (i = 0),
        n < 0 && (n = 0),
        (r = 1 - n),
        (e[0] = n),
        (e[1] = i),
        (e[2] = r),
        (e[3] = 1),
        e
      );
    }),
    (pd.startsWith = function (t, e) {
      return 0 === t.indexOf(e);
    }),
    (pd.endsWith = function (t, e) {
      var r = t.length - e.length,
        n = t.indexOf(e, r);
      return -1 !== n && n === r;
    }),
    (pd.indexOfLowerCase = function (t, e) {
      return pd.isString(e) && pd.isString(t)
        ? t.toLowerCase().indexOf(e.toLowerCase())
        : -1;
    }),
    (pd.countOccurrences = function (t, e, r) {
      if (!pd.isString(e) || !pd.isString(t) || e.length <= 0) return 0;
      for (var n = 0, i = 0, a = r ? 1 : e.length; 0 <= (n = t.indexOf(e, n)); )
        (n += a), ++i;
      return i;
    }),
    (pd.toStringWithLeadingZeros = function (t, e) {
      var r = String(t);
      for (e = pd.toInteger(e, 2); r.length < e; ) r = "0" + r;
      return r;
    }),
    (pd.toStringWithPrecision = function (t, e) {
      return (t = parseFloat(t)).toFixed(pd.toInteger(e, 3));
    }),
    (pd.toStringWithPrecisionRange = function (t, e, r) {
      if (e < 0 || r < 0)
        throw new Error(
          "ERROR: Minimum and maximum decimal places must be zero or positive."
        );
      if (((t = parseFloat(t)), r <= e)) return t.toFixed(e);
      var n = t.toFixed(r).split(".");
      if (n.length < 2) return t.toFixed(e);
      var i = n[1].length;
      if (i <= e) return t.toFixed(e);
      for (var a = i - 1; e <= a && "0" == n[1].charAt(a); a--) i--;
      return 0 < i ? n[0] + "." + n[1].slice(0, i) : n[0];
    }),
    (pd.toCamelCase = function (t) {
      return t.replace(/([-_][a-z])/g, function (t) {
        return t.toUpperCase().replace(/[-_]/, "");
      });
    }),
    (pd.fromCamelCase = function (t, e) {
      return (
        (e = e || "-"),
        t.replace(/([A-Z])/g, function (t) {
          return e + t.toLowerCase();
        })
      );
    }),
    (pd.UnitType = {
      NONE: 0,
      FRACTION: 1,
      PERCENTAGE: 2,
      LENGTH: 3,
      AREA: 4,
      VOLUME: 5,
      TIME_HRS: 6,
      TIME_MINS: 7,
      DATE: 8,
    }),
    (pd.DimensionType = {
      DEFAULT: 0,
      METRIC_MM: 1,
      METRIC_SI: 2,
      IMPERIAL: 3,
    }),
    (pd.Dimension = {}),
    (pd.Dimension.type = pd.DimensionType.METRIC_MM),
    (pd.Dimension.formatFeetAndInches = function (t) {
      var e,
        r,
        n,
        i = "",
        a = pd.sign(t);
      return (
        (n =
          16 *
            ((r =
              12 * ((e = Math.abs(t) / 25.4 / 12 + 0.001) - Math.floor(e)) +
              0.001) -
              Math.floor(r)) +
          0.001),
        (n = Math.floor(n)),
        (r = Math.floor(r)),
        (0 < (e = Math.floor(e)) || (r < 0.001 && n < 0.999)) &&
          (i += e.toString() + "'"),
        (0 < r || 1 <= n) && (0 < e && (i += " "), (i += r.toString() + '"')),
        1 <= n &&
          (0 < i.length && (i += " "),
          (i +=
            n % 8 == 0
              ? Math.round(n / 8).toString() + "/2"
              : n % 4 == 0
              ? Math.round(n / 4).toString() + "/4"
              : n % 2 == 0
              ? Math.round(n / 2).toString() + "/8"
              : n.toString() + "/16")),
        a < 0 ? "-" + i : i
      );
    }),
    (pd.Dimension.formatDimension = function (t, e, r, n) {
      switch ((e = e || pd.Dimension.type)) {
        default:
        case pd.DimensionType.METRIC_MM:
          return (
            (!pd.isNumeric(r) || r < 0) && (r = 0),
            n ? t.toFixed(r) + " mm" : t.toFixed(r)
          );
        case pd.DimensionType.METRIC_SI:
          return (
            (!pd.isNumeric(r) || r < 0) && (r = 3),
            n ? (t / 1e3).toFixed(r) + " m" : (t / 1e3).toFixed(r)
          );
        case pd.DimensionType.IMPERIAL:
          return pd.Dimension.formatFeetAndInches(t);
      }
    }),
    (pd.Dimension.formatDistance = function (t, e, r, n) {
      switch ((e = e || pd.Dimension.type)) {
        default:
        case pd.DimensionType.METRIC_MM:
        case pd.DimensionType.METRIC_SI:
          return (
            (!pd.isNumeric(r) || r < 0) && (r = 3),
            n ? (t / 1e3).toFixed(r) + " m" : (t / 1e3).toFixed(r)
          );
        case pd.DimensionType.IMPERIAL:
          return pd.Dimension.formatFeetAndInches(t);
      }
    }),
    (pd.Dimension.getDefaultStep = function (t) {
      switch ((t = t || pd.Dimension.type)) {
        default:
        case pd.DimensionType.METRIC_MM:
        case pd.DimensionType.METRIC_SI:
          return 25;
        case pd.DimensionType.IMPERIAL:
          return 25.4;
      }
    }),
    (pd.Dimension.getSmallStep = function (t) {
      switch ((t = t || pd.Dimension.type)) {
        default:
        case pd.DimensionType.METRIC_MM:
        case pd.DimensionType.METRIC_SI:
          return 5;
        case pd.DimensionType.IMPERIAL:
          return 6.35;
      }
    }),
    (pd.Dimension.incrementDimension = function (t, e, r, n) {
      var i, a;
      if (
        ((r = pd.toNumber(r, 0)),
        (e = pd.toNumber(e, 0)),
        (n = pd.toNumber(n, pd.Dimension.getDefaultStep())),
        e)
      )
        return (
          pd.Dimension.type == pd.DimensionType.IMPERIAL
            ? ((a = 1.5875),
              900 < n
                ? ((i = 4572), (n = 25.4))
                : 300 < n
                ? ((i = 914.4), (n = 25.4))
                : 15 < n
                ? ((i = 304.8), (n = 25.4))
                : 0.99 < n
                ? ((i = 304.8), (n = 1))
                : ((n = 1.5875), (i = 25.4)),
              n < a && (n = a),
              (e =
                t && t.shiftKey
                  ? Math.abs(e) < 10
                    ? i * pd.sign(e)
                    : 5 * i * pd.sign(e)
                  : t && (t.ctrlKey || t.metaKey)
                  ? Math.abs(e) < 10
                    ? a * pd.sign(e)
                    : 4 * a * pd.sign(e)
                  : Math.abs(e) < 10
                  ? n * pd.sign(e)
                  : i * pd.sign(e)))
            : ((i = 5 * n),
              n < (a = 1) && (n = a),
              (e =
                t && t.shiftKey
                  ? Math.abs(e) < 5
                    ? i * pd.sign(e)
                    : Math.abs(e) < 10
                    ? 5 * i * pd.sign(e)
                    : 10 * i * pd.sign(e)
                  : t && (t.ctrlKey || t.metaKey)
                  ? Math.abs(e) < 10
                    ? a * pd.sign(e)
                    : 5 * a * pd.sign(e)
                  : Math.abs(e) < 10
                  ? n * pd.sign(e)
                  : i * pd.sign(e))),
          pd.incrementBy(r, e)
        );
    }),
    (pd.Dimension.formatArea = function (t, e, r) {
      switch ((e = e || pd.Dimension.type)) {
        default:
        case pd.DimensionType.METRIC_MM:
        case pd.DimensionType.METRIC_SI:
          return (!pd.isNumeric(r) || r < 0) && (r = 2), t.toFixed(r) + " m2";
        case pd.DimensionType.IMPERIAL:
          return (
            (!pd.isNumeric(r) || r < 0) && (r = 1),
            (10.76391041671 * t).toFixed(r) + " ft2"
          );
      }
    }),
    (pd.Dimension.parseDimension = function (t, e) {
      var r = 0 === (t = t.toString()).indexOf("=");
      switch (
        ((e = e || pd.Dimension.type),
        /\'|\"/.test(t)
          ? ((e = pd.DimensionType.IMPERIAL), (r = !1))
          : 0 <= t.indexOf("ft") || 0 < t.indexOf("in")
          ? ((t = (t = t.replace("ft", "'")).replace("in", '"')),
            (e = pd.DimensionType.IMPERIAL),
            (r = !1))
          : 0 < t.indexOf("mm")
          ? (e = pd.DimensionType.METRIC_MM)
          : 0 < t.indexOf("m") && (e = pd.DimensionType.METRIC_SI),
        e)
      ) {
        default:
        case pd.DimensionType.METRIC_MM:
          return pd.parseEqn(t);
        case pd.DimensionType.METRIC_SI:
          return 1e3 * pd.parseEqn(t);
        case pd.DimensionType.IMPERIAL:
          var n = 0,
            i = 0,
            a = 0;
          if (0 <= t.indexOf("'") || 0 <= t.indexOf('"'))
            for (var o = t.split(/([\s\'\"]+)/), s = 0; s < o.length; s += 2) {
              if (0 <= o[s].indexOf("/")) {
                if (1 < (l = o[s].split("/")).length) {
                  var d = parseFloat(l[0]);
                  0.1 < (h = parseFloat(l[1])) && (a = d / h);
                }
              } else
                s < o.length - 1 && 0 < o[s + 1].length
                  ? 0 <= o[s + 1].indexOf('"') ||
                    0 <= o[s + 1].indexOf("''") ||
                    (0 <= o[s + 1].indexOf(" ") && 0 < s)
                    ? (i = parseFloat(o[s]))
                    : (0 <= o[s + 1].indexOf("'") ||
                        (0 <= o[s + 1].indexOf(" ") && 0 == s)) &&
                      (n = parseFloat(o[s]))
                  : 0 < o[s].length &&
                    (0 < s || 0 < n
                      ? (i = parseFloat(o[s]))
                      : (n = parseFloat(o[s])));
            }
          else {
            if (r) return 304.8 * pd.parseEqn(t);
            for (o = t.split(" "), s = 0; s < o.length; ++s) {
              var l;
              if (0 < o[s].length)
                if (0 <= o[s].indexOf("/")) {
                  if (1 < (l = o[s].split("/")).length) {
                    var h;
                    d = parseFloat(l[0]);
                    0.1 < (h = parseFloat(l[1])) && (a = d / h);
                  }
                } else 0 < s ? (i = parseFloat(o[s])) : (n = parseFloat(o[s]));
            }
          }
          return 304.8 * n + 25.4 * i + 25.4 * a;
      }
    }),
    (pd.Indexer = function (t, e) {
      (this.unique = pd.isArray(t) ? t : []),
        (this.map = {}),
        (this.decimals = pd.toInteger(e, 3)),
        (this.indexId = 0);
    }),
    (pd.Indexer.prototype.addObject = function (t) {
      var e,
        r = JSON.stringify(t);
      return (
        r in this.map
          ? (e = this.map[r])
          : ((e = this.map[r] = this.unique.length), this.unique.push(t)),
        e
      );
    }),
    (pd.Indexer.prototype.addById = function (t) {
      var e, r;
      return (
        t._indexId || (t._indexId = ++this.indexId),
        (r = t._indexId) in this.map
          ? (e = this.map[r])
          : ((e = this.map[r] = this.unique.length), this.unique.push(t)),
        e
      );
    }),
    (pd.Indexer.prototype.addVectorArray = function (t) {
      var e,
        r = this.decimals,
        n =
          "[" +
          t[0].toFixed(r) +
          "," +
          t[1].toFixed(r) +
          "," +
          t[2].toFixed(r) +
          "]";
      return (
        n in this.map
          ? (e = this.map[n])
          : ((e = this.map[n] = this.unique.length), this.unique.push(t)),
        e
      );
    }),
    (pd.IndexCounter = function (t) {
      (this.unique = pd.isArray(t) ? t : []),
        (this.counter = []),
        (this.map = {});
    }),
    (pd.IndexCounter.prototype.count = function (t) {
      var e = JSON.stringify(t);
      e in this.map ||
        ((this.map[e] = this.unique.length),
        this.unique.push(t),
        this.counter.push(0));
      var r = this.map[e];
      return this.counter[r]++, this.map[e];
    });
  var l = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],
    h = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366],
    u = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ];
  function c(t) {
    return null != t && 0 == (3 & t) && (t % 100 != 0 || t % 400 == 0);
  }
  (pd.DateTime = {}),
    (pd.DateTime.isLeapYear = function (t) {
      return c(t);
    }),
    (pd.DateTime.getMonthName = function (t) {
      return 0 <= t && t <= 11 ? u[t] : "";
    }),
    (pd.DateTime.generateDateSuffix = function (t) {
      return (
        t || (t = new Date()),
        t.getFullYear() +
          "-" +
          ("0" + (t.getMonth() + 1)).slice(-2) +
          "-" +
          ("0" + t.getDate()).slice(-2) +
          "-" +
          ("0" + t.getHours()).slice(-2) +
          ("0" + t.getMinutes()).slice(-2) +
          "-" +
          ("0" + t.getSeconds()).slice(-2)
      );
    }),
    (pd.DateTime.getDOY = function (t, e, r) {
      return (e = pd.constrainTo(e, 0, 11)), c(r) ? h[e] + t - 1 : l[e] + t - 1;
    }),
    (pd.DateTime.getDayAndMonth = function (t, e) {
      var r = c(e);
      t = pd.constrainTo(t, 0, r ? 365 : 364);
      for (
        var n = pd.constrainTo(Math.ceil(t / 30) + 1, 0, 11),
          i = r ? h : l,
          a = n;
        0 <= a;
        a--
      ) {
        if (i[a] <= t)
          return {
            month: Math.floor(pd.constrainTo(a, 0, 11)),
            day: Math.floor(pd.constrainTo(t - i[a] + 1, 1, 31)),
          };
      }
      return { month: 0, day: 1 };
    }),
    (pd.DateTime.snapToNearestMonth = function (t, e) {
      var r = c(e),
        n = r ? h : l,
        i = r ? 365 : 364;
      t = pd.constrainTo(t, 0, i);
      for (var a = 0; a <= 12; ++a) if (t < n[a] + 15) return n[a];
      return i;
    }),
    (pd.DateTime.getMonthStartDay = function (t, e) {
      return (t = pd.constrainTo(t, 0, 11)), c(e) ? h[t] : l[t];
    }),
    (pd.DateTime.getMonthEndDay = function (t, e) {
      var r = (t = pd.constrainTo(t, 0, 11) + 1) < 11 ? 1 : 0;
      return c(e) ? h[t] - r : l[t] - r;
    }),
    (pd.DateTime.getDayCountArray = function (t) {
      return c(t) ? h : l;
    }),
    (pd.DateTime.formatDate = function (t, e, r) {
      var n = c(e);
      t = pd.constrainTo(t, 0, n ? 365 : 364);
      for (
        var i = pd.constrainTo(Math.ceil(t / 30) + 1, 0, 11),
          a = n ? h : l,
          o = i;
        0 <= o;
        o--
      )
        if (a[o] <= t) {
          var s = Math.floor(pd.constrainTo(o, 0, 11)),
            d = Math.floor(pd.constrainTo(t - a[o] + 1, 1, 31));
          return (
            d < 10 && (d = "0" + d),
            r && 0 < e ? d + " " + u[s] + " " + e : d + " " + u[s]
          );
        }
      return "";
    }),
    (pd.DateTime.formatAsMMMDD = function (t, e) {
      var r = c(e);
      t = pd.wrapAt(t, 0, r ? 366 : 365, !0);
      for (
        var n = pd.constrainTo(Math.ceil(t / 30) + 1, 0, 11),
          i = r ? h : l,
          a = n;
        0 <= a;
        a--
      )
        if (i[a] <= t) {
          var o = Math.floor(pd.constrainTo(a, 0, 11)),
            s = Math.floor(pd.constrainTo(t - i[a] + 1, 1, 31));
          return s < 10 && (s = "0" + s), u[o] + s;
        }
      return "";
    }),
    (pd.DateTime.formatMonthName = function (t) {
      return (t = Math.floor(pd.constrainTo(t, 0, 11))), u[t];
    }),
    (pd.DateTime.formatTime = function (t, e) {
      if ((23.9999 < (t = pd.wrapAt(t, 0, 24)) && (t = 0), e)) {
        var r = 3600 * Math.abs(t),
          n = pd.constrainTo(Math.floor(t), 0, 24),
          i = pd.constrainTo(Math.floor(60 * (t - n)), 0, 60),
          a = pd.constrainTo(Math.round(r - (3600 * n + 60 * i)), 0, 60);
        return (
          59.5 < a && ((i = i < 59 ? i + 1 : 0), (a = 0)),
          59.5 < i && ((n = n < 23 ? n + 1 : 0), (i = 0)),
          n < 10 && (n = "0" + n),
          i < 10 && (i = "0" + i),
          a < 10 && (a = "0" + a),
          n + ":" + i + ":" + a
        );
      }
      n = Math.floor(t);
      return (
        59.5 < (i = pd.constrainTo(Math.round(60 * (t - n)), 0, 60)) &&
          ((n = n < 23 ? n + 1 : 0), (i = 0)),
        n < 10 && (n = "0" + n),
        i < 10 && (i = "0" + i),
        n + ":" + i
      );
    }),
    (pd.DateTime.formatDuration = function (t, e) {
      var r = pd.sign(t);
      if (((t = Math.abs(t)), e)) {
        var n = Math.floor(t),
          i = 3600 * Math.abs(t),
          a = pd.constrainTo(Math.floor(60 * (t - n)), 0, 60),
          o = pd.constrainTo(Math.round(i - (3600 * n + 60 * a)), 0, 60);
        return (
          59.5 < o && ((a = a < 59 ? a + 1 : 0), (o = 0)),
          59.5 < a && ((n = n < 23 ? n + 1 : 0), (a = 0)),
          n < 10 && (n = "0" + n),
          a < 10 && (a = "0" + a),
          o < 10 && (o = "0" + o),
          r < 0 ? "-" + n + ":" + a + ":" + o : n + ":" + a + ":" + o
        );
      }
      n = Math.floor(t);
      return (
        59.5 < (a = pd.constrainTo(Math.round(60 * (t - n)), 0, 60)) &&
          ((n = n < 23 ? n + 1 : 0), (a = 0)),
        n < 10 && (n = "0" + n),
        a < 10 && (a = "0" + a),
        r < 0 ? "-" + n + ":" + a : n + ":" + a
      );
    }),
    (pd.DateTime.parseTime = function (t) {
      if ("" == t) return null;
      var e = 0,
        r = 0;
      if (0 <= t.indexOf(".") && t.indexOf(":") < 0) {
        var n = parseFloat(t);
        r = 60 * (n - (e = Math.floor(n)));
      } else {
        var i = t.match(/(\d+)(:(\d\d))?\s*(p|a?)/i);
        if (null == i) return null;
        if (24 < (e = parseInt(i[1], 10))) {
          r = e;
          0 < (e = Math.floor(r / 100)) && (r -= 100 * e),
            (i[3] = r.toString());
        }
        0 < i[4].length &&
          ("a" == i[4] ? 12 == e && (e = 0) : e < 12 && (e += 12)),
          (r = parseInt(i[3], 10) || 0);
      }
      e = pd._fastWrap(e, 0, 24);
      var a = new Date();
      return a.setHours(e), a.setMinutes(r), a.setSeconds(0, 0), a;
    }),
    (pd.DateTime.parseTimeToDecimalHours = function (t) {
      var e = pd.DateTime.parseTime(t);
      return e ? pd.constrainTo(e.getHours() + e.getMinutes() / 60, 0, 24) : 0;
    }),
    (pd.DateTimeRange = function (t, e) {
      (this.fromDay = 0),
        (this.toDay = 365),
        (this.fromTime = 0),
        (this.toTime = 24),
        (this.timeStep = 1 / 6),
        (this.daysInTheYear = 365),
        (this.sunriseToSunset = !1),
        (this.solar = null),
        (this.sanityCheck = function (t) {
          var e =
            (t = t || this.solar) && t.isLeapYear && t.isLeapYear() ? 366 : 365;
          (this.daysInTheYear = e),
            (this.solar = t),
            (this.fromDay = pd.wrapAt(pd.toInteger(this.fromDay, 0), 0, e - 1)),
            (this.toDay = pd.wrapAt(pd.toInteger(this.toDay, e), 0, e)),
            this.toDay < this.fromDay && (this.toDay += e),
            this.toDay - this.fromDay >= e &&
              (this.toDay = this.fromDay + e - 1),
            (this.fromTime = pd.wrapAt(pd.toNumber(this.fromTime, 0), 0, 24)),
            (this.toTime = pd.wrapAt(pd.toNumber(this.toTime, 24), 0, 24)),
            this.toTime <= this.fromTime && (this.toTime += 24),
            24 < this.toTime - this.fromTime &&
              (this.toTime = this.fromTime + 24),
            (this.timeStep = pd.constrainTo(
              pd.toNumber(this.timeStep, 1 / 6),
              1 / 60,
              24
            ));
        }),
        (this.set = function (t, e) {
          return (
            "fromDay" in (t = t || null) && (this.fromDay = t.fromDay),
            "toDay" in t && (this.toDay = t.toDay),
            "fromTime" in t && (this.fromTime = t.fromTime),
            "toTime" in t && (this.toTime = t.toTime),
            "timeStep" in t && (this.timeStep = t.timeStep),
            (e = e || t.solar || this.solar),
            this.sanityCheck(e),
            this
          );
        }),
        (t || e) && this.set(t, e);
    }),
    (pd.copyArray = function (t, e, r) {
      r = r || Math.round(Math.min(t.length, e.length));
      for (var n = 0; n < r; ++n) e[n] = t[n];
    }),
    (pd.isArray =
      Array.isArray ||
      function (t) {
        return !!t && "[object Array]" === Object.prototype.toString.call(t);
      }),
    (pd.isTypedArray = function (t) {
      return !!t && t.BYTES_PER_ELEMENT && void 0 !== t.byteLength;
    }),
    (pd.isObject = function (t) {
      return null !== t && ("object" == typeof t || "function" == typeof t);
    }),
    (pd.isString = function (t) {
      return "string" == typeof t || t instanceof String;
    }),
    (pd.isFunction = function (t) {
      return "function" == typeof t;
    }),
    (pd.isAlpha = function (t) {
      return /^[A-Za-z]$/.test(t);
    }),
    (pd.sleepFor = function (t) {
      for (var e = new Date().getTime(); new Date().getTime() < e + t; );
      return pd;
    }),
    (pd.parseEqn = parseFloat),
    (pd.parseCSV = function (t) {
      for (var e, r = [""], n = !1, i = 0, a = 0; a < t.length; ++a)
        if ('"' == (e = t[a]) && n && '"' == t[a + 1]) (r[i] += e), ++a;
        else if ('"' != e)
          if ("," != e || n) {
            if ("\n" == e && !n) break;
            r[i] += e;
          } else r[++i] = "";
        else n = !n;
      return r;
    }),
    /**
     * Simple class to create a 32char globally unique identifier (GUID).
     *
     * See: [Fast UUID generator, RFC4122 version 4 compliant](http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136).
     * @author Jeff Ward (jcward.com).
     * @license MIT license
     * @class
     **/
    (pd.GUID = (function () {
      for (var t = {}, i = [], e = 0; e < 256; ++e)
        i[e] = (e < 16 ? "0" : "") + e.toString(16);
      return (
        (t.generate = function () {
          var t = (4294967295 * Math.random()) | 0,
            e = (4294967295 * Math.random()) | 0,
            r = (4294967295 * Math.random()) | 0,
            n = (4294967295 * Math.random()) | 0;
          return (
            i[255 & t] +
            i[(t >> 8) & 255] +
            i[(t >> 16) & 255] +
            i[(t >> 24) & 255] +
            "-" +
            i[255 & e] +
            i[(e >> 8) & 255] +
            "-" +
            i[((e >> 16) & 15) | 64] +
            i[(e >> 24) & 255] +
            "-" +
            i[(63 & r) | 128] +
            i[(r >> 8) & 255] +
            "-" +
            i[(r >> 16) & 255] +
            i[(r >> 24) & 255] +
            i[255 & n] +
            i[(n >> 8) & 255] +
            i[(n >> 16) & 255] +
            i[(n >> 24) & 255]
          );
        }),
        t
      );
    })()),
    (pd.addSimpleEventHandling = function (a) {
      (a._pd_events = a._pd_events || {}),
        (a.on = function (t, e) {
          "string" == typeof t &&
            ((t = t.trim()),
            (a._pd_events[t] && pd.isArray(a._pd_events[t])) ||
              (a._pd_events[t] = []),
            e && a._pd_events[t].indexOf(e) < 0 && a._pd_events[t].push(e));
          return a;
        }),
        (a.off = function (t, e) {
          if (
            "string" == typeof t &&
            ((t = t.trim()), a._pd_events[t] && pd.isArray(a._pd_events[t]))
          ) {
            var r = a._pd_events[t].indexOf(e);
            -1 < r && a._pd_events[t].splice(r, 1);
          }
          return a;
        }),
        (a.emit = function (t) {
          if (a._pd_events[t] && pd.isArray(a._pd_events[t]))
            for (
              var e = [].slice.call(arguments, 1),
                r = a._pd_events[t],
                n = 0,
                i = r.length;
              n < i;
              ++n
            )
              r[n].apply(a, e);
          return a;
        }),
        (a.once = function (e, r) {
          return (
            a.on(e, function t() {
              a.removeListener(e, t), r.apply(a, arguments);
            }),
            a
          );
        });
    }),
    (pd.Easing = {
      linear: function (t) {
        return t;
      },
      inSine: function (t) {
        return 1 - Math.sin(pd.Const.HALF_PI + t * pd.Const.HALF_PI);
      },
      outSine: function (t) {
        return Math.sin(t * pd.Const.HALF_PI);
      },
      inOutSine: function (t) {
        return 0.5 * (1 + Math.sin(-pd.Const.HALF_PI + t * Math.PI));
      },
      inOutSinePow: function (t, e) {
        return (
          (e = +e || 2),
          Math.pow(0.5 * (1 + Math.cos(-Math.PI + t * Math.PI)), e)
        );
      },
      inQuad: function (t) {
        return t * t;
      },
      outQuad: function (t) {
        return t * (2 - t);
      },
      inOutQuad: function (t) {
        return t < 0.5 ? 2 * t * t : (4 - 2 * t) * t - 1;
      },
      inCubic: function (t) {
        return t * t * t;
      },
      outCubic: function (t) {
        return --t * t * t + 1;
      },
      inOutCubic: function (t) {
        return t < 0.5
          ? 4 * t * t * t
          : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
      },
      inQuart: function (t) {
        return t * t * t * t;
      },
      outQuart: function (t) {
        return 1 - --t * t * t * t;
      },
      inOutQuart: function (t) {
        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
      },
      inQuint: function (t) {
        return t * t * t * t * t;
      },
      outQuint: function (t) {
        return 1 + --t * t * t * t * t;
      },
      inOutQuint: function (t) {
        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
      },
      inExpo: function (t) {
        return (Math.pow(2, 8 * t) - 1) / 255;
      },
      outExpo: function (t) {
        return 1 - Math.pow(2, -8 * t);
      },
      inOutExpo: function (t) {
        return t < 0.5
          ? (Math.pow(2, 16 * t) - 1) / 510
          : 1 - 0.5 * Math.pow(2, -16 * (t - 0.5));
      },
      inCirc: function (t) {
        return 1 - Math.sqrt(1 - t);
      },
      outCirc: function (t) {
        return Math.sqrt(t);
      },
      inOutCirc: function (t) {
        return t < 0.5
          ? 0.5 * (1 - Math.sqrt(1 - 2 * t))
          : 0.5 * (1 + Math.sqrt(2 * t - 1));
      },
      inBack: function (t) {
        return t * t * (2.70158 * t - 1.70158);
      },
      outBack: function (t) {
        return 1 + --t * t * (2.70158 * t + 1.70158);
      },
      inOutBack: function (t) {
        return t < 0.5
          ? t * t * (7 * t - 2.5) * 2
          : 1 + --t * t * 2 * (7 * t + 2.5);
      },
      inBounce: function (t) {
        var e = t * t;
        return e * e * Math.sin(t * Math.PI * 4.5);
      },
      outBounce: function (t) {
        var e = (t - 1) * (t - 1);
        return 1 - e * e * Math.cos(t * Math.PI * 4.5);
      },
      inOutBounce: function (t) {
        var e;
        return t < 0.45
          ? 8 * (e = t * t) * e * Math.sin(t * Math.PI * 9)
          : t < 0.55
          ? 0.5 + 0.75 * Math.sin(t * Math.PI * 4)
          : 1 - 8 * (e = (t - 1) * (t - 1)) * e * Math.sin(t * Math.PI * 9);
      },
      inWobble: function (t) {
        return (0.04 + 0.02 / t) * Math.sin(25 * t);
      },
      outWobble: function (t) {
        return (0.04 - 0.04 / t) * Math.sin(25 * t) + 1;
      },
      inOutWobble: function (t) {
        return (t -= 0.5) < 0
          ? (0.02 + 0.01 / t) * Math.sin(50 * t)
          : (0.02 - 0.01 / t) * Math.sin(50 * t) + 1;
      },
      outElastic: function (t, e) {
        return (
          (e = e || 0.35),
          Math.pow(2, -10 * t) * Math.sin(((t - e / 4) * (2 * Math.PI)) / e) + 1
        );
      },
    });
})(),
  (function () {
    var d = "num",
      l = "var";
    function h(t) {
      return pd.isString(t) && null !== t.match(/^[A-Za-z]+$/);
    }
    var u = /\s*([A-Za-z]+|(\d*\.?\d+\.?)+|\S)\s*/g;
    function a(t) {
      var e = 0,
        r = (function (t) {
          for (var e, r = []; null !== (e = u.exec(t)); ) r.push(e[1]);
          return r;
        })(t);
      function n() {
        return r[e];
      }
      function i(t) {
        e++;
      }
      function a() {
        var t,
          e = n();
        if (((t = e), pd.isString(t) && null !== t.match(/^\d*\.?\d+\.?/)))
          return i(), { type: d, value: e };
        if (h(e)) return i(), { type: l, name: e };
        if ("(" === e) {
          i();
          var r = s();
          if (")" !== n())
            throw new SyntaxError("Unmatched closing bracket found.");
          return i(), r;
        }
        if ("-" === e) return i(), ((r = a()).value = "-" + r.value), r;
        throw new SyntaxError(
          "Expected a number, variable or bracket, but found: " + e
        );
      }
      function o() {
        for (var t = a(), e = n(); "*" === e || "/" === e || "^" === e; ) {
          i(), (t = { type: e, left: t, right: a() }), (e = n());
        }
        return t;
      }
      function s() {
        for (var t = o(), e = n(); "+" === e || "-" === e; ) {
          i(), (t = { type: e, left: t, right: o() }), (e = n());
        }
        return t;
      }
      return s();
    }
    var o = {},
      e = { PI: Math.PI, E: Math.E };
    function s(t) {
      switch (t.type) {
        case d:
          return parseFloat(t.value);
        case l:
          return e[t.name] || o[t.name] || 0;
        case "^":
          return Math.pow(s(t.left), s(t.right));
        case "+":
          return s(t.left) + s(t.right);
        case "-":
          return s(t.left) - s(t.right);
        case "*":
          return s(t.left) * s(t.right);
        case "/":
          return s(t.left) / s(t.right);
      }
      throw new SyntaxError("Unrecognised symbol: " + t.toString());
    }
    var c = null;
    (pd.parseEqn = c =
      function (t, e) {
        var r;
        pd.parseEqn.error && (pd.parseEqn.error = "");
        try {
          if (pd.isString(t) && 0 <= t.indexOf("=")) {
            var n = t.split("=", 2);
            if (1 < n.length) {
              r = s(a(n[1]));
              var i = n[0].trim();
              h(i) && ((o[i] = r), c.emit("assign", i, r));
            } else r = s(a(n[0]));
          } else r = parseFloat(t);
          if (NaN == r)
            throw new SyntaxError("Invalid numeric input: " + t.toString());
        } catch (t) {
          (pd.parseEqn.error = t.message),
            c.emit("error", pd.parseEqn.error),
            (r = NaN);
        }
        return r;
      }),
      pd.addSimpleEventHandling(c),
      (pd.parseEqn.error = "");
  })();
var pd3D = pd3D || {};
!(function () {
  (pd3D.VectorArray = {}),
    (pd3D.VectorArray.origin = [0, 0, 0]),
    (pd3D.VectorArray.unitX = [1, 0, 0]),
    (pd3D.VectorArray.unitY = [0, 1, 0]),
    (pd3D.VectorArray.unitZ = [0, 0, 1]),
    (pd3D.VectorArray.create = function (t, e, r) {
      return 1 == arguments.length
        ? pd.isArray(t)
          ? [+t[0] || 0, +t[1] || 0, +t[2] || 0]
          : [(t = pd.toNumber(t, 0)), t, t]
        : [+t || 0, +e || 0, +r || 0];
    }),
    (pd3D.VectorArray.copy = function (t) {
      return [+t[0] || 0, +t[1] || 0, +t[2] || 0];
    }),
    (pd3D.VectorArray.min = function (t, e, r) {
      return Math.min(e[t], r[t]);
    }),
    (pd3D.VectorArray.max = function (t, e, r) {
      return Math.max(e[t], r[t]);
    }),
    (pd3D.VectorArray.length = function (t) {
      return (
        (t[2] = +t[2] || 0), Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2])
      );
    }),
    (pd3D.VectorArray.dot = function (t, e) {
      return t[0] * e[0] + t[1] * e[1] + t[2] * e[2];
    }),
    (pd3D.VectorArray.closeTo = function (t, e, r) {
      return (
        (r = r || pd.Const.EPSILON),
        Math.abs(e[0] - t[0]) <= r &&
          Math.abs(e[1] - t[1]) <= r &&
          Math.abs(e[2] - t[2]) <= r
      );
    }),
    (pd3D.VectorArray.closeToInPlane = function (t, e, r, n) {
      switch (((n = n || pd.Const.EPSILON), r)) {
        default:
          return Math.abs(e[0] - t[0]) <= n && Math.abs(e[1] - t[1]) <= n;
        case 1:
          return Math.abs(e[1] - t[1]) <= n && Math.abs(e[2] - t[2]) <= n;
        case 2:
          return Math.abs(e[0] - t[0]) <= n && Math.abs(e[2] - t[2]) <= n;
      }
    }),
    (pd3D.VectorArray.toPolarArray = function (t) {
      var e = pd3D.VectorArray.length(t);
      return e < 1e-9
        ? [0, 0]
        : [0 < t[0] * t[0] ? Math.atan2(t[1], t[0]) : 0, Math.asin(t[2] / e)];
    }),
    (pd3D.VectorArray.azimuthAngle = function (t) {
      return Math.atan2(t[1], t[0]);
    }),
    (pd3D.VectorArray.azimuthOfLine = function (t, e) {
      return Math.atan2(e[1] - t[1], e[0] - t[0]);
    }),
    (pd3D.VectorArray.azimuthBetweenVectors = function (t, e) {
      return Math.atan2(e[1], e[0]) - Math.atan2(t[1], t[0]);
    }),
    (pd3D.VectorArray.azimuthBetweenPoints = function (t, e, r) {
      return (
        Math.atan2(r[1] - t[1], r[0] - t[0]) -
        Math.atan2(e[1] - t[1], e[0] - t[0])
      );
    }),
    (pd3D.VectorArray.altitudeAngle = function (t) {
      return (
        (t[2] = +t[2] || 0),
        Math.asin(pd.safeDivide(t[2], pd3D.VectorArray.length(t)))
      );
    }),
    (pd3D.VectorArray.altitudeOfLine = function (t, e) {
      var r = e[0] - t[0],
        n = e[1] - t[1],
        i = e[2] - t[2],
        a = Math.sqrt(r * r + n * n + i * i);
      return Math.asin(pd.safeDivide(i, a));
    }),
    (pd3D.VectorArray.altitudeBetweenVectors = function (t, e) {
      return (
        Math.asin(pd.safeDivide(e[2], pd3D.VectorArray.length(e))) -
        Math.asin(pd.safeDivide(t[2], pd3D.VectorArray.length(t)))
      );
    }),
    (pd3D.VectorArray.altitudeBetweenPoints = function (t, e, r) {
      return (
        pd3D.VectorArray.altitudeOfLine(t, r) -
        pd3D.VectorArray.altitudeOfLine(t, e)
      );
    }),
    (pd3D.VectorArray.angleBetweenVectors = function (t, e) {
      var r = t[0] * e[0] + t[1] * e[1] + t[2] * e[2],
        n = pd3D.VectorArray.length(t) * pd3D.VectorArray.length(e),
        i = pd.safeDivide(r, n);
      return 1 <= i ? 0 : i <= -1 ? Math.PI : Math.acos(i);
    }),
    (pd3D.VectorArray.angleBetweenPoints = function (t, e, r) {
      var n = t[0] - e[0],
        i = t[1] - e[1],
        a = t[2] - e[2],
        o = r[0] - e[0],
        s = r[1] - e[1],
        d = r[2] - e[2],
        l = Math.sqrt(n * n + i * i + a * a),
        h = Math.sqrt(o * o + s * s + d * d),
        u = n * o + i * s + a * d,
        c = pd.safeDivide(u, l * h);
      return 1 <= c ? 0 : c <= -1 ? Math.PI : Math.acos(c);
    }),
    (pd3D.VectorArray.distancePointToPoint = function (t, e) {
      var r = e[0] - t[0],
        n = e[1] - t[1],
        i = e[2] - t[2];
      return Math.sqrt(r * r + n * n + i * i);
    }),
    (pd3D.VectorArray.distanceProjectedOnPlane = function (t, e, r) {
      var n, i;
      switch (r) {
        default:
          (n = e[0] - t[0]), (i = e[1] - t[1]);
          break;
        case 1:
          (n = e[1] - t[1]), (i = e[2] - t[2]);
          break;
        case 2:
          (n = e[0] - t[0]), (i = e[2] - t[2]);
      }
      return Math.sqrt(n * n + i * i);
    }),
    (pd3D.VectorArray.distanceInVectorDirection = function (t, e, r) {
      var n = pd3D.VectorArray.distancePointToPoint(t, r),
        i = pd3D.VectorArray.normalize([r[0] - t[0], r[1] - t[1], r[2] - t[2]]),
        a = e[0] * i[0] + e[1] * i[1] + e[2] * i[2],
        o = pd3D.VectorArray.length(e) * pd3D.VectorArray.length(i);
      return pd.constrainTo(pd.safeDivide(a, o), -1, 1) * n;
    }),
    (pd3D.VectorArray.distancePointToLineSegment = function (t, e, r, n) {
      var i = pd3D.VectorArray.distancePointToPoint(e, t),
        a = pd3D.VectorArray.distancePointToPoint(r, t),
        o = pd3D.VectorArray.distancePointToPoint(e, r),
        s =
          (t[0] - e[0]) * (r[0] - e[0]) +
          (t[1] - e[1]) * (r[1] - e[1]) +
          (t[2] - e[2]) * (r[2] - e[2]),
        d = pd.constrainTo(pd.safeDivide(s, i * o), -1, 1),
        l = Math.acos(d);
      if (l > pd.Const.HALF_PI) return n && pd3D.VectorArray.set(n, e), i;
      var h = d * i;
      return o < h
        ? (n && pd3D.VectorArray.set(n, r), a)
        : (n && pd3D.VectorArray.lerpBetween(n, e, r, pd.safeDivide(h, o)),
          i * Math.sin(l));
    }),
    (pd3D.VectorArray.distanceRayToLineSegment = function (t, e, r, n, i) {
      i = i || [];
      var a = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
        o = [n[0] - r[0], n[1] - r[1], n[2] - r[2]],
        s = pd3D.VectorArray.cross([], a, o),
        d = pd3D.VectorArray.add([], r, s),
        l = pd3D.PlaneArray.createFromTriangle(r, n, d);
      return pd3D.PlaneArray.intersect(i, t, e, l) ||
        (pd3D.PlaneArray.calcFromNormalAndPoint(l, s, r),
        pd3D.PlaneArray.intersect(i, t, e, l))
        ? pd3D.VectorArray.distancePointToLineSegment(i, r, n)
        : 1 / 0;
    }),
    (pd3D.VectorArray.closestPointOnVector = function (t, e, r, n) {
      n = n || [];
      var i = pd3D.PlaneArray.createFromNormalAndPoint(r, t),
        a = pd3D.VectorArray.translateInVectorDirection([], e, r, 1e3);
      return (
        pd3D.PlaneArray.intersect(n, e, a, i) || pd3D.VectorArray.set(n, e), n
      );
    }),
    (pd3D.VectorArray.closestPointOnLineSegment = function (t, e, r, n) {
      return pd3D.VectorArray.distancePointToLineSegment(t, e, r, n);
    }),
    (pd3D.VectorArray.triangleArea = function (t, e, r) {
      var n = pd3D.VectorArray.distancePointToPoint(t, e),
        i = pd3D.VectorArray.distancePointToPoint(e, r),
        a = pd3D.VectorArray.distancePointToPoint(r, t),
        o = (n + i + a) / 2;
      return Math.sqrt(o * (o - n) * (o - i) * (o - a));
    }),
    (pd3D.VectorArray.set = function (t, e, r, n) {
      return (
        2 == arguments.length
          ? pd.isArray(e)
            ? ((t[0] = +e[0] || 0), (t[1] = +e[1] || 0), (t[2] = +e[2] || 0))
            : (t[0] = t[1] = t[2] = +e || 0)
          : ((t[0] = +e || 0), (t[1] = +r || 0), (t[2] = +n || 0)),
        t
      );
    }),
    (pd3D.VectorArray.add = function (t, e, r) {
      return (
        (t[0] = e[0] + r[0]), (t[1] = e[1] + r[1]), (t[2] = e[2] + r[2]), t
      );
    }),
    (pd3D.VectorArray.addComponents = function (t, e, r, n, i) {
      return (t[0] = e[0] + r), (t[1] = e[1] + n), (t[2] = e[2] + i), t;
    }),
    (pd3D.VectorArray.subtract = function (t, e, r) {
      return (
        (t[0] = e[0] - r[0]), (t[1] = e[1] - r[1]), (t[2] = e[2] - r[2]), t
      );
    }),
    (pd3D.VectorArray.negate = function (t, e) {
      return (e = e || t), (t[0] = -e[0]), (t[1] = -e[1]), (t[2] = -e[2]), t;
    }),
    (pd3D.VectorArray.normalize = function (t, e) {
      var r = (e = e || t)[0],
        n = e[1],
        i = +e[2] || 0,
        a = r * r + n * n + i * i;
      return (
        0 < a &&
          ((a = 1 / Math.sqrt(a)),
          (t[0] = r * a),
          (t[1] = n * a),
          (t[2] = i * a)),
        t
      );
    }),
    (pd3D.VectorArray.cross = function (t, e, r) {
      return (
        (t[0] = e[1] * r[2] - e[2] * r[1]),
        (t[1] = e[2] * r[0] - e[0] * r[2]),
        (t[2] = e[0] * r[1] - e[1] * r[0]),
        t
      );
    }),
    (pd3D.VectorArray.translate = function (t, e, r, n, i) {
      return (
        3 == arguments.length
          ? pd.isArray(r)
            ? ((t[0] = e[0] + (+r[0] || 0)),
              (t[1] = e[1] + (+r[1] || 0)),
              (t[2] = e[2] + (+r[2] || 0)))
            : ((r = +r || 0),
              (t[0] = e[0] + r),
              (t[1] = e[1] + r),
              (t[2] = e[2] + r))
          : ((t[0] = e[0] + (+r || 0)),
            (t[1] = e[1] + (+n || 0)),
            (t[2] = e[2] + (+i || 0))),
        t
      );
    }),
    (pd3D.VectorArray.translateInVectorDirection = function (t, e, r, n) {
      return (
        (t[0] = e[0] + n * r[0]),
        (t[1] = e[1] + n * r[1]),
        (t[2] = e[2] + n * r[2]),
        t
      );
    }),
    (pd3D.VectorArray.scale = function (t, e, r) {
      return (
        pd.isArray(r)
          ? ((t[0] = e[0] * r[0]), (t[1] = e[1] * r[1]), (t[2] = e[2] * r[2]))
          : ((t[0] = e[0] * r), (t[1] = e[1] * r), (t[2] = e[2] * r)),
        t
      );
    }),
    (pd3D.VectorArray.lerp = function (t, e, r) {
      return (t[0] = e[0] * r), (t[1] = e[1] * r), (t[2] = e[2] * r), t;
    }),
    (pd3D.VectorArray.lerpBetween = function (t, e, r, n) {
      var i = 1 - n;
      return (
        (t[0] = i * e[0] + n * r[0]),
        (t[1] = i * e[1] + n * r[1]),
        (t[2] = i * e[2] + n * r[2]),
        t
      );
    }),
    (pd3D.VectorArray.lerpByDistance = function (t, e, r, n) {
      var i = pd3D.VectorArray.distancePointToPoint(e, r);
      return 1e-9 < i
        ? pd3D.VectorArray.lerpBetween(t, e, r, n / i)
        : ((t[0] = e[0]), (t[1] = e[1]), (t[2] = +e[2] || 0), t);
    }),
    (pd3D.VectorArray.vectorBetweenPoints = function (t, e, r) {
      return (
        (t[0] = r[0] - e[0]), (t[1] = r[1] - e[1]), (t[2] = r[2] - e[2]), t
      );
    }),
    (pd3D.VectorArray.calcNormalFromTriangle = function (t, e, r, n) {
      var i = [r[0] - e[0], r[1] - e[1], r[2] - e[2]],
        a = [n[0] - e[0], n[1] - e[1], n[2] - e[2]];
      return pd3D.VectorArray.cross(t, i, a), pd3D.VectorArray.normalize(t), !0;
    }),
    (pd3D.VectorArray.calcNormalFromPath = function (t, e) {
      if (2 < e.length) {
        var r = e.length,
          n = [0, 0, 0],
          i = 0;
        t[0] = t[1] = t[2] = 0;
        for (var a = 2; a < r; ++a)
          pd3D.VectorArray.calcNormalFromTriangle(n, e[0], e[a - 1], e[a]) &&
            ((t[0] += n[0]), (t[1] += n[1]), (t[2] += n[2]), ++i);
        return 0 < i && ((t[0] /= i), (t[1] /= i), (t[2] /= i)), !0;
      }
      return !1;
    }),
    (pd3D.VectorArray.applyMatrix = function (t, e, r) {
      var n = +e[0] || 0,
        i = +e[1] || 0,
        a = +e[2] || 0;
      return (
        (t[0] = r[0] * n + r[4] * i + r[8] * a + r[12]),
        (t[1] = r[1] * n + r[5] * i + r[9] * a + r[13]),
        (t[2] = r[2] * n + r[6] * i + r[10] * a + r[14]),
        t
      );
    }),
    (pd3D.VectorArray.applyQuaternion = function (t, e, r) {
      var n = +e[0] || 0,
        i = +e[1] || 0,
        a = +e[2] || 0,
        o = +r[0] || 0,
        s = +r[1] || 0,
        d = +r[2] || 0,
        l = +r[3] || 0,
        h = l * n + s * a - d * i,
        u = l * i + d * n - o * a,
        c = l * a + o * i - s * n,
        p = -o * n - s * i - d * a;
      return (
        (t[0] = h * l + p * -o + u * -d - c * -s),
        (t[1] = u * l + p * -s + c * -o - h * -d),
        (t[2] = c * l + p * -d + h * -s - u * -o),
        t
      );
    }),
    (pd3D.VectorArray.sphericalToCartesian = function (t, e, r, n) {
      var i = Math.cos(e),
        a = Math.sin(e),
        o = Math.cos(r),
        s = Math.sin(r),
        d = n * o;
      return (t[0] = d * i), (t[1] = d * a), (t[2] = n * s), t;
    }),
    (pd3D.VectorArray.intersectLines2D = function (t, e, r, n, i, a) {
      var o = 0,
        s = 1,
        d = 2;
      switch (Math.abs(a)) {
        case 1:
          (o = 1), (s = 2), (d = 0);
          break;
        case 2:
          (o = 0), (s = 2), (d = 1);
      }
      var l = (i[s] - n[s]) * (r[o] - e[o]) - (i[o] - n[o]) * (r[s] - e[s]);
      if (pd.closeTo(l, 0)) return !1;
      var h = e[s] - n[s],
        u = e[o] - n[o],
        c = (i[o] - n[o]) * h - (i[s] - n[s]) * u,
        p = (r[o] - e[o]) * h - (r[s] - e[s]) * u;
      return (
        (h = c / l),
        (u = p / l),
        (t[o] = e[o] + h * (r[o] - e[o])),
        (t[s] = e[s] + h * (r[s] - e[s])),
        (t[d] = 0.25 * (e[d] + r[d] + n[d] + i[d])),
        !0
      );
    }),
    (pd3D.VectorArray.intersectLines3D = function (t, e, r, n, i, a) {
      var o = [r[0] - e[0], r[1] - e[1], r[2] - e[2]],
        s = [i[0] - n[0], i[1] - n[1], i[2] - n[2]],
        d = pd3D.VectorArray.create();
      a ? pd3D.VectorArray.set(d, a) : pd3D.VectorArray.cross(d, o, s);
      var l = pd3D.VectorArray.cross([], s, d),
        h = pd3D.PlaneArray.createFromNormalAndPoint(l, r);
      return pd3D.PlaneArray.intersect(t, e, r, h);
    }),
    (pd3D.VectorArray.spline = function (t) {
      var e,
        r = [],
        d = (t = t || {}).vertices || [],
        l = pd.toInteger(t.degree, 2),
        n = pd.toNumber(t.increment, 0.05),
        h = t.weights || null,
        u = t.knots || null,
        c = d[0].length,
        p = d.length;
      if (l < 1) throw new Error("degree must be at least 1 (linear)");
      if (p <= l) throw new Error("degree must be less than vertex count");
      if (!h) for (h = [], e = 0; e < p; ++e) h[e] = 1;
      if (u) {
        if (u.length !== p + l + 1) throw new Error("Bad knot vector length");
      } else {
        for (u = [], e = 0; e < l + 1; ++e) u[e] = 0;
        for (e = 3; e < p; ++e) u[e] = p - 2;
        for (e = 0; e < l + 1; ++e) u[p + e] = p - 1;
      }
      var f = [l, u.length - 1 - l],
        m = u[f[1]],
        g = u[f[0]];
      function i(t, e) {
        var r, n, i, a, o;
        if ((t = t * (m - g) + g) < g || m < t)
          throw new Error("Parameter 't' is out of bounds");
        for (a = f[0]; a < f[1] && !(t >= u[a] && t <= u[a + 1]); ++a);
        var s = [];
        for (n = 0; n < p; ++n) {
          for (s[n] = [], i = 0; i < c; ++i) s[n][i] = d[n][i] * h[n];
          s[n][c] = h[n];
        }
        for (o = 1; o <= l + 1; ++o)
          for (n = a; a - l - 1 + o < n; n--)
            for (
              r = (t - u[n]) / (u[n + l + 1 - o] - u[n]), i = 0;
              i < c + 1;
              ++i
            )
              s[n][i] = (1 - r) * s[n - 1][i] + r * s[n][i];
        for (e = e || [], n = 0; n < c; ++n) e[n] = s[a][n] / s[a][c];
        return e;
      }
      for (var a = 1 + 0.5 * n, o = 0; o < a; o += n) r.push(i(Math.min(o, 1)));
      return r;
    }),
    (pd3D.VectorArray.toString = function (t) {
      return (
        "[ " +
        pd.toStringWithPrecisionRange(t[0], 1, 9) +
        ", " +
        pd.toStringWithPrecisionRange(t[1], 1, 9) +
        ", " +
        pd.toStringWithPrecisionRange(t[2], 1, 9) +
        " ]"
      );
    }),
    (pd3D.PlaneArray = {}),
    (pd3D.PlaneArray.create = function (t, e, r, n) {
      return [+t || 0, +e || 0, +r || 0, +n || 0];
    }),
    (pd3D.PlaneArray.createFromNormalAndPoint = function (t, e) {
      return pd3D.PlaneArray.calcFromNormalAndPoint(
        pd3D.PlaneArray.create(),
        t,
        e
      );
    }),
    (pd3D.PlaneArray.createFromPoints = function (t, e, r) {
      var n = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
        i = [r[0] - e[0], r[1] - e[1], r[2] - e[2]],
        a = pd3D.VectorArray.cross([], n, i);
      return (
        pd3D.VectorArray.normalize(a),
        [a[0], a[1], a[2], -(a[0] * e[0] + a[1] * e[1] + a[2] * e[2])]
      );
    }),
    (pd3D.PlaneArray.createFromTriangle = function (t, e, r) {
      var n = pd3D.PlaneArray.create();
      return pd3D.VectorArray.calcNormalFromTriangle(n, t, e, r)
        ? ((n[3] = -(n[0] * t[0] + n[1] * t[1] + n[2] * t[2])), n)
        : null;
    }),
    (pd3D.PlaneArray.createFromPath = function (t) {
      var e = [];
      return pd3D.VectorArray.calcNormalFromPath(e, t)
        ? pd3D.PlaneArray.createFromNormalAndPoint(e, t[0])
        : null;
    }),
    (pd3D.PlaneArray.calcFromNormalAndPoint = function (t, e, r) {
      var n = r[0],
        i = r[1],
        a = +r[2] || 0;
      return (
        (t[0] = e[0]),
        (t[1] = e[1]),
        (t[2] = +e[2] || 0),
        pd3D.VectorArray.normalize(t),
        (t[3] = -(t[0] * n + t[1] * i + t[2] * a)),
        t
      );
    }),
    (pd3D.PlaneArray.calcFromTriangle = function (t, e, r, n) {
      return (
        !!pd3D.VectorArray.calcNormalFromTriangle(t, e, r, n) &&
        ((t[3] = -(t[0] * e[0] + t[1] * e[1] + t[2] * e[2])), !0)
      );
    }),
    (pd3D.PlaneArray.calcFromPath = function (t, e) {
      if (pd3D.VectorArray.calcNormalFromPath(t, e)) {
        var r = e[0];
        return (t[3] = -(t[0] * r[0] + t[1] * r[1] + t[2] * r[2])), !0;
      }
      return !1;
    }),
    (pd3D.PlaneArray.isPlanarPath = function (t, e, r) {
      if ((this.checkPlaneEqn(), pd.isArray(e) && 2 < e.length)) {
        var n, i;
        r = Math.max(1e-6, pd.toNumber(r, 0.001));
        for (var a = 0, o = e.length; a < o; ++a)
          if (
            ((n = e[a]),
            (i = t[0] * n[0] + t[1] * n[1] + t[2] * n[2] + t[3]),
            Math.abs(i) > r)
          )
            return !1;
        return !0;
      }
      return !1;
    }),
    (pd3D.PlaneArray.inFront = function (t, e) {
      return -1e-6 <= e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3];
    }),
    (pd3D.PlaneArray.sameSide = function (t, e, r) {
      return (
        -1e-9 <=
        (r[0] * t[0] + r[1] * t[1] + r[2] * t[2] + r[3]) *
          (r[0] * e[0] + r[1] * e[1] + r[2] * e[2] + r[3])
      );
    }),
    (pd3D.PlaneArray.intersect = function (t, e, r, n) {
      (e[2] = +e[2] || 0), (r[2] = +r[2] || 0);
      var i = -n[0] * e[0] - n[1] * e[1] - n[2] * e[2] - n[3],
        a =
          n[0] * r[0] -
          n[0] * e[0] +
          (n[1] * r[1] - n[1] * e[1]) +
          (n[2] * r[2] - n[2] * e[2]);
      if (Math.abs(a) < pd.Const.EPSILON) return !1;
      var o = i / a;
      return (
        (t[0] = o * (r[0] - e[0]) + e[0]),
        (t[1] = o * (r[1] - e[1]) + e[1]),
        (t[2] = o * (r[2] - e[2]) + e[2]),
        !0
      );
    }),
    (pd3D.PlaneArray.intersectRay = function (t, e, r, n) {
      var i = pd3D.VectorArray.translateInVectorDirection([], e, r, 1e3);
      return pd3D.PlaneArray.intersect(t, e, i, n);
    }),
    (pd3D.PlaneArray.closestPoint = function (t, e, r) {
      var n = pd3D.VectorArray.subtract([], e, r);
      return pd3D.PlaneArray.intersect(t, e, n, r);
    }),
    (pd3D.PlaneArray.closestPointByAxis = function (t, e, r) {
      var n,
        i = [],
        a = [],
        o = !1,
        s = 1 / 0;
      return (
        pd3D.VectorArray.set(i, e[0] + 1e3, e[1], e[2]),
        pd3D.PlaneArray.intersect(a, e, i, r) &&
          (n = Math.abs(e[0] - i[0])) < s &&
          (pd3D.VectorArray.set(t, a), (s = n), (o = !0)),
        pd3D.VectorArray.set(i, e[0], e[1] + 1e3, e[2]),
        pd3D.PlaneArray.intersect(a, e, i, r) &&
          (n = Math.abs(e[1] - i[1])) < s &&
          (pd3D.VectorArray.set(t, a), (s = n), (o = !0)),
        pd3D.VectorArray.set(i, e[0], e[1], e[2] + 1e3),
        pd3D.PlaneArray.intersect(a, e, i, r) &&
          (n = Math.abs(e[2] - i[2])) < s &&
          (pd3D.VectorArray.set(t, a), (s = n), (o = !0)),
        o
      );
    }),
    (pd3D.PlaneArray.clockwiseWinding = function (t, e, r, n) {
      var i = (e[1] - t[1]) * (r[2] - t[2]) - (r[1] - t[1]) * (e[2] - t[2]),
        a = (e[2] - t[2]) * (r[0] - t[0]) - (r[2] - t[2]) * (e[0] - t[0]),
        o = (e[0] - t[0]) * (r[1] - t[1]) - (r[0] - t[0]) * (e[1] - t[1]);
      return 0 <= i * n[0] + a * n[1] + o * n[2];
    }),
    (pd3D.PlaneArray.insideTriangle = function (t, e, r, n, i) {
      var a = pd3D.PlaneArray.clockwiseWinding(e, r, t, i),
        o = pd3D.PlaneArray.clockwiseWinding(r, n, t, i);
      return a == o && o == pd3D.PlaneArray.clockwiseWinding(n, e, t, i);
    }),
    (pd3D.QuatArray = {}),
    (pd3D.QuatArray.create = function (t, e, r, n) {
      return [+t || 0, +e || 0, +r || 0, +n || 0];
    }),
    (pd3D.QuatArray.normalize = function (t, e) {
      var r = +(e = e || t)[0] || 0,
        n = +e[1] || 0,
        i = +e[2] || 0,
        a = +e[3] || 0,
        o = r * r + n * n + i * i + a * a;
      return (
        0 < o &&
          ((o = 1 / Math.sqrt(o)),
          (t[0] = e[0] * o),
          (t[1] = e[1] * o),
          (t[2] = e[2] * o),
          (t[3] = e[3] * o)),
        t
      );
    }),
    (pd3D.QuatArray.invert = function (t, e) {
      var r = +(e = e || t)[0] || 0,
        n = +e[1] || 0,
        i = +e[2] || 0,
        a = +e[3] || 0,
        o = r * r + n * n + i * i + a * a,
        s = o ? 1 / o : 0;
      return (
        (t[0] = -r * s), (t[1] = -n * s), (t[2] = -i * s), (t[3] = a * s), t
      );
    }),
    (pd3D.QuatArray.conjugate = function (t, e) {
      return (
        (e = e || t),
        (t[0] = -e[0]),
        (t[1] = -e[1]),
        (t[2] = -e[2]),
        (t[3] = e[3]),
        t
      );
    }),
    (pd3D.QuatArray.multiply = function (t, e, r) {
      var n = e[0],
        i = e[1],
        a = e[2],
        o = e[3],
        s = r[0],
        d = r[1],
        l = r[2],
        h = r[3];
      return (
        (t[0] = n * h + i * l - a * d + o * s),
        (t[1] = -n * l + i * h + a * s + o * d),
        (t[2] = n * d - i * s + a * h + o * l),
        (t[3] = -n * s - i * d - a * l + o * h),
        t
      );
    }),
    (pd3D.QuatArray.setAxisAngle = function (t, e, r) {
      e *= 0.5;
      var n = Math.sin(e);
      return (
        (t[0] = n * r[0]),
        (t[1] = n * r[1]),
        (t[2] = n * r[2]),
        (t[3] = Math.cos(e)),
        t
      );
    }),
    (pd3D.QuatArray.rotateBetweenVectors = function (t, e, r) {
      var n = e[0],
        i = e[1],
        a = e[2],
        o = r[0],
        s = r[1],
        d = r[2],
        l = n * o + i * s + a * d,
        h = (t[0] = i * d - a * s),
        u = (t[1] = a * o - n * d),
        c = (t[2] = n * s - i * o);
      return (
        (t[3] = l + Math.sqrt(l * l + h * h + u * u + c * c)),
        pd3D.QuatArray.normalize(t)
      );
    }),
    (pd3D.QuatArray.toMatrixArray4x4 = function (t, e) {
      var r = e[0],
        n = e[1],
        i = e[2],
        a = e[3],
        o = 1 / Math.sqrt(r * r + n * n + i * i + a * a);
      return (
        (r *= o),
        (n *= o),
        (i *= o),
        (a *= o),
        ((t = t || [])[0] = 1 - 2 * n * n - 2 * i * i),
        (t[1] = 2 * r * n - 2 * i * a),
        (t[2] = 2 * r * i + 2 * n * a),
        (t[3] = 0),
        (t[4] = 2 * r * n + 2 * i * a),
        (t[5] = 1 - 2 * r * r - 2 * i * i),
        (t[6] = 2 * n * i - 2 * r * a),
        (t[7] = 0),
        (t[8] = 2 * r * i - 2 * n * a),
        (t[9] = 2 * n * i + 2 * r * a),
        (t[10] = 1 - 2 * r * r - 2 * n * n),
        (t[11] = 0),
        (t[12] = 0),
        (t[13] = 0),
        (t[14] = 0),
        (t[15] = 1),
        t
      );
    }),
    (pd3D.BBoxArray = {}),
    (pd3D.BBoxArray.create = function (t, e, r) {
      var n = {};
      return (
        (t = t || [-1, -1, 0]),
        (e = e || [1, 1, 1]),
        (n.min = pd3D.VectorArray.create(
          Math.min(t[0], e[0]),
          Math.min(t[1], e[1]),
          Math.min(t[2], e[2])
        )),
        (n.max = pd3D.VectorArray.create(
          Math.max(t[0], e[0]),
          Math.max(t[1], e[1]),
          Math.max(t[2], e[2])
        )),
        (n.axis = pd.toInteger(r, 0)),
        n
      );
    }),
    (pd3D.BBoxArray.createFromCenterAndSize = function (t, e, r) {
      var n = {};
      if (
        ((t[0] = pd.toNumber(t[0], 0)),
        (t[1] = pd.toNumber(t[1], 0)),
        (t[2] = pd.toNumber(t[2], 0)),
        pd.isArray(e))
      )
        (e[0] = 0.5 * pd.toNumber(e[0], 1)),
          (e[1] = 0.5 * pd.toNumber(e[1], 1)),
          (e[2] = 0.5 * pd.toNumber(e[2], 1));
      else {
        var i = 0.5 * pd.toNumber(e, 1);
        e = [i, i, i];
      }
      return (
        (n.min = pd3D.VectorArray.create(
          t[0] - e[0],
          t[0] - e[1],
          t[0] - e[2]
        )),
        (n.max = pd3D.VectorArray.create(
          t[0] + e[0],
          t[0] + e[1],
          t[0] + e[2]
        )),
        (n.axis = pd.toInteger(r, 0)),
        n
      );
    }),
    (pd3D.BBoxArray.set = function (t, e, r, n) {
      return (
        pd3D.VectorArray.set(
          t.min,
          Math.min(e[0], r[0]),
          Math.min(e[1], r[1]),
          Math.min(e[2], r[2])
        ),
        pd3D.VectorArray.set(
          t.max,
          Math.max(e[0], r[0]),
          Math.max(e[1], r[1]),
          Math.max(e[2], r[2])
        ),
        (t.axis = pd.toInteger(n, 0)),
        t
      );
    }),
    (pd3D.BBoxArray.setFromCenterAndSize = function (t, e, r, n) {
      if (
        ((e[0] = pd.toNumber(e[0], 0)),
        (e[1] = pd.toNumber(e[1], 0)),
        (e[2] = pd.toNumber(e[2], 0)),
        pd.isArray(r))
      )
        (r[0] = 0.5 * pd.toNumber(r[0], 1)),
          (r[1] = 0.5 * pd.toNumber(r[1], 1)),
          (r[2] = 0.5 * pd.toNumber(r[2], 1));
      else {
        var i = 0.5 * pd.toNumber(r, 1);
        r = [i, i, i];
      }
      return (
        pd3D.VectorArray.set(t.min, e[0] - r[0], e[0] - r[1], e[0] - r[2]),
        pd3D.VectorArray.set(t.max, e[0] + r[0], e[0] + r[1], e[0] + r[2]),
        (t.axis = pd.toInteger(n, 0)),
        t
      );
    }),
    (pd3D.BBoxArray.moveBy = function (t, e, r, n) {
      var i = t.min,
        a = t.max;
      return (
        pd.isNumeric(e) && ((i[0] += e), (a[0] += e)),
        pd.isNumeric(r) && ((i[1] += r), (a[1] += r)),
        pd.isNumeric(n) && ((i[2] += n), (a[2] += n)),
        t
      );
    }),
    (pd3D.BBoxArray.minBound = function (t, e, r) {
      return Math.min(e.min[t], r.min[t]);
    }),
    (pd3D.BBoxArray.maxBound = function (t, e, r) {
      return Math.max(e.max[t], r.max[t]);
    }),
    (pd3D.BBoxArray.includePoint = function (t, e) {
      var r = t.min,
        n = t.max;
      return (
        r[0] > e[0] && (r[0] = e[0]),
        r[1] > e[1] && (r[1] = e[1]),
        r[2] > e[2] && (r[2] = e[2]),
        n[0] < e[0] && (n[0] = e[0]),
        n[1] < e[1] && (n[1] = e[1]),
        n[2] < e[2] && (n[2] = e[2]),
        t
      );
    }),
    (pd3D.BBoxArray.includeBox = function (t, e) {
      var r = t.min,
        n = t.max;
      return (
        r[0] > e.min[0] && (r[0] = e.min[0]),
        r[1] > e.min[1] && (r[1] = e.min[1]),
        r[2] > e.min[2] && (r[2] = e.min[2]),
        n[0] < e.max[0] && (n[0] = e.max[0]),
        n[1] < e.max[1] && (n[1] = e.max[1]),
        n[2] < e.max[2] && (n[2] = e.max[2]),
        t
      );
    }),
    (pd3D.BBoxArray.updateCorners = function (t) {
      var e = t.min,
        r = t.max;
      return (
        pd.isArray(t.corners) && 8 == t.corners.length
          ? (pd3D.VectorArray.set(t.corners[0], e[0], e[1], e[2]),
            pd3D.VectorArray.set(t.corners[1], r[0], e[1], e[2]),
            pd3D.VectorArray.set(t.corners[2], r[0], r[1], e[2]),
            pd3D.VectorArray.set(t.corners[3], e[0], r[1], e[2]),
            pd3D.VectorArray.set(t.corners[4], e[0], e[1], r[2]),
            pd3D.VectorArray.set(t.corners[5], r[0], e[1], r[2]),
            pd3D.VectorArray.set(t.corners[6], r[0], r[1], r[2]),
            pd3D.VectorArray.set(t.corners[7], e[0], r[1], r[2]))
          : (t.corners = [
              [e[0], e[1], e[2]],
              [r[0], e[1], e[2]],
              [r[0], r[1], e[2]],
              [e[0], r[1], e[2]],
              [e[0], e[1], r[2]],
              [r[0], e[1], r[2]],
              [r[0], r[1], r[2]],
              [e[0], r[1], r[2]],
            ]),
        t
      );
    });
  var u = pd3D.VectorArray.create();
  function h(t, e, r) {
    t.triangles &&
      (t.addTriangle(e[0], e[1], e[2]),
      t.addTriangle(e[0], e[2], e[3]),
      t.addTriangle(e[4], e[5], e[6]),
      t.addTriangle(e[4], e[6], e[7])),
      r &&
        t.lines &&
        (t.addLine(e[0], e[1]),
        t.addLine(e[1], e[2]),
        t.addLine(e[2], e[3]),
        t.addLine(e[3], e[0]),
        t.addLine(e[4], e[5]),
        t.addLine(e[5], e[6]),
        t.addLine(e[6], e[7]),
        t.addLine(e[7], e[4]),
        t.addLine(e[0], e[7]),
        t.addLine(e[1], e[6]),
        t.addLine(e[2], e[5]),
        t.addLine(e[3], e[4]));
  }
  (pd3D.BBoxArray.intersect = function (t, e, r, n) {
    var i,
      a = Number.MAX_VALUE,
      o = u,
      s = t.min,
      d = t.max;
    return (
      e[((n = n || []).axis = 0)] > s[0] &&
      e[0] < d[0] &&
      e[1] > s[1] &&
      e[1] < d[1] &&
      e[2] > s[2] &&
      e[2] < d[2]
        ? (r[0] < e[0] &&
            pd3D.PlaneArray.intersect(o, e, r, [1, 0, 0, -s[0]]) &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -1), (a = i)),
          r[0] > e[0] &&
            pd3D.PlaneArray.intersect(o, e, r, [1, 0, 0, -d[0]]) &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 1), (a = i)),
          r[1] < e[1] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 1, 0, -s[1]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -2), (a = i)),
          r[1] > e[1] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 1, 0, -d[1]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 2), (a = i)),
          r[2] < e[2] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 0, 1, -s[2]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -3), (a = i)),
          r[2] > e[2] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 0, 1, -d[2]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 3), (a = i)))
        : (r[0] > e[0] &&
            e[0] <= s[0] &&
            pd3D.PlaneArray.intersect(o, e, r, [1, 0, 0, -s[0]]) &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -1), (a = i)),
          r[0] < e[0] &&
            e[0] >= d[0] &&
            pd3D.PlaneArray.intersect(o, e, r, [1, 0, 0, -d[0]]) &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 1), (a = i)),
          r[1] > e[1] &&
            e[1] <= s[1] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 1, 0, -s[1]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -2), (a = i)),
          r[1] < e[1] &&
            e[1] >= d[1] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 1, 0, -d[1]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[2] >= s[2] &&
            o[2] <= d[2] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 2), (a = i)),
          r[2] > e[2] &&
            e[2] <= s[2] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 0, 1, -s[2]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = -3), (a = i)),
          r[2] < e[2] &&
            e[2] >= d[2] &&
            pd3D.PlaneArray.intersect(o, e, r, [0, 0, 1, -d[2]]) &&
            o[0] >= s[0] &&
            o[0] <= d[0] &&
            o[1] >= s[1] &&
            o[1] <= d[1] &&
            (i = pd3D.VectorArray.distancePointToPoint(e, o)) < a &&
            (pd3D.VectorArray.set(n, o), (n.axis = 3), (a = i))),
      n.axis ? n : null
    );
  }),
    (pd3D.BBoxArray.intersectFace = function (t, e, r, n, i, a) {
      var o,
        s = u,
        d = Number.MAX_VALUE,
        l = t.min,
        h = t.max;
      switch (((i = pd.toBoolean(i, !1)), ((a = a || []).axis = 0), e)) {
        default:
          Math.abs(n[0] - r[0]) > pd.Const.EPSILON &&
            (pd3D.PlaneArray.intersect(s, r, n, [1, 0, 0, -l[0]]) &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = -1), (d = o)),
            i &&
              pd3D.PlaneArray.intersect(s, r, n, [
                1,
                0,
                0,
                0.5 * -(h[0] + l[0]),
              ]) &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 1), (d = o)),
            pd3D.PlaneArray.intersect(s, r, n, [1, 0, 0, -h[0]]) &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 1), (d = o)));
          break;
        case 1:
          Math.abs(n[1] - r[1]) > pd.Const.EPSILON &&
            (pd3D.PlaneArray.intersect(s, r, n, [0, 1, 0, -l[1]]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = -2), (d = o)),
            i &&
              pd3D.PlaneArray.intersect(s, r, n, [
                0,
                1,
                0,
                0.5 * -(h[1] + l[1]),
              ]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 2), (d = o)),
            pd3D.PlaneArray.intersect(s, r, n, [0, 1, 0, -h[1]]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[2] >= l[2] &&
              s[2] <= h[2] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 2), (d = o)));
          break;
        case 2:
          Math.abs(n[2] - r[2]) > pd.Const.EPSILON &&
            (pd3D.PlaneArray.intersect(s, r, n, [0, 0, 1, -l[2]]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = -3), (d = o)),
            i &&
              pd3D.PlaneArray.intersect(s, r, n, [
                0,
                0,
                1,
                0.5 * -(h[2] + l[2]),
              ]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 3), (d = o)),
            pd3D.PlaneArray.intersect(s, r, n, [0, 0, 1, -h[2]]) &&
              s[0] >= l[0] &&
              s[0] <= h[0] &&
              s[1] >= l[1] &&
              s[1] <= h[1] &&
              (o = pd3D.VectorArray.distancePointToPoint(r, s)) < d &&
              (pd3D.VectorArray.set(a, s), (a.axis = 3), (d = o)));
      }
      return a.axis ? a : null;
    }),
    (pd3D.BBoxArray.constrainPoint = function (t, e, r) {
      var n = t.min,
        i = t.max,
        a = !1;
      return (
        (r = pd.toNumber(r, 0)),
        e[0] < n[0] + r && ((e[0] = n[0] + r), (a = !0)),
        e[0] > i[0] - r && ((e[0] = i[0] - r), (a = !0)),
        e[1] < n[1] + r && ((e[1] = n[1] + r), (a = !0)),
        e[1] > i[1] - r && ((e[1] = i[1] - r), (a = !0)),
        e[2] < n[2] + r && ((e[2] = n[2] + r), (a = !0)),
        e[2] > i[2] - r && ((e[2] = i[2] - r), (a = !0)),
        a
      );
    }),
    (pd3D.BBoxArray.containsPoint = function (t, e, r) {
      var n = t.min,
        i = t.max;
      return (
        (r = pd.toNumber(r, 0)),
        e[0] >= n[0] - r &&
          e[0] <= i[0] + r &&
          e[1] >= n[1] - r &&
          e[1] <= i[1] + r &&
          e[2] >= n[2] - r &&
          e[2] <= i[2] + r
      );
    }),
    (pd3D.BBoxArray.containsBox = function (t, e, r) {
      return !(
        !pd3D.BBoxArray.containsPoint(t, e.min, r) ||
        !pd3D.BBoxArray.containsPoint(t, e.max, r)
      );
    }),
    (pd3D.BBoxArray.overlap = function (t, e, r) {
      return (
        (r = pd.toNumber(r, 0)),
        t.min[0] <= e.max[0] + r &&
          t.max[0] >= e.min[0] - r &&
          t.min[1] <= e.max[1] + r &&
          t.max[1] >= e.min[1] - r &&
          t.min[2] <= e.max[2] + r &&
          t.max[2] >= e.min[2] - r
      );
    }),
    (pd3D.BBoxArray.horzQuadrant = function (t, e, r) {
      var n = t.min,
        i = t.max;
      return (
        (r = pd.toNumber(r, 0)),
        e[0] > i[0] + r
          ? e[1] > i[1]
            ? 2
            : e[1] < n[1]
            ? -2
            : e[1] < 0.5 * (i[1] + n[1])
            ? -1
            : 1
          : e[0] < n[0] - r
          ? e[1] > i[1]
            ? 5
            : e[1] < n[1]
            ? -5
            : e[1] < 0.5 * (i[1] + n[1])
            ? -6
            : 6
          : e[1] > i[1] + r
          ? e[0] < 0.5 * (i[0] + n[0])
            ? 4
            : 3
          : e[1] < n[1] - r
          ? e[0] < 0.5 * (i[0] + n[0])
            ? -4
            : -3
          : 0
      );
    }),
    (pd3D.BBoxArray.copyToMesh = function (t, e, r) {
      if (t && e) {
        r = r || {};
        var n = pd.toInteger(r.ignoreAxis, Math.abs(pd.toInteger(t.axis, 0))),
          i = pd.toBoolean(r.outlines, e.hasLines && e.lines),
          a = pd.toBoolean(r.flip, !1);
        (pd.isArray(t.corners) && 8 == t.corners.length) ||
          pd3D.BBoxArray.updateCorners(t);
        var o = t.corners;
        if (
          (i && !e.lines && e.addIndexBuffer("lines"),
          r.color && pd.isArray(r.color) && e.color(r.color),
          e.hasVertexNormals && e.normals)
        ) {
          var s = Array(8);
          a
            ? (1 != n &&
                (e.normal([0, 1, 0]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[4])),
                (s[2] = e.addVertex(o[5])),
                (s[3] = e.addVertex(o[1])),
                e.normal([0, -1, 0]),
                (s[4] = e.addVertex(o[2])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[7])),
                (s[7] = e.addVertex(o[3])),
                h(e, s, i),
                (i = !1)),
              2 != n &&
                (e.normal([1, 0, 0]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[3])),
                (s[2] = e.addVertex(o[7])),
                (s[3] = e.addVertex(o[4])),
                e.normal([-1, 0, 0]),
                (s[4] = e.addVertex(o[5])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[2])),
                (s[7] = e.addVertex(o[1])),
                h(e, s, i),
                (i = !1)),
              3 != n &&
                (e.normal([0, 0, 1]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[1])),
                (s[2] = e.addVertex(o[2])),
                (s[3] = e.addVertex(o[3])),
                e.normal([0, 0, -1]),
                (s[4] = e.addVertex(o[7])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[5])),
                (s[7] = e.addVertex(o[4])),
                h(e, s, i),
                (i = !1)))
            : (1 != n &&
                (e.normal([0, -1, 0]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[1])),
                (s[2] = e.addVertex(o[5])),
                (s[3] = e.addVertex(o[4])),
                e.normal([0, 1, 0]),
                (s[4] = e.addVertex(o[7])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[2])),
                (s[7] = e.addVertex(o[3])),
                h(e, s, i),
                (i = !1)),
              2 != n &&
                (e.normal([-1, 0, 0]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[4])),
                (s[2] = e.addVertex(o[7])),
                (s[3] = e.addVertex(o[3])),
                e.normal([1, 0, 0]),
                (s[4] = e.addVertex(o[2])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[5])),
                (s[7] = e.addVertex(o[1])),
                h(e, s, i),
                (i = !1)),
              3 != n &&
                (e.normal([0, 0, -1]),
                (s[0] = e.addVertex(o[0])),
                (s[1] = e.addVertex(o[3])),
                (s[2] = e.addVertex(o[2])),
                (s[3] = e.addVertex(o[1])),
                e.normal([0, 0, 1]),
                (s[4] = e.addVertex(o[5])),
                (s[5] = e.addVertex(o[6])),
                (s[6] = e.addVertex(o[7])),
                (s[7] = e.addVertex(o[4])),
                h(e, s, i),
                (i = !1)));
        } else {
          for (var d = e.vertexCount(), l = 0; l < 8; ++l) e.addVertex(o[l]);
          a
            ? (1 != n &&
                (e.addTriangle(d + 0, d + 4, d + 5),
                e.addTriangle(d + 0, d + 5, d + 1),
                e.addTriangle(d + 2, d + 6, d + 7),
                e.addTriangle(d + 2, d + 7, d + 3)),
              2 != n &&
                (e.addTriangle(d + 0, d + 3, d + 7),
                e.addTriangle(d + 0, d + 7, d + 4),
                e.addTriangle(d + 1, d + 5, d + 6),
                e.addTriangle(d + 1, d + 6, d + 2)),
              3 != n &&
                (e.addTriangle(d + 0, d + 1, d + 2),
                e.addTriangle(d + 0, d + 2, d + 3),
                e.addTriangle(d + 4, d + 7, d + 6),
                e.addTriangle(d + 4, d + 6, d + 5)))
            : (1 != n &&
                (e.addTriangle(d + 0, d + 1, d + 5),
                e.addTriangle(d + 0, d + 5, d + 4),
                e.addTriangle(d + 2, d + 3, d + 7),
                e.addTriangle(d + 2, d + 7, d + 6)),
              2 != n &&
                (e.addTriangle(d + 0, d + 4, d + 7),
                e.addTriangle(d + 0, d + 7, d + 3),
                e.addTriangle(d + 1, d + 2, d + 6),
                e.addTriangle(d + 2, d + 6, d + 5)),
              3 != n &&
                (e.addTriangle(d + 0, d + 3, d + 2),
                e.addTriangle(d + 0, d + 2, d + 1),
                e.addTriangle(d + 4, d + 5, d + 6),
                e.addTriangle(d + 4, d + 6, d + 7)));
        }
      }
      return t;
    }),
    (pd3D.BBoxArray.copyOutlineToMesh = function (t, e) {
      if (t && e) {
        (pd.isArray(t.corners) && 8 == t.corners.length) ||
          pd3D.BBoxArray.updateCorners(t);
        for (var r = t.corners, n = e.vertexCount(), i = 0; i < 8; ++i)
          e.addVertex(r[i]);
        e.addLine(n + 0, n + 1),
          e.addLine(n + 1, n + 2),
          e.addLine(n + 2, n + 3),
          e.addLine(n + 3, n + 0),
          e.addLine(n + 4, n + 5),
          e.addLine(n + 5, n + 6),
          e.addLine(n + 6, n + 7),
          e.addLine(n + 7, n + 4),
          e.addLine(n + 0, n + 4),
          e.addLine(n + 1, n + 5),
          e.addLine(n + 2, n + 6),
          e.addLine(n + 3, n + 7);
      }
      return t;
    }),
    (pd3D.Polygon = function (t) {
      (t = t || {}),
        (this.contours = pd.isArray(t.contours) ? t.contours : []),
        (this.plane = t.plane || t.normal || null),
        (this.color = t.color || null),
        (this.axis = pd.toInteger(t.axis, 0)),
        (this.noOutline = pd.toBoolean(t.noOutline, !1)),
        (this.center = t.center || null),
        (this.triangles = null),
        this.contours.length && this.checkPlaneEqn();
    });
  var d = null;
  (pd3D.Polygon.initTesselator = function () {
    var t = new libtess.GluTesselator();
    return (
      t.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (t, e) {
        e.push(t);
      }),
      t.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (t) {
        t !== libtess.primitiveType.GL_TRIANGLES &&
          console.warn("Tesselator: Expected TRIANGLES, but got type: " + t);
      }),
      t.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (t) {
        console.warn("Tesselator: Error number: " + t);
      }),
      t.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (t) {
        return [t[0], t[1], t[2]];
      }),
      t.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {}),
      t
    );
  }),
    (pd3D.Polygon.releaseTesselator = function () {
      d = null;
    }),
    (pd3D.Polygon.copyToMesh = function (t, e, r) {
      if (e.length) {
        for (var n = 0, i = e.length; n < i; ++n) e[n].copyToMesh(t, r);
        return !0;
      }
      return !1;
    }),
    (pd3D.Polygon.prototype.setBoundary = function (t) {
      if (!pd.isArray(t) || t.length < 1)
        throw new TypeError(
          "ERROR: Sent empty or invalid array to setBoundary()."
        );
      if (t[0].length < 2)
        throw new TypeError(
          "ERROR: Contour arrays must have vertices with at least two dimensions."
        );
      return (
        this.contours.length < 1
          ? this.contours.push(t)
          : (this.contours[0] = t),
        (this.retesselate = !0),
        this
      );
    }),
    (pd3D.Polygon.prototype.getContourCount = function () {
      return this.contours.length;
    }),
    (pd3D.Polygon.prototype.getContour = function (t) {
      return (
        (t = pd.toInteger(t, 0)),
        this.contours.length > t ? this.contours[t] : null
      );
    }),
    (pd3D.Polygon.prototype.addContour = function (t) {
      if (t.length < 1)
        throw new TypeError(
          "ERROR: Sent empty or invalid array to addContour()."
        );
      if (t[0].length < 2)
        throw new TypeError(
          "ERROR: Contour arrays must have vertices with at least two dimensions."
        );
      return this.contours.push(t), (this.retesselate = !0), this;
    }),
    (pd3D.Polygon.prototype.setContours = function (t) {
      if (t.length < 1 || t[0].length < 3)
        throw new TypeError(
          "ERROR: Sent empty or invalid contours array to setContours()."
        );
      if (t[0][0].length < 2)
        throw new TypeError(
          "ERROR: Contour arrays must have vertices with at least two dimensions."
        );
      return (
        this.contours && 0 < this.contours.length && this.clearContours(),
        (this.contours = t),
        (this.retesselate = !0),
        this
      );
    }),
    (pd3D.Polygon.prototype.clearContours = function () {
      if (this.contours)
        for (var t = 0, e = this.contours.length; t < e; ++t)
          this.contours[t].length = 0;
      return (this.contours.length = 0), (this.retesselate = !0), this;
    }),
    (pd3D.Polygon.prototype.resetContours = function () {
      return this;
    }),
    (pd3D.Polygon.prototype.computeOffsetPosition = function (t, e) {
      var r = this.center;
      r ||
        (r =
          0 < this.contours.length && 0 < this.contours[0].length
            ? this.contours[0][0]
            : [0, 0, 0]);
      var n = [t[0], t[1], t[2]];
      return (
        pd3D.VectorArray.normalize(n),
        [n[0] * e + r[0], n[1] * e + r[1], n[2] * e + r[2]]
      );
    }),
    (pd3D.Polygon.prototype.computePlaneEqn = function () {
      if (0 < this.contours.length) {
        this.center = this.center || [];
        var t,
          e = [0, 0, 0],
          r = [0, 0, 0],
          n = this.contours[0],
          i = n.length,
          a = this.center,
          o = 0;
        a[0] = a[1] = a[2] = 0;
        for (var s = 0; s < i; ++s)
          (t = n[s]),
            (a[0] += t[0]),
            (a[1] += t[1]),
            (a[2] += +t[2] || 0),
            ++o,
            1 < s &&
              pd3D.VectorArray.calcNormalFromTriangle(
                e,
                n[0],
                n[s - 1],
                n[s]
              ) &&
              ((r[0] += e[0]), (r[1] += e[1]), (r[2] += e[2]));
        if (0 < o) {
          r = pd3D.VectorArray.normalize(r);
          (a[0] /= o),
            (a[1] /= o),
            (a[2] /= o),
            this.plane
              ? pd3D.PlaneArray.calcFromNormalAndPoint(this.plane, r, a)
              : (this.plane = pd3D.PlaneArray.createFromNormalAndPoint(r, a));
        }
      }
      return (
        this.plane || (this.plane = pd3D.PlaneArray.create(0, 0, 1, 0)), this
      );
    }),
    (pd3D.Polygon.prototype.checkPlaneEqn = function () {
      if ((this.plane || this.computePlaneEqn(), this.plane.length < 4)) {
        var t =
          0 < this.contours.length && 2 < this.contours[0].length
            ? this.contours[0][0]
            : [0, 0, 0];
        this.plane[3] = -(
          this.plane[0] * t[0] +
          this.plane[1] * t[1] +
          this.plane[2] * t[2]
        );
      }
      return 3 < this.plane.length;
    }),
    (pd3D.Polygon.prototype.setNormal = function (t) {
      if (!pd.isArray(t) || t.length < 2)
        throw new TypeError(
          "The new normal must be a valid [x,y[,z]] vector array."
        );
      return (this.plane = t), this.checkPlaneEqn(), this;
    }),
    (pd3D.Polygon.prototype.intersect = function (t, e, r) {
      return (
        this.checkPlaneEqn(),
        !!pd3D.PlaneArray.intersect(r, t, e, this.plane) && this.isInside(r)
      );
    }),
    (pd3D.Polygon.prototype.isInside = function (t) {
      if (this.triangles && 2 < this.triangles.length) {
        for (var e = 2, r = this.triangles.length; e < r; e += 3)
          if (
            pd3D.PlaneArray.insideTriangle(
              t,
              this.triangles[e - 2],
              this.triangles[e - 1],
              this.triangles[e],
              this.plane
            )
          )
            return !0;
      } else if (this.isInsideOuterBoundary(t)) return !0;
      return !1;
    }),
    (pd3D.Polygon.prototype.isInsideOuterBoundary = function (t) {
      if (this.contours && 0 < this.contours.length) {
        var e = this.contours[0];
        if (4 == e.length)
          return (
            pd3D.PlaneArray.insideTriangle(t, e[0], e[1], e[2], this.plane) ||
            pd3D.PlaneArray.insideTriangle(t, e[0], e[2], e[3], this.plane)
          );
        if (3 == e.length)
          return pd3D.PlaneArray.insideTriangle(
            t,
            e[0],
            e[1],
            e[2],
            this.plane
          );
        var r,
          n,
          i,
          a = [],
          o = [],
          s = [],
          d = 0;
        (n = e[e.length - 1]),
          (a[0] = n[0] - t[0]),
          (a[1] = n[1] - t[1]),
          (a[2] = n[2] - t[2]),
          pd3D.VectorArray.normalize(a);
        for (var l = 0, h = e.length; l < h; ++l)
          (i = e[l]),
            (o[0] = i[0] - t[0]),
            (o[1] = i[1] - t[1]),
            (o[2] = i[2] - t[2]),
            pd3D.VectorArray.normalize(o),
            pd3D.VectorArray.cross(s, a, o),
            (r = pd3D.VectorArray.dot(this.plane, s)),
            (d += Math.acos(pd3D.VectorArray.dot(a, o)) * pd.sign(r)),
            (a[0] = o[0]),
            (a[1] = o[1]),
            (a[2] = o[2]);
        return d > Math.PI;
      }
      return !1;
    }),
    (pd3D.Polygon.prototype.tesselate2D = function () {
      if ("function" != typeof earcut)
        return "object" != typeof libtess
          ? (this.triangles = [])
          : this.tesselate3D();
      var t, e;
      this.computePlaneEqn();
      var r,
        n,
        i = [],
        a = this.plane,
        o = this.center,
        s = this.contours;
      if (
        Math.abs(a[2]) > 1 - pd.Const.EPSILON &&
        Math.abs(a[0]) < pd.Const.EPSILON &&
        Math.abs(a[1]) < pd.Const.EPSILON
      ) {
        for (t = 0; t < s.length; ++t)
          for (i.push([]), r = s[t], e = 0; e < r.length; ++e)
            i[t].push([r[e][0], r[e][1]]);
        n = earcut(i);
        var d = -a[3] / a[2];
        for (t = 0; t < n.length; ++t) n[t][2] = d;
        a[2] < 0 && n.reverse();
      } else {
        var l = pd3D.QuatArray.create();
        pd3D.QuatArray.rotateBetweenVectors(l, a, pd3D.VectorArray.unitZ);
        var h = pd3D.VectorArray.create();
        for (t = 0; t < s.length; ++t)
          for (i.push([]), r = s[t], e = 0; e < r.length; ++e)
            (h[0] = r[e][0] - o[0]),
              (h[1] = r[e][1] - o[1]),
              (h[2] = r[e][2] - o[2]),
              pd3D.VectorArray.applyQuaternion(h, h, l),
              i[t].push([h[0], h[1]]);
        for (
          n = earcut(i), pd3D.QuatArray.invert(l, l), t = 0;
          t < n.length;
          ++t
        )
          n[t].length < 3 &&
            (pd3D.VectorArray.applyQuaternion(n[t], n[t], l),
            (n[t][0] += o[0]),
            (n[t][1] += o[1]),
            (n[t][2] += o[2]));
      }
      return (this.triangles = n), (this.retesselate = !1), n;
    }),
    (pd3D.Polygon.prototype.tesselate3D = function () {
      if ("object" != typeof libtess)
        return "function" != typeof earcut
          ? (this.triangles = [])
          : this.tesselate2D();
      var t,
        e,
        r = [],
        n = this.contours;
      if ((this.checkPlaneEqn(), 1 == n.length && n[0].length <= 4))
        3 <= (t = n[0]).length &&
          (r.push(t[0]),
          r.push(t[1]),
          r.push(t[2]),
          4 == t.length && (r.push(t[0]), r.push(t[2]), r.push(t[3])));
      else {
        d || (d = pd3D.Polygon.initTesselator()),
          this.plane &&
            d.gluTessNormal(this.plane[0], this.plane[1], this.plane[2]),
          d.gluTessBeginPolygon(r);
        for (var i = 0, a = n.length; i < a; ++i) {
          (t = n[i]), d.gluTessBeginContour();
          for (var o = 0, s = t.length; o < s; ++o)
            (e = t[o]), d.gluTessVertex(e, e);
          d.gluTessEndContour();
        }
        d.gluTessEndPolygon();
      }
      return (this.triangles = r), (this.retesselate = !1), r;
    }),
    (pd3D.Polygon.prototype.scaleAndOffset = function (t, e, r) {
      (t = t || 1), (e = e || [0, 0, 0]), (r = r || !1);
      for (var n, i, a = this.contours, o = 0; o < a.length; ++o) {
        (n = a[o]), r && n.reverse();
        for (var s = 0; s < n.length; ++s)
          (i = n[s]),
            (n[s] = [
              i[0] * t + e[0],
              i[1] * t + e[1],
              (+i[2] || 0) * t + e[2],
            ]);
      }
      return this.plane && this.computePlaneEqn(), this;
    }),
    (pd3D.Polygon.prototype.calcSurfaceArea = function () {
      if (
        ((!this.retesselate && this.triangles) || this.tesselate3D(),
        !this.triangles ||
          this.triangles.length < 3 ||
          this.triangles[0][0].length < 2)
      )
        return 0;
      for (var t = 0, e = this.triangles, r = e.length, n = 0; n < r; n += 3)
        t += pd3D.VectorArray.triangleArea(e[n + 0], e[n + 1], e[n + 2]);
      return t;
    }),
    (pd3D.Polygon.prototype.copyToMesh = function (e, t, r) {
      var n, i, a, o;
      if (
        ((!this.retesselate && this.triangles) || this.tesselate3D(),
        !this.triangles || this.triangles.length < 3)
      )
        return (
          console.warn("WARNING: Polygon triangles list is empty or invalid."),
          !1
        );
      if (this.triangles[0][0].length < 2)
        return (
          console.warn(
            "WARNING: Polygon triangles must have vertices in the form [x,y] or [x,y,z]."
          ),
          !1
        );
      var s,
        d = e.vertexCount(),
        l = !isNaN(t) && t < 0,
        h = this.contours,
        u = this.triangles,
        c = !!r;
      if (
        ((r = r || new pd.Indexer()),
        (t = pd.toBoolean(t, !1)),
        !this.noOutline && e.lines)
      )
        for (n = 0; n < h.length; ++n) {
          (s = h[n]), (i = o = d + r.addVectorArray(s[0]));
          for (var p = 1; p < s.length; ++p)
            (a = d + r.addVectorArray(s[p])), e.addLine(i, a), (i = a);
          e.addLine(a, o);
        }
      if (l && !e.twoSided)
        for (n = 0; n < u.length; n += 3)
          (i = d + r.addVectorArray(u[n + 0])),
            (a = d + r.addVectorArray(u[n + 1])),
            (o = d + r.addVectorArray(u[n + 2])),
            e.addTriangle(i, o, a),
            e.addTriangle(i, a, o);
      else
        for (n = 0; n < u.length; n += 3)
          (i = d + r.addVectorArray(u[n + 0])),
            (a = d + r.addVectorArray(u[n + 1])),
            (o = d + r.addVectorArray(u[n + 2])),
            t ? e.addTriangle(i, o, a) : e.addTriangle(i, a, o);
      return (
        this.color && e.color(this.color),
        this.plane &&
          (t
            ? e.normal(-this.plane[0], -this.plane[1], -this.plane[2])
            : e.normal(this.plane)),
        c ||
          r.unique.map(function (t) {
            e.addVertex(t);
          }),
        !0
      );
    }),
    (pd3D.Polygon.prototype.copyToMeshNoIndexer = function (t, e) {
      var r, n, i, a;
      if (
        ((!this.retesselate && this.triangles) || this.tesselate3D(),
        !this.triangles || this.triangles.length < 3)
      )
        return (
          console.warn("WARNING: Polygon triangles list is empty or invalid."),
          !1
        );
      if (this.triangles[0][0].length < 2)
        return (
          console.warn(
            "WARNING: Polygon triangles must have vertices in the form [x,y] or [x,y,z]."
          ),
          !1
        );
      var o,
        s = !isNaN(e) && e < 0,
        d = this.contours,
        l = this.triangles;
      if (
        ((e = pd.toBoolean(e, !1)),
        this.color && t.color(this.color),
        this.plane &&
          (e
            ? t.normal(-this.plane[0], -this.plane[1], -this.plane[2])
            : t.normal(this.plane)),
        !this.noOutline && t.lines)
      )
        for (r = 0; r < d.length; ++r) {
          (o = d[r]), (n = i = t.addVertex(o[0]));
          for (var h = 1; h < o.length; ++h)
            (a = t.addVertex(o[h])), t.addLine(i, a), (i = a);
          t.addLine(a, n);
        }
      if (s && !t.twoSided)
        for (r = 0; r < l.length; r += 3)
          (n = t.addVertex(l[r + 0])),
            (i = t.addVertex(l[r + 1])),
            (a = t.addVertex(l[r + 2])),
            t.addTriangle(n, a, i),
            t.addTriangle(n, i, a);
      else
        for (r = 0; r < l.length; r += 3)
          (n = t.addVertex(l[r + 0])),
            (i = t.addVertex(l[r + 1])),
            (a = t.addVertex(l[r + 2])),
            e ? t.addTriangle(n, a, i) : t.addTriangle(n, i, a);
      return !0;
    }),
    (pd3D.Polygon.prototype.copyTrianglesToMesh = function (e, t, r) {
      if (
        ((!this.retesselate && this.triangles) || this.tesselate3D(),
        !this.triangles || this.triangles.length < 3)
      )
        return (
          console.warn("WARNING: Polygon triangles list is empty or invalid."),
          !1
        );
      if (this.triangles[0][0].length < 2)
        return (
          console.warn(
            "WARNING: Polygon triangles must have vertices in the form [x, y] or [x,y,z]."
          ),
          !1
        );
      var n,
        i,
        a,
        o = e.vertexCount(),
        s = this.triangles,
        d = !!r;
      (r = r || new pd.Indexer()), (t = t || !1);
      for (var l = 0; l < s.length; l += 3)
        (n = o + r.addVectorArray(s[l + 0])),
          (i = o + r.addVectorArray(s[l + 1])),
          (a = o + r.addVectorArray(s[l + 2])),
          t ? e.addTriangle(n, a, i) : e.addTriangle(n, i, a);
      return (
        this.color && e.color(this.color),
        this.plane &&
          (t
            ? e.normal(-this.plane[0], -this.plane[1], -this.plane[2])
            : e.normal(this.plane)),
        d ||
          r.unique.map(function (t) {
            e.addVertex(t);
          }),
        !0
      );
    }),
    (pd3D.Polygon.prototype.copyTrianglesToMeshNoIndexer = function (
      t,
      e,
      r,
      n
    ) {
      if (
        ((!this.retesselate && this.triangles) || this.tesselate3D(),
        !this.triangles || this.triangles.length < 3)
      )
        return (
          console.warn("WARNING: Polygon triangles list is empty or invalid."),
          !1
        );
      if (this.triangles[0][0].length < 2)
        return (
          console.warn(
            "WARNING: Polygon triangles must have vertices in the form [x, y] or [x,y,z]."
          ),
          !1
        );
      (e = pd.toNumber(e, 1)),
        (r = pd.isArray(r) ? r : [0, 0, 0]),
        (n = pd.toBoolean(n, !1));
      var i,
        a = 0,
        o = this.triangles;
      this.color && t.color(this.color);
      for (var s = 0, d = o.length; s < d; s += 3) {
        for (var l = 0; l < 3; ++l)
          (i = o[s + l]),
            (a = t.addVertex([
              i[0] * e + r[0],
              i[1] * e + r[1],
              (+i[2] || 0) * e + r[2],
            ]));
        n ? t.addTriangle(a - 2, a, a - 1) : t.addTriangle(a - 2, a - 1, a);
      }
      return !0;
    }),
    (pd3D.Polygon.prototype.copyOutlineToMesh = function (t) {
      var e,
        r,
        n = this.contours;
      t.lines || t.addIndexBuffer("lines");
      for (var i = 0; i < n.length; ++i)
        if (1 < (e = n[i]).length) {
          r = t.vertexCount();
          for (var a = t.addVertex(e[0]), o = 1, s = e.length; o < s; ++o)
            (a = t.addVertex(e[o])), t.addLine(a - 1, a);
          t.addLine(a, r);
        }
      return !0;
    }),
    (pd3D.Polygon.prototype.copyOutlineToMeshExt = function (t, e, r) {
      (e = pd.toNumber(e, 1)), (r = pd.isArray(r) ? r : [0, 0, 0]);
      var n,
        i,
        a,
        o,
        s = this.contours;
      t.lines || t.addIndexBuffer("lines");
      for (var d = 0; d < s.length; ++d)
        if (1 < (n = s[d]).length) {
          a = t.vertexCount();
          for (var l = 0, h = n.length; l < h; ++l)
            (i = n[l]),
              (o = t.addVertex([
                +i[0] * e + r[0],
                +i[1] * e + r[1],
                +i[2] * e + r[2],
              ])),
              0 < l && t.addLine(o - 1, o);
          t.addLine(o, a);
        }
      return !0;
    }),
    (pd3D.Polygon.prototype.copyDraftinglinesToMesh = function (t, e) {
      e = pd.toNumber(e, 250);
      var r,
        n,
        i = this.contours;
      t.lines || t.addIndexBuffer("lines");
      for (var a = 0; a < i.length; ++a) {
        for (
          var o, s = t.vertexCount(), d = 0, l = (r = i[a]).length;
          d < l;
          ++d
        )
          (n = r[d]),
            (o = t.addVertex([n[0], n[1], +n[2] || 0])),
            0 < d && (t.addLine(o - 1, o, e), t.addDraftingLine(o - 1, o, e));
        t.addDraftingLine(o, s, e);
      }
      return !0;
    }),
    (pd3D.Polygon.prototype.isPlanar = function (t) {
      return (
        this.checkPlaneEqn(),
        0 < this.contours.length &&
          pd3D.PlaneArray.isPlanarPath(this.plane, this.contours[0], t)
      );
    }),
    (pd3D.Polygon.prototype.sameSide = function (t, e) {
      return (
        this.checkPlaneEqn(),
        -1e-9 <=
          (this.plane[0] * t[0] +
            this.plane[1] * t[1] +
            this.plane[2] * t[2] +
            this.plane[3]) *
            (this.plane[0] * e[0] +
              this.plane[1] * e[1] +
              this.plane[2] * e[2] +
              this.plane[3])
      );
    }),
    (pd3D.Polygon.prototype.inFront = function (t) {
      this.checkPlaneEqn();
      var e = this.computeOffsetPosition(this.plane, 5);
      return this.sameSide(t, e);
    }),
    (pd3D.Polygon.prototype.extrude = function (t) {
      var e, r, n;
      this.checkPlaneEqn();
      var i,
        a,
        o,
        s,
        d,
        l,
        h = [],
        u = this.contours;
      if (
        this.sameSide(
          this.computeOffsetPosition(t, 5),
          this.computeOffsetPosition(this.plane, 5)
        )
      ) {
        for (s = new pd3D.Polygon(), e = 0; e < u.length; ++e) {
          for (d = [], r = (i = u[e]).length - 1; 0 <= r; r--)
            (a = i[r]), d.push([a[0], a[1], +a[2] || 0]);
          s.addContour(d);
        }
        s.computePlaneEqn(), h.push(s);
      } else h.push(this);
      for (u = h[0].contours, e = 0; e < u.length; ++e)
        for (n = (i = u[e]).length, r = 0; r < n; ++r)
          n <= (l = r + 1) && (l = 0),
            (a = i[r]),
            (o = i[l]),
            (a[2] = +a[2] || 0),
            (o[2] = +o[2] || 0),
            (d = []).push([o[0], o[1], o[2]]),
            d.push([a[0], a[1], a[2]]),
            d.push([a[0] + t[0], a[1] + t[1], a[2] + t[2]]),
            d.push([o[0] + t[0], o[1] + t[1], o[2] + t[2]]),
            (s = new pd3D.Polygon().addContour(d)),
            h.push(s);
      for (s = new pd3D.Polygon(), e = 0; e < u.length; ++e) {
        for (d = [], r = (i = u[e]).length - 1; 0 <= r; r--)
          (a = i[r]), d.push([a[0] + t[0], a[1] + t[1], (+a[2] || 0) + t[2]]);
        s.addContour(d);
      }
      return h.push(s), h;
    });
})();
pd3D = pd3D || {};
!(function () {
  var i = 34962,
    a = 35044;
  (pd3D.RENDER_FIRST = -1), (pd3D.RENDER_LAST = -2), (pd3D.RENDER_ALL = -99);
  var t = 100;
  pd3D.getUniqueID = function () {
    return t++;
  };
  (pd3D.Mesh = function (t) {
    (t = t || {}),
      (this.id = pd3D.getUniqueID()),
      (this.visible = !1 !== t.visible),
      (this.defaultNormal = t.defaultNormal || [0, 0, 1]),
      (this.defaultColor = t.defaultColor || [0.8, 0.8, 0.8, 1]),
      (this.defaultLineColor = t.defaultLineColor || this.defaultColor),
      (this.defaultCoord = t.defaultCoord || [0, 0]),
      (this.hasVertexNormals = !1),
      (this.hasVertexColors = !1),
      (this.hasVertexCoords = !1),
      (this.hasLines = !1),
      (this.twoSided = null != t.twoSided ? !!t.twoSided : null),
      (this.usageHint = pd.toInteger(t.usageHint, t.dynamic ? 35048 : a)),
      (this.activeSubMesh = null),
      (this.boundingBox = null),
      (this.vertexBuffers = {}),
      (this.indexBuffers = {}),
      (this._changeFlag = 4),
      (this._data = {}),
      (this._vtx_index = 0),
      (this._tri_index = 0),
      (this._lin_index = 0),
      (this._pts_index = 0),
      this.addVertexBuffer("vertices", "gl_Vertex"),
      t.coords && this.addVertexBuffer("coords", "gl_TexCoord"),
      t.normals && this.addVertexBuffer("normals", "gl_Normal"),
      t.colors && this.addVertexBuffer("colors", "gl_Color"),
      (!t.triangles && "triangles" in t) || this.addIndexBuffer("triangles"),
      t.points && this.addIndexBuffer("points"),
      t.lines && this.addIndexBuffer("lines");
  }),
    (pd3D.Mesh.prototype = {
      clone: function (t, e) {
        var r,
          n,
          i,
          a,
          o = this.isReusing;
        o && this.reuseEnd(),
          "normals" in (t = t || {}) || (t.normals = pd.isArray(this.normals)),
          "colors" in t || (t.colors = pd.isArray(this.colors)),
          "coords" in t || (t.coords = pd.isArray(this.coords)),
          "triangles" in t || (t.triangles = pd.isArray(this.triangles)),
          "points" in t || (t.points = pd.isArray(this.points)),
          "lines" in t || (t.lines = pd.isArray(this.lines));
        var s = new pd3D.Mesh(t);
        if (s.vertices && this.vertices) {
          if (((i = this.vertices), (a = s.vertices), e)) {
            if (pd.isArray(e))
              for (
                e[0] = +e[0], e[1] = +e[1], e[2] = +e[2], r = 0, n = i.length;
                r < n;
                ++r
              )
                a.push([i[r][0] + e[0], i[r][1] + e[1], i[r][2] + e[2]]);
            else if ("x" in e)
              for (r = 0, n = i.length; r < n; ++r)
                a.push([i[r][0] + e.x, i[r][1] + e.y, i[r][2] + e.z]);
          } else for (r = 0, n = i.length; r < n; ++r) a.push(i[r].slice());
          s._vtx_index = s.vertices.length;
        }
        if (s.normals)
          for (i = this.normals, a = s.normals, r = 0, n = i.length; r < n; ++r)
            a.push(i[r].slice());
        if (s.colors && this.colors)
          for (i = this.colors, a = s.colors, r = 0, n = i.length; r < n; ++r)
            a.push(i[r].slice());
        if (s.coords && this.coords)
          for (i = this.coords, a = s.coords, r = 0, n = i.length; r < n; ++r)
            a.push(i[r].slice());
        return (
          s.triangles &&
            this.triangles &&
            ((s.triangles = this.triangles.slice()),
            (s._tri_index = s.triangles.length)),
          s.lines &&
            this.lines &&
            ((s.lines = this.lines.slice()), (s._lin_index = s.lines.length)),
          s.points &&
            this.points &&
            ((s.points = this.points.slice()),
            (s._pts_index = s.points.length)),
          "twoSided" in this && (s.twoSided = this.twoSided),
          (this.isReusing = o),
          s.setChangeFlag(4),
          s
        );
      },
      checkChangeFlag: function (t) {
        return this._changeFlag & t;
      },
      setChangeFlag: function (t, e) {
        var r;
        switch (t) {
          case 4:
            this._changeFlag |= t;
            break;
          case 1:
            e &&
              null != (r = this.vertexBuffers[e]) &&
              ((r.updateRequired = !0), (this._changeFlag |= t));
            break;
          case 2:
            e &&
              null != (r = this.indexBuffers[e]) &&
              ((r.updateRequired = !0), (this._changeFlag |= t));
        }
      },
      checkToCompile: function () {
        if (this._changeFlag) {
          if (4 & this._changeFlag) this.compile();
          else {
            if (1 & this._changeFlag)
              for (var t in this.vertexBuffers) {
                (r = this.vertexBuffers[t]) &&
                  r.updateRequired &&
                  ((r.data = this[r.name]), r.compile());
              }
            if (2 & this._changeFlag)
              for (var e in this.indexBuffers) {
                var r;
                (r = this.indexBuffers[e]) &&
                  r.updateRequired &&
                  ((r.data = this[e]), r.compile());
              }
          }
          this._changeFlag = 0;
        }
      },
      addVertexBuffer: function (t, e, r) {
        r = pd.toInteger(r, this.usageHint);
        var n = (this.vertexBuffers[e] = new pd3D.Buffer({
          usageHint: r,
          target: i,
          type: Float32Array,
        }));
        return (
          (this[(n.name = t)] = []),
          (this.hasVertexNormals = void 0 !== this.normals),
          (this.hasVertexColors = void 0 !== this.colors),
          (this.hasVertexCoords = void 0 !== this.coords),
          this.setChangeFlag(4),
          this
        );
      },
      addIndexBuffer: function (t, e) {
        e = pd.toInteger(e, this.usageHint);
        var r = (this.indexBuffers[t] = new pd3D.Buffer({
          usageHint: e,
          target: 34963,
          type: Uint16Array,
        }));
        return (
          (this[(r.name = t)] = []),
          (this.hasLines = void 0 !== this.lines),
          this.setChangeFlag(4),
          this
        );
      },
      hide: function () {
        return (this.visible = !1), this;
      },
      show: function (t) {
        return (this.visible = !1 !== t), this;
      },
      begin: function (t) {
        if (this.activeSubMesh && 0 <= pd.toNumber(this.activeSubMesh.mode, -1))
          throw new Error("Mismatched 'mesh.begin()' and 'mesh.end()' calls.");
        switch (t) {
          case 0:
            this.points || this.addIndexBuffer("points");
            break;
          case 1:
          case 2:
          case 3:
            this.lines || this.addIndexBuffer("lines");
            break;
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            this.triangles || this.addIndexBuffer("triangles");
            break;
          default:
            throw new TypeError(
              "Given primitive `mode` (" + t.toString() + ") is invalid."
            );
        }
        return (
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
          (this.activeSubMesh = new pd3D.SubMesh()),
          this.startSubMesh(this.activeSubMesh),
          (this.activeSubMesh.mode = t),
          this
        );
      },
      normal: function (t) {
        switch (arguments.length) {
          case 0:
            return this.defaultNormal;
          case 1:
            if (pd.isArray(t) && 3 <= t.length)
              3 < t.length
                ? (this.defaultNormal = [t[0], t[1], t[2]])
                : (this.defaultNormal = t);
            else {
              if (!(t instanceof pd3D.Vector))
                throw new TypeError(
                  "Invalid vector, must be either a pd3D.Vector() or an [x,y,z] array."
                );
              this.defaultNormal = t.toArray();
            }
            break;
          case 3:
          case 4:
            this.defaultNormal = [+t, +arguments[1], +arguments[2]];
            break;
          default:
            throw new Error(
              "Invalid arguments, must be given as x, y and z values."
            );
        }
        return this;
      },
      color: function (t) {
        switch (arguments.length) {
          case 0:
            return this.defaultColor;
          case 2:
            if (!pd.isArray(t) || t.length < 3)
              throw new TypeError(
                "Invalid color, must be either an [r,g,b] or an [r,g,b,a] array."
              );
            t = [t[0], t[1], t[2], pd.constrainTo(+arguments[1], 0, 1)];
          case 1:
            if (pd.isArray(t))
              if (4 == t.length) this.defaultColor = t;
              else {
                if (3 != t.length)
                  throw new TypeError(
                    "Invalid color, must be either an [r,g,b] or an [r,g,b,a] array."
                  );
                this.defaultColor = [+t[0], +t[1], +t[2], 1];
              }
            else if (t instanceof pd3D.Vector)
              this.defaultColor = [t.x, t.y, t.z, 1];
            else {
              var e = (+t).toString(16);
              7 < e.length
                ? (this.defaultColor = [
                    parseInt(e.substring(2, 4), 16) / 255,
                    parseInt(e.substring(4, 6), 16) / 255,
                    parseInt(e.substring(6, 8), 16) / 255,
                    parseInt(e.substring(0, 2), 16) / 255,
                  ])
                : ((t = pd.toInteger(t, 0)),
                  (this.defaultColor = [
                    (255 & t) / 255,
                    ((65280 & t) >> 8) / 255,
                    ((16711680 & t) >> 16) / 255,
                    1,
                  ]));
            }
            break;
          case 3:
            this.defaultColor = [+t, +arguments[1], +arguments[2], 1];
            break;
          case 4:
            this.defaultColor = [
              +t,
              +arguments[1],
              +arguments[2],
              +arguments[3],
            ];
            break;
          default:
            throw new TypeError(
              "Invalid arguments, must be given as r, g, b [, a] values."
            );
        }
        return this;
      },
      texCoord: function (t) {
        switch (arguments.length) {
          case 0:
            return this.defaultCoord;
          case 1:
            if (pd.isArray(t) && 2 <= t.length)
              2 < t.length
                ? (this.defaultCoord = [t[0], t[1]])
                : (this.defaultCoord = t);
            else {
              if (!(t instanceof pd3D.Vector))
                throw new TypeError(
                  "Invalid vector, must be either a pd3D.Vector() or an [x,y,z] array."
                );
              this.defaultCoord = t.toArray(2);
            }
            break;
          case 2:
          case 3:
            this.defaultCoord = [+t, +arguments[1]];
            break;
          default:
            throw new Error(
              "Invalid arguments, must be given as an x, y and z values."
            );
        }
        return this;
      },
      vertex: function (t) {
        var e = -1;
        return (
          t &&
            (2 == t.length && (t[2] = 0),
            this.isReusing && this._vtx_index < this.vertices.length
              ? ((e = this._vtx_index),
                (this.vertices[e] = t),
                this.hasVertexColors && (this.colors[e] = this.defaultColor),
                this.hasVertexNormals && (this.normals[e] = this.defaultNormal),
                this.hasVertexCoords && (this.coords[e] = this.defaultCoord),
                (e = this._vtx_index++))
              : ((e = this.vertices.length),
                this.vertices.push(t),
                this.hasVertexColors && this.colors.push(this.defaultColor),
                this.hasVertexNormals && this.normals.push(this.defaultNormal),
                this.hasVertexCoords && this.coords.push(this.defaultCoord),
                (this._vtx_index = e + 1))),
          e
        );
      },
      end: function () {
        var t = this.activeSubMesh;
        if ((this.endSubMesh(t), !t || -1 == pd.toNumber(t.mode, -1)))
          throw new Error("Mismatched 'mesh.begin()' and 'mesh.end()' calls.");
        var e = t.vtx_start,
          r = t.vtx_stop;
        switch (t.mode) {
          case 0:
            for (var n = e; n < r; ++n) this.addPoint(n);
            break;
          case 1:
            for (n = e + 1; n < r; n += 2) this.addLine(n - 1, n);
            break;
          case 2:
            this.addLine(r - 1, e);
          case 3:
            for (n = e + 1; n < r; ++n) this.addLine(n - 1, n);
            break;
          case 4:
            for (n = e + 2; n < r; n += 3) this.addTriangle(n - 2, n - 1, n);
            break;
          case 5:
            var i = !0;
            for (n = e + 2; n < r; ++n)
              i
                ? this.addTriangle(n - 2, n - 1, n)
                : this.addTriangle(n - 1, n - 2, n),
                (i = !i);
            break;
          case 6:
            for (n = e + 2; n < r; ++n) this.addTriangle(e, n - 1, n);
            break;
          case 7:
            for (n = e + 3; n < r; n += 4)
              this.addTriangle(n - 3, n - 2, n - 1),
                this.addTriangle(n - 3, n - 1, n);
            break;
          case 8:
            for (n = e + 3; n < r; n += 2)
              this.addTriangle(n - 3, n - 2, n - 1),
                this.addTriangle(n - 3, n - 1, n);
        }
        return this;
      },
      getVertex: function (t) {
        if ((t = pd.toNumber(t, -1)) < 0 || t >= this.vertices.length)
          throw new Error(
            "Invalid vertex index, must be a number between zero and `vertices` array length."
          );
        return this.vertices[t];
      },
      getNormal: function (t) {
        if ((t = pd.toNumber(t, -1)) < 0 || t >= this.normals.length)
          throw new Error(
            "Invalid normal index, must be a number between zero and `normals` array length."
          );
        return this.normals[t];
      },
      setNormal: function (t, e) {
        if (this.hasVertexNormals) {
          if (this.normals.length != this.vertices.length) {
            if (this.normals.length < this.vertices.length)
              for (
                var r = this.normals.length, n = this.vertices.length;
                r < n;
                ++r
              )
                this.normals[r] = this.defaultNormal;
            this.normals.length = this.vertices.length;
          }
          if (t < this.normals.length) return (this.normals[t] = e), !0;
        }
        return !1;
      },
      reuseStart: function (t) {
        return (
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
          (this.isReusing = !0),
          null != t
            ? ((this._vtx_index = +t.vtx_start || 0),
              (this._tri_index = +t.tri_start || 0),
              (this._lin_index = +t.lin_start || 0),
              (this._pts_index = +t.pts_start || 0))
            : ((this._vtx_index = 0),
              (this._tri_index = 0),
              (this._lin_index = 0),
              (this._pts_index = 0)),
          this
        );
      },
      addVertex: function (t, e, r, n) {
        var i = -1;
        return (
          t &&
            (2 == t.length && (t[2] = 0),
            this.isReusing && this._vtx_index < this.vertices.length
              ? ((i = this._vtx_index),
                (this.vertices[i] = t),
                this.hasVertexColors &&
                  (this.colors[i] = e || this.defaultColor),
                this.hasVertexNormals &&
                  (this.normals[i] = r || this.defaultNormal),
                this.hasVertexCoords &&
                  (this.coords[i] = n || this.defaultCoord),
                this._vtx_index++)
              : ((i = this.vertices.length),
                this.vertices.push(t),
                this.hasVertexColors &&
                  this.colors.push(e || this.defaultColor),
                this.hasVertexNormals &&
                  this.normals.push(r || this.defaultNormal),
                this.hasVertexCoords &&
                  this.coords.push(n || this.defaultCoord),
                (this._vtx_index = i + 1))),
          i
        );
      },
      addVertexObject: function (t) {
        var e = -1;
        if (t) {
          if (!t.pos)
            throw new TypeError(
              "Vertex data must at least have a valid 'pos' property."
            );
          2 == t.pos.length && (t.pos[2] = 0),
            this.isReusing && this._vtx_index < this.vertices.length
              ? ((e = this._vtx_index),
                (this.vertices[e] = t.pos),
                this.hasVertexColors &&
                  (this.colors[e] = t.color || this.defaultColor),
                this.hasVertexNormals &&
                  (this.normals[e] = t.normal || this.defaultNormal),
                this.hasVertexCoords &&
                  (this.coords[e] = t.coord || this.defaultCoord),
                this._vtx_index++)
              : ((e = this.vertices.length),
                this.vertices.push(t.pos),
                this.hasVertexColors &&
                  this.colors.push(t.color || this.defaultColor),
                this.hasVertexNormals &&
                  this.normals.push(t.normal || this.defaultNormal),
                this.hasVertexCoords &&
                  this.coords.push(t.coord || this.defaultCoord),
                (this._vtx_index = e + 1));
        }
        return e;
      },
      addTriangle: function (t, e, r) {
        if (this.isReusing && this._tri_index < this.triangles.length) {
          var n = this.triangles[this._tri_index];
          return (n[0] = t), (n[1] = e), (n[2] = r), this._tri_index++;
        }
        return (
          this.triangles.push([t, e, r]),
          (this._tri_index = this.triangles.length),
          this.triangles.length - 1
        );
      },
      addQuad: function (t, e, r, n) {
        var i = this.addTriangle(t, e, r);
        return this.addTriangle(t, r, n), i;
      },
      addLine: function (t, e) {
        if (this.isReusing && this._lin_index < this.lines.length) {
          var r = this.lines[this._lin_index];
          return (r[0] = t), (r[1] = e), this._lin_index++;
        }
        return (
          this.lines.push([t, e]),
          (this._lin_index = this.lines.length),
          this.lines.length - 1
        );
      },
      addLineStrip: function (t) {
        for (
          var e = pd.isArray(t) ? t : arguments,
            r = e.length,
            n = this.lineCount(),
            i = 1;
          i < r;
          ++i
        )
          this.addLine(e[i - 1], e[i]);
        return n;
      },
      addLineLoop: function (t) {
        for (
          var e = pd.isArray(t) ? t : arguments,
            r = e.length,
            n = this.lineCount(),
            i = 1;
          i < r;
          ++i
        )
          this.addLine(e[i - 1], e[i]);
        return 2 < r && this.addLine(e[r - 1], e[0]), n;
      },
      addDraftingLine: function (t, e, r, n) {
        var i = this.addLine(t, e);
        if (0 < r) {
          var a = [
              this.defaultColor[0],
              this.defaultColor[1],
              this.defaultColor[2],
              0,
            ],
            o = this.vertices[t],
            s = this.vertices[e],
            d = new pd3D.Vector(s[0] - o[0], s[1] - o[1], s[2] - o[2])
              .normalize()
              .scale(r);
          this.addLine(
            e,
            this.addVertex([s[0] + d.x, s[1] + d.y, s[2] + d.z], a)
          ),
            n ||
              this.addLine(
                t,
                this.addVertex([o[0] - d.x, o[1] - d.y, o[2] - d.z], a)
              );
        }
        return i;
      },
      addDraftingLines: function (t, e) {
        var r = -1,
          n = t.length;
        if (1 < n) {
          r = this.addLine(t[0], t[1]);
          for (var i = 2; i < n; ++i) this.addLine(t[i - 1], t[i]);
          if (0 < e) {
            var a = [
                this.defaultColor[0],
                this.defaultColor[1],
                this.defaultColor[2],
                0,
              ],
              o = this.vertices[t[0]],
              s = this.vertices[t[1]],
              d = new pd3D.Vector(s[0] - o[0], s[1] - o[1], s[2] - o[2])
                .normalize()
                .scale(e);
            this.addLine(
              t[0],
              this.addVertex([o[0] - d.x, o[1] - d.y, o[2] - d.z], a)
            ),
              (o = this.vertices[t[n - 2]]),
              (s = this.vertices[t[n - 1]]),
              d
                .init(s[0] - o[0], s[1] - o[1], s[2] - o[2])
                .normalize()
                .scale(e),
              this.addLine(
                t[n - 1],
                this.addVertex([s[0] + d.x, s[1] + d.y, s[2] + d.z], a)
              );
          }
        }
        return r;
      },
      addPoint: function (t) {
        return this.isReusing && this._pts_index < this.points.length
          ? ((this.points[this._pts_index] = t), this._pts_index++)
          : (this.points.push(t),
            (this._pts_index = this.points.length),
            this.points.length - 1);
      },
      addPrimitive: function (t, e) {
        if (!pd.isArray(e) || !pd.isArray(e[0]))
          throw new TypeError(
            "Vertices must be given as an array of vector arrays."
          );
        this.begin(t);
        for (var r = 0, n = e.length; r < n; ++r) this.vertex(e[r]);
        return this.end(), this;
      },
      reuseEnd: function () {
        return (
          this.vertices &&
            this.vertices.length > this._vtx_index &&
            (this.vertices.length = this._vtx_index),
          this.hasVertexNormals &&
            this.normals.length > this._vtx_index &&
            (this.normals.length = this._vtx_index),
          this.hasVertexColors &&
            this.colors.length > this._vtx_index &&
            (this.colors.length = this._vtx_index),
          this.hasVertexCoords &&
            this.coords.length > this._vtx_index &&
            (this.coords.length = this._vtx_index),
          this.triangles &&
            this.triangles.length > this._tri_index &&
            (this.triangles.length = this._tri_index),
          this.lines &&
            this.lines.length > this._lin_index &&
            (this.lines.length = this._lin_index),
          this.points &&
            this.points.length > this._pts_index &&
            (this.points.length = this._pts_index),
          (this.isReusing = !1),
          this.setChangeFlag(4),
          this
        );
      },
      hasContent: function () {
        if (this.isReusing) {
          if (
            0 < this._vtx_index &&
            (0 < this._tri_index || 0 < this._pts_index || 0 < this._lin_index)
          )
            return !0;
        } else if (
          this.vertices &&
          0 < this.vertices.length &&
          ((this.triangles && 0 < this.triangles.length) ||
            (this.points && 0 < this.points.length) ||
            (this.lines && 0 < this.lines.length))
        )
          return !0;
        return !1;
      },
      vertexCount: function () {
        return this.isReusing
          ? this._vtx_index
          : this.vertices
          ? this.vertices.length
          : 0;
      },
      triangleCount: function () {
        return this.isReusing
          ? this._tri_index
          : this.triangles
          ? this.triangles.length
          : 0;
      },
      lineCount: function () {
        return this.isReusing
          ? this._lin_index
          : this.lines
          ? this.lines.length
          : 0;
      },
      pointCount: function () {
        return this.isReusing
          ? this._pts_index
          : this.points
          ? this.points.length
          : 0;
      },
      startSubMesh: function (t) {
        return (
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
          ((t = t || new pd3D.SubMesh()).vtx_start = t.vtx_stop =
            this.vertexCount()),
          (t.tri_start = t.tri_stop = this.triangleCount()),
          (t.lin_start = t.lin_stop = this.lineCount()),
          (t.pts_start = t.pts_stop = this.pointCount()),
          (this.activeSubMesh = t)
        );
      },
      endSubMesh: function (t) {
        return (
          null != (t = t || this.activeSubMesh) &&
            ((t.vtx_stop = this.vertexCount()),
            (t.tri_stop = this.triangleCount()),
            (t.lin_stop = this.lineCount()),
            (t.pts_stop = this.pointCount())),
          (this.activeSubMesh = null),
          t
        );
      },
      merge: function (t, e) {
        if (t) {
          var r,
            n,
            i,
            a = this.vertexCount(),
            o = this.isReusing;
          o && this.reuseEnd();
          var s = t.vertices,
            d = this.vertices;
          if (e) {
            if (pd.isArray(e))
              for (
                e[0] = +e[0], e[1] = +e[1], e[2] = +e[2], r = 0, n = s.length;
                r < n;
                ++r
              )
                d.push([s[r][0] + e[0], s[r][1] + e[1], s[r][2] + e[2]]);
            else if ("x" in e)
              for (r = 0, n = s.length; r < n; ++r)
                d.push([s[r][0] + e.x, s[r][1] + e.y, s[r][2] + e.z]);
          } else for (r = 0, n = s.length; r < n; ++r) d.push(s[r]);
          if (this.hasVertexNormals && t.hasVertexNormals)
            for (
              s = t.normals, d = this.normals, r = 0, n = s.length;
              r < n;
              ++r
            )
              d.push(s[r]);
          if (this.hasVertexColors && t.hasVertexColors)
            for (s = t.colors, d = this.colors, r = 0, n = s.length; r < n; ++r)
              d.push(s[r]);
          if (this.hasVertexCoords && t.hasVertexCoords)
            for (s = t.coords, d = this.coords, r = 0, n = s.length; r < n; ++r)
              d.push(s[r]);
          if (this.triangles && 0 < this.triangles.length)
            for (
              s = t.triangles, d = this.triangles, r = 0, n = s.length;
              r < n;
              ++r
            )
              (i = s[r]), d.push([i[0] + a, i[1] + a, i[2] + a]);
          if (this.lines && 0 < this.lines.length)
            for (s = t.lines, d = this.lines, r = 0, n = s.length; r < n; ++r)
              (i = s[r]), d.push([i[0] + a, i[1] + a]);
          if (this.points && 0 < this.points.length)
            for (s = t.points, d = this.points, r = 0, n = s.length; r < n; ++r)
              d.push(s[r] + a);
          this.vertices && (this._vtx_index = this.vertices.length),
            this.triangles && (this._tri_index = this.triangles.length),
            this.lines && (this._lin_index = this.lines.length),
            this.points && (this._pts_index = this.points.length),
            (this.isReusing = o);
        }
        return this.setChangeFlag(4), this;
      },
      addLineExtensions: function (t, e, r, n, i) {
        if (t && 0 < e && t.lines && t.lineCount()) {
          this.lines || this.addIndexBuffer("lines");
          var a,
            o,
            s,
            d,
            l,
            h,
            u,
            c = new pd3D.Vector(),
            p = t.vertices,
            f = this.defaultColor,
            m = [f[0], f[1], f[2], 0],
            g = t.lineCount();
          (n = pd.constrainTo(pd.toNumber(n, 0), 0, g)),
            (i = pd.constrainTo(pd.toNumber(i, g), 0, g));
          for (var v = n; v < i; ++v)
            (a = p[(u = t.lines[v])[0]]),
              (o = p[u[1]]),
              (c.x = o[0] - a[0]),
              (c.y = o[1] - a[1]),
              (c.z = o[2] - a[2]),
              (h = Math.min(e, 0.2 * c.length())),
              c.normalize().scale(h),
              (d = this.addVertex(a, f)),
              (l = this.addVertex(o, f)),
              r && this.addLine(d, l),
              (s = this.addVertex([a[0] - c.x, a[1] - c.y, a[2] - c.z], m)),
              this.addLine(d, s),
              (s = this.addVertex([o[0] + c.x, o[1] + c.y, o[2] + c.z], m)),
              this.addLine(l, s);
          (this.defaultColor = f),
            this.setChangeFlag(1, "gl_Vertex"),
            this.setChangeFlag(2, "lines");
        }
        return this;
      },
      updateOpacity: function (t) {
        if (this.colors) {
          t = pd.constrainTo(t, 0, 1);
          for (var e, r = this.colors.length, n = 0; n < r; ++n)
            (e = this.colors[n]).fade || (e[3] = t);
          this.setChangeFlag(1, "gl_Color");
        }
        return this;
      },
      compile: function () {
        if (
          (this.isReusing && this.reuseEnd(),
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
          0 < this.vertices.length)
        ) {
          for (var t in this.vertexBuffers) {
            ((r = this.vertexBuffers[t]).data = this[r.name]), r.compile();
          }
          for (var e in this.indexBuffers) {
            var r;
            ((r = this.indexBuffers[e]).data = this[e]), r.compile();
          }
        }
        return (this._changeFlag = 0), this;
      },
      compileBuffer: function (t) {
        if (
          (this.isReusing && this.reuseEnd(),
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
          this.vertexBuffers[t])
        )
          ((e = this.vertexBuffers[t]).data = this[e.name]), e.compile();
        else if (this.indexBuffers[t]) {
          var e;
          ((e = this.indexBuffers[t]).data = this[t]), e.compile();
        }
        return this;
      },
      compileBuffers: function (t) {
        this.isReusing && this.reuseEnd(),
          null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh);
        for (
          var e = pd.isArray(t) ? t : arguments, r = 0, n = e.length;
          r < n;
          ++r
        ) {
          var i = e[r];
          if (this.vertexBuffers[i])
            ((a = this.vertexBuffers[i]).data = this[a.name]), a.compile();
          else if (this.indexBuffers[i]) {
            var a;
            ((a = this.indexBuffers[i]).data = this[i]), a.compile();
          }
        }
        return this;
      },
      clear: function () {
        for (var t in (this.isReusing && this.reuseEnd(),
        null != this.activeSubMesh && this.endSubMesh(this.activeSubMesh),
        this.vertices && (this.vertices.length = 0),
        this.normals && (this.normals.length = 0),
        this.colors && (this.colors.length = 0),
        this.coords && (this.coords.length = 0),
        this.triangles && (this.triangles.length = 0),
        this.points && (this.points.length = 0),
        this.lines && (this.lines.length = 0),
        this.vertexBuffers))
          this.vertexBuffers[t].data = null;
        for (var e in this.indexBuffers) this.indexBuffers[e].data = null;
        return (this._changeFlag = 4), this;
      },
      destroy: function () {
        for (var t in (this.clear(), this.vertexBuffers)) {
          var e = this.vertexBuffers[t];
          e.buffer &&
            (gl.bindBuffer(i, e.buffer),
            gl.bufferData(i, 1, a),
            gl.deleteBuffer(e.buffer));
        }
        for (var r in this.indexBuffers) {
          var n = this.indexBuffers[r];
          n.buffer &&
            (gl.bindBuffer(i, n.buffer),
            gl.bufferData(i, 1, a),
            gl.deleteBuffer(n.buffer));
        }
        return (
          (this.vertexBuffers = {}),
          (this.indexBuffers = {}),
          (this._changeFlag = 0),
          this
        );
      },
      transform: function (t, e, r, n) {
        var i,
          a = this.vertexCount();
        (r = pd.toNumber(r, 0)),
          (n = pd.toNumber(n, a)),
          a <= r && (r = a - 1),
          r < 0 && (r = 0);
        for (var o = r; o < n; ++o)
          (i = this.vertices[o].slice()),
            t.applyPointTransformToArray(i),
            (this.vertices[o] = i);
        if (this.normals && this.normals.length == a) {
          e = e || t.inverse().transpose();
          for (o = r; o < n; ++o)
            (i = this.normals[o].slice()),
              pd3D.Vector.normaliseArrayInPlace(
                e.applyVectorTransformToArray(i)
              ),
              (this.normals[o] = i);
        }
        return (
          this.setChangeFlag(1, "gl_Vertex"),
          this.setChangeFlag(1, "gl_Normal"),
          this
        );
      },
      transformInPlace: function (t, e, r, n) {
        var i = this.vertexCount();
        (r = pd.toNumber(r, 0)),
          (n = pd.toNumber(n, i)),
          i <= r && (r = i - 1),
          r < 0 && (r = 0);
        for (var a = r; a < n; ++a)
          t.applyPointTransformToArray(this.vertices[a]);
        if (this.normals && this.normals.length == i) {
          e = e || t.inverse().transpose();
          for (a = r; a < n; ++a)
            pd3D.Vector.normaliseArrayInPlace(
              e.applyVectorTransformToArray(this.normals[a])
            );
        }
        return (
          this.setChangeFlag(1, "gl_Vertex"),
          this.setChangeFlag(1, "gl_Normal"),
          this
        );
      },
      reverseNormals: function () {
        return (
          this.normals &&
            (this.isReusing &&
              this.normals.length > this._vtx_index &&
              (this.normals.length = this._vtx_index),
            (this.normals = this.normals.map(function (t) {
              return [-t[0], -t[1], -t[2]];
            })),
            this.setChangeFlag(1, "gl_Normal")),
          this
        );
      },
      reverseTriangles: function () {
        if (this.triangles) {
          for (var t, e, r = this.triangleCount(), n = 0; n < r; ++n)
            (t = (e = this.triangles[n])[1]), (e[1] = e[2]), (e[2] = t);
          this.setChangeFlag(2, "triangles");
        }
        return this;
      },
      translate: function (e, r, n) {
        return (
          this.vertices &&
            (this.isReusing &&
              this.vertices.length > this._vtx_index &&
              (this.vertices.length = this._vtx_index),
            (this.vertices = this.vertices.map(function (t) {
              return [t[0] + e, t[1] + r, t[2] + n];
            })),
            this.setChangeFlag(1, "gl_Vertex")),
          this
        );
      },
      scale: function (e, r, n) {
        return (
          this.vertices &&
            (this.isReusing &&
              this.vertices.length > this._vtx_index &&
              (this.vertices.length = this._vtx_index),
            (this.vertices = this.vertices.map(function (t) {
              return [t[0] * e, t[1] * r, t[2] * n];
            })),
            this.setChangeFlag(1, "gl_Vertex")),
          this
        );
      },
      swapYZ: function () {
        return (
          this.vertices &&
            (this.isReusing &&
              this.vertices.length > this._vtx_index &&
              (this.vertices.length = this._vtx_index),
            (this.vertices = this.vertices.map(function (t) {
              return [t[0], -t[2], t[1]];
            })),
            this.setChangeFlag(1, "gl_Vertex")),
          this.normals &&
            (this.isReusing &&
              this.normals.length > this._vtx_index &&
              (this.normals.length = this._vtx_index),
            (this.normals = this.normals.map(function (t) {
              return [t[0], -t[2], t[1]];
            })),
            this.setChangeFlag(1, "gl_Normal")),
          this
        );
      },
      mirrorY: function () {
        return (
          this.vertices &&
            (this.isReusing &&
              this.vertices.length > this._vtx_index &&
              (this.vertices.length = this._vtx_index),
            (this.vertices = this.vertices.map(function (t) {
              return [t[0], -t[1], t[2]];
            })),
            this.setChangeFlag(1, "gl_Vertex")),
          this.normals &&
            (this.isReusing &&
              this.normals.length > this._vtx_index &&
              (this.normals.length = this._vtx_index),
            (this.normals = this.normals.map(function (t) {
              return [t[0], -t[1], t[2]];
            })),
            this.setChangeFlag(1, "gl_Normal")),
          this.reverseTriangles(),
          this
        );
      },
      computeNormals: function () {
        this.normals || this.addVertexBuffer("normals", "gl_Normal"),
          this.isReusing && this.reuseEnd();
        for (var t = this.normals.length, e = 0; e < t; ++e)
          this.normals[e] = new pd3D.Vector();
        var r = this.triangles.length;
        for (e = 0; e < r; ++e) {
          var n = this.triangles[e],
            i = pd3D.Vector.fromArray(this.vertices[n[0]]),
            a = pd3D.Vector.fromArray(this.vertices[n[1]]),
            o = pd3D.Vector.fromArray(this.vertices[n[2]]),
            s = a.subtract(i).cross(o.subtract(i)).normalize();
          (this.normals[n[0]] = this.normals[n[0]].add(s)),
            (this.normals[n[1]] = this.normals[n[1]].add(s)),
            (this.normals[n[2]] = this.normals[n[2]].add(s));
        }
        for (e = 0; e < t; ++e)
          this.normals[e] = this.normals[e].normalize().toArray();
        return this.setChangeFlag(1, "gl_Normal"), this;
      },
      computeWireframe: function (t) {
        var e,
          r,
          n,
          i,
          a,
          o,
          s = new pd.IndexCounter();
        if ((this.isReusing && this.reuseEnd(), t)) {
          for (r = this.triangles.length, d = 0; d < r; ++d)
            (i = (n = this.triangles[d])[0]),
              (a = n[1]),
              (o = n[2]),
              s.count([Math.min(i, a), Math.max(i, a)]),
              s.count([Math.min(a, o), Math.max(a, o)]),
              s.count([Math.min(o, i), Math.max(o, i)]);
          this.lines || this.addIndexBuffer("lines"), (r = s.unique.length);
          for (var d = 0; d < r; ++d)
            0 < s.counter[d] % 2 && this.lines.push(s.unique[d]);
        } else {
          for (r = this.triangles.length, d = 0; d < r; ++d)
            for (n = this.triangles[d], e = 0; e < n.length; ++e)
              (i = n[e]),
                (a = n[(e + 1) % n.length]),
                s.count([Math.min(i, a), Math.max(i, a)]);
          this.lines || this.addIndexBuffer("lines"), (this.lines = s.unique);
        }
        return this.setChangeFlag(2, "lines"), this;
      },
      computeBoundingBox: function () {
        var t, e, r, n;
        this.boundingBox
          ? ((t = this.boundingBox).min.init(
              Number.MAX_VALUE,
              Number.MAX_VALUE,
              Number.MAX_VALUE
            ),
            (t.max = pd3D.Vector.negative(t.min, t.max)))
          : (t = this.boundingBox =
              {
                min: new pd3D.Vector(
                  Number.MAX_VALUE,
                  Number.MAX_VALUE,
                  Number.MAX_VALUE
                ),
                max: new pd3D.Vector(
                  -Number.MAX_VALUE,
                  -Number.MAX_VALUE,
                  -Number.MAX_VALUE
                ),
              }),
          (r = t.min),
          (n = t.max);
        for (var i = this.vertexCount(), a = 0; a < i; ++a)
          (e = this.vertices[a]),
            r.x > e[0] && (r.x = e[0]),
            r.y > e[1] && (r.y = e[1]),
            r.z > e[2] && (r.z = e[2]),
            n.x < e[0] && (n.x = e[0]),
            n.y < e[1] && (n.y = e[1]),
            n.z < e[2] && (n.z = e[2]);
        return this;
      },
      getAABB: function (t) {
        var e, r, n;
        (t && t.min) ||
          ((t = {
            min: new pd3D.Vector(
              Number.MAX_VALUE,
              Number.MAX_VALUE,
              Number.MAX_VALUE
            ),
          }).max = t.min.negative()),
          (r = t.min),
          (n = t.max);
        for (var i = this.vertexCount(), a = 0; a < i; ++a)
          (e = this.vertices[a]),
            r.x > e[0] && (r.x = e[0]),
            r.y > e[1] && (r.y = e[1]),
            r.z > e[2] && (r.z = e[2]),
            n.x < e[0] && (n.x = e[0]),
            n.y < e[1] && (n.y = e[1]),
            n.z < e[2] && (n.z = e[2]);
        return t;
      },
      getBoundingSphere: function () {
        for (
          var t = this.getAABB(),
            e = { center: t.min.add(t.max).divide(2), radius: 0 },
            r = new pd3D.Vector(),
            n = this.vertexCount(),
            i = 0;
          i < n;
          ++i
        )
          e.radius = Math.max(
            e.radius,
            pd3D.Vector.fromArray(this.vertices[i], r)
              .subtract(e.center)
              .length()
          );
        return e;
      },
    }),
    (pd3D.Mesh.load = function (t, e, r) {
      return (
        "coords" in (e = e || {}) || (e.coords = !!t.coords),
        "normals" in e || (e.normals = !!t.normals),
        "colors" in e || (e.colors = !!t.colors),
        "triangles" in e || (e.triangles = !!t.triangles),
        "points" in e || (e.points = !!t.points),
        "lines" in e || (e.lines = !!t.lines),
        r ? r.clear() : (r = new pd3D.Mesh(e)),
        (r.vertices = t.vertices),
        r.coords && (r.coords = t.coords),
        r.normals && (r.normals = t.normals),
        r.colors && (r.colors = t.colors),
        r.triangles && (r.triangles = t.triangles),
        r.points && (r.points = t.points),
        r.lines && (r.lines = t.lines),
        "twoSided" in t && (r.twoSided = t.twoSided),
        r.compile(),
        r
      );
    }),
    (pd3D.SubMesh = function () {
      (this.vtx_start = 0),
        (this.vtx_stop = 0),
        (this.tri_start = 0),
        (this.tri_stop = 0),
        (this.lin_start = 0),
        (this.lin_stop = 0),
        (this.pts_start = 0),
        (this.pts_stop = 0);
    }),
    (pd3D.Buffer = function (t) {
      (t = t || {}),
        (this.buffer = null),
        (this.target = pd.toInteger(t.target, i)),
        (this.type = t.type || Float32Array),
        (this.usageHint = pd.toInteger(t.usageHint, a)),
        (this.name = t.name || ""),
        (this.updateRequired = !0),
        (this.spacing = pd.toInteger(t.spacing, 1)),
        (this.length = pd.toInteger(t.length, 0)),
        (this.data = 0 < this.length ? this.type(this.length) : []);
    }),
    (pd3D.Buffer.prototype.compile = function (t) {
      var e = this.data;
      if (!pd.isTypedArray(e)) {
        var r = [];
        if (0 < e.length && !pd.isArray(e[0])) r = e;
        else if (Array.prototype.flat) r = e.flat();
        else
          for (var n = 0; n < e.length; n += 1e4)
            r = Array.prototype.concat.apply(r, e.slice(n, n + 1e4));
        var i = 0 < e.length ? r.length / e.length : 0;
        if (i != Math.round(i))
          throw "buffer elements not of consistent size, average size is " + i;
        (e = new this.type(r)), (this.spacing = i);
      }
      (this.buffer = this.buffer || gl.createBuffer()),
        (this.length = e.length),
        gl.bindBuffer(this.target, this.buffer),
        gl.bufferData(this.target, e, t || this.usageHint),
        (this.updateRequired = !1);
    }),
    (pd3D.Vector = function (t, e, r) {
      (this.x = 0),
        (this.y = 0),
        (this.z = 0) < arguments.length &&
          (1 == arguments.length
            ? t instanceof pd3D.Vector
              ? ((this.x = t.x), (this.y = t.y), (this.z = t.z))
              : pd.isArray(t)
              ? ((this.x = +t[0] || 0),
                (this.y = +t[1] || 0),
                (this.z = +t[2] || 0))
              : ((t = +t || 0), (this.x = t), (this.y = t), (this.z = t))
            : ((this.x = +t || 0), (this.y = +e || 0), (this.z = +r || 0)));
    }),
    (pd3D.Vector.prototype = {
      negate: function () {
        return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
      },
      normalize: function () {
        var t = this.length();
        return 0 < t && ((this.x /= t), (this.y /= t), (this.z /= t)), this;
      },
      move: function (t, e, r) {
        return (
          1 == arguments.length
            ? t instanceof pd3D.Vector
              ? ((this.x += t.x), (this.y += t.y), (this.z += t.z))
              : pd.isArray(t)
              ? ((this.x += +t[0] || 0),
                (this.y += +t[1] || 0),
                (this.z += +t[2] || 0))
              : ((t = +t || 0), (this.x += t), (this.y += t), (this.z += t))
            : ((this.x += +t || 0), (this.y += +e || 0), (this.z += +r || 0)),
          this
        );
      },
      scale: function (t, e, r) {
        return (
          1 == arguments.length
            ? t instanceof pd3D.Vector
              ? ((this.x *= t.x), (this.y *= t.y), (this.z *= t.z))
              : pd.isArray(t)
              ? ((this.x *= +t[0] || 0),
                (this.y *= +t[1] || 0),
                (this.z *= +t[2] || 0))
              : ((t = +t || 0), (this.x *= t), (this.y *= t), (this.z *= t))
            : ((this.x *= +t || 0), (this.y *= +e || 0), (this.z *= +r || 0)),
          this
        );
      },
      fromPolarAngles: function (t, e) {
        var r = Math.cos(e);
        return this.init(r * Math.sin(t), r * Math.cos(t), Math.sin(e)), this;
      },
      fromArray: function (t) {
        return (this.x = t[0]), (this.y = t[1]), (this.z = t[2]), this;
      },
      init: function (t, e, r) {
        return (
          1 == arguments.length
            ? t instanceof pd3D.Vector
              ? ((this.x = t.x), (this.y = t.y), (this.z = t.z))
              : pd.isArray(t)
              ? ((this.x = +t[0] || 0),
                (this.y = +t[1] || 0),
                (this.z = +t[2] || 0))
              : ((t = +t || 0), (this.x = t), (this.y = t), (this.z = t))
            : ((this.x = +t || 0), (this.y = +e || 0), (this.z = +r || 0)),
          this
        );
      },
      distanceTo: function (t) {
        var e = t.x - this.x,
          r = t.y - this.y,
          n = t.z - this.z;
        return Math.sqrt(e * e + r * r + n * n);
      },
      negative: function () {
        return new pd3D.Vector(-this.x, -this.y, -this.z);
      },
      add: function (t) {
        return t instanceof pd3D.Vector
          ? new pd3D.Vector(this.x + t.x, this.y + t.y, this.z + t.z)
          : new pd3D.Vector(this.x + t, this.y + t, this.z + t);
      },
      subtract: function (t) {
        return t instanceof pd3D.Vector
          ? new pd3D.Vector(this.x - t.x, this.y - t.y, this.z - t.z)
          : new pd3D.Vector(this.x - t, this.y - t, this.z - t);
      },
      multiply: function (t) {
        return t instanceof pd3D.Vector
          ? new pd3D.Vector(this.x * t.x, this.y * t.y, this.z * t.z)
          : new pd3D.Vector(this.x * t, this.y * t, this.z * t);
      },
      divide: function (t) {
        return t instanceof pd3D.Vector
          ? new pd3D.Vector(this.x / t.x, this.y / t.y, this.z / t.z)
          : new pd3D.Vector(this.x / t, this.y / t, this.z / t);
      },
      closeTo: function (t, e) {
        return (
          (e = pd.toNumber(e, pd.Const.EPSILON)),
          !(this.x > t.x + e || this.x < t.x - e) &&
            !(this.y > t.y + e || this.y < t.y - e) &&
            !(this.z > t.z + e || this.z < t.z - e)
        );
      },
      equals: function (t) {
        return this.x == t.x && this.y == t.y && this.z == t.z;
      },
      dot: function (t) {
        return this.x * t.x + this.y * t.y + this.z * t.z;
      },
      cross: function (t) {
        return new pd3D.Vector(
          this.y * t.z - this.z * t.y,
          this.z * t.x - this.x * t.z,
          this.x * t.y - this.y * t.x
        );
      },
      length: function () {
        return Math.sqrt(this.dot(this));
      },
      unit: function () {
        return this.divide(this.length());
      },
      min: function () {
        return Math.min(Math.min(this.x, this.y), this.z);
      },
      max: function () {
        return Math.max(Math.max(this.x, this.y), this.z);
      },
      toAngles: function () {
        return {
          theta: Math.atan2(this.y, this.x),
          phi: Math.asin(this.z / this.length()),
        };
      },
      toArray: function (t) {
        return t
          ? [this.x, this.y, this.z].slice(0, t)
          : [this.x, this.y, this.z];
      },
      clone: function () {
        return new pd3D.Vector(this.x, this.y, this.z);
      },
      angleBetweenPoints: function (t, e) {
        var r = this.distanceTo(t) * this.distanceTo(e),
          n =
            (t.x - this.x) * (e.x - this.x) +
            (t.y - this.y) * (e.y - this.y) +
            (t.z - this.z) * (e.z - this.z),
          i = 1e-12 < Math.abs(r) ? n / r : 0;
        return 1 <= i ? 0 : i <= -1 ? Math.PI : Math.acos(i);
      },
    }),
    (pd3D.Vector.negative = function (t, e) {
      return (
        ((e = e || new pd3D.Vector()).x = -t.x), (e.y = -t.y), (e.z = -t.z), e
      );
    }),
    (pd3D.Vector.add = function (t, e, r) {
      return (
        (r = r || new pd3D.Vector()),
        e instanceof pd3D.Vector
          ? ((r.x = t.x + e.x), (r.y = t.y + e.y), (r.z = t.z + e.z))
          : ((r.x = t.x + e), (r.y = t.y + e), (r.z = t.z + e)),
        r
      );
    }),
    (pd3D.Vector.subtract = function (t, e, r) {
      return (
        (r = r || new pd3D.Vector()),
        e instanceof pd3D.Vector
          ? ((r.x = t.x - e.x), (r.y = t.y - e.y), (r.z = t.z - e.z))
          : ((r.x = t.x - e), (r.y = t.y - e), (r.z = t.z - e)),
        r
      );
    }),
    (pd3D.Vector.multiply = function (t, e, r) {
      return (
        (r = r || new pd3D.Vector()),
        e instanceof pd3D.Vector
          ? ((r.x = t.x * e.x), (r.y = t.y * e.y), (r.z = t.z * e.z))
          : ((r.x = t.x * e), (r.y = t.y * e), (r.z = t.z * e)),
        r
      );
    }),
    (pd3D.Vector.divide = function (t, e, r) {
      return (
        (r = r || new pd3D.Vector()),
        e instanceof pd3D.Vector
          ? ((r.x = t.x / e.x), (r.y = t.y / e.y), (r.z = t.z / e.z))
          : ((r.x = t.x / e), (r.y = t.y / e), (r.z = t.z / e)),
        r
      );
    }),
    (pd3D.Vector.cross = function (t, e, r) {
      r = r || new pd3D.Vector();
      var n = t.y * e.z - t.z * e.y,
        i = t.z * e.x - t.x * e.z,
        a = t.x * e.y - t.y * e.x;
      return (r.x = n), (r.y = i), (r.z = a), r;
    }),
    (pd3D.Vector.unit = function (t, e) {
      e = e || new pd3D.Vector();
      var r = t.length();
      return (e.x = t.x / r), (e.y = t.y / r), (e.z = t.z / r), e;
    }),
    (pd3D.Vector.fromAngles = function (t, e, r) {
      return (
        ((r = r || new pd3D.Vector()).x = Math.cos(t) * Math.cos(e)),
        (r.y = Math.sin(t) * Math.cos(e)),
        (r.z = Math.sin(e)),
        r
      );
    }),
    (pd3D.Vector.rotateX = function (t, e, r, n) {
      var i = t.y - e.y,
        a = t.z - e.z,
        o = Math.cos(r),
        s = Math.sin(r);
      return (
        ((n = n || new pd3D.Vector()).y = i * o - a * s + e.y),
        (n.z = a * o + i * s + e.z),
        (n.x = t.x),
        n
      );
    }),
    (pd3D.Vector.rotateY = function (t, e, r, n) {
      var i = t.x - e.x,
        a = t.z - e.z,
        o = Math.cos(r),
        s = Math.sin(r);
      return (
        ((n = n || new pd3D.Vector()).x = i * o - a * s + e.x),
        (n.z = a * o + i * s + e.z),
        (n.y = t.y),
        n
      );
    }),
    (pd3D.Vector.rotateZ = function (t, e, r, n) {
      var i = t.x - e.x,
        a = t.y - e.y,
        o = Math.cos(r),
        s = Math.sin(r);
      return (
        ((n = n || new pd3D.Vector()).x = i * o - a * s + e.x),
        (n.y = a * o + i * s + e.y),
        (n.z = t.z),
        n
      );
    }),
    (pd3D.Vector.sphericalToCartesian3D = function (t, e, r, n) {
      var i = Math.cos(t),
        a = Math.sin(t),
        o = r * Math.cos(e);
      return (
        ((n = n || new pd3D.Vector()).x = o * i),
        (n.y = o * a),
        (n.z = r * Math.sin(e)),
        n
      );
    }),
    (pd3D.Vector.angleBetweenPoints = function (t, e, r) {
      var n = t.distanceTo(e) * t.distanceTo(r),
        i =
          (e.x - t.x) * (r.x - t.x) +
          (e.y - t.y) * (r.y - t.y) +
          (e.z - t.z) * (r.z - t.z),
        a = 1e-12 < Math.abs(n) ? i / n : 0;
      return 1 <= a ? 0 : a <= -1 ? Math.PI : Math.acos(a);
    }),
    (pd3D.Vector.randomDirection = function (t) {
      return pd3D.Vector.fromAngles(
        Math.random() * Math.PI * 2,
        Math.asin(2 * Math.random() - 1),
        t
      );
    }),
    (pd3D.Vector.min = function (t, e, r) {
      return (
        ((r = r || new pd3D.Vector()).x = Math.min(t.x, e.x)),
        (r.y = Math.min(t.y, e.y)),
        (r.z = Math.min(t.z, e.z)),
        r
      );
    }),
    (pd3D.Vector.max = function (t, e, r) {
      return (
        ((r = r || new pd3D.Vector()).x = Math.max(t.x, e.x)),
        (r.y = Math.max(t.y, e.y)),
        (r.z = Math.max(t.z, e.z)),
        r
      );
    }),
    (pd3D.Vector.lerp = function (t, e, r, n) {
      if (((n = n || new pd3D.Vector()), r instanceof pd3D.Vector))
        (n.x = (1 - r.x) * t.x + r.x * e.x),
          (n.y = (1 - r.y) * t.y + r.y * e.y),
          (n.z = (1 - r.z) * t.z + r.z * e.z);
      else {
        var i = +r,
          a = 1 - i;
        (n.x = a * t.x + i * e.x),
          (n.y = a * t.y + i * e.y),
          (n.z = a * t.z + i * e.z);
      }
      return n;
    }),
    (pd3D.Vector.fromArray = function (t, e) {
      return (
        ((e = e || new pd3D.Vector()).x = +t[0] || 0),
        (e.y = +t[1] || 0),
        (e.z = +t[2] || 0),
        e
      );
    }),
    (pd3D.Vector.normaliseArrayInPlace = function (t) {
      var e = Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
      return 0 < e && ((t[0] /= e), (t[1] /= e), (t[2] /= e)), t;
    }),
    (pd3D.Vector.UnitX = new pd3D.Vector(1, 0, 0)),
    (pd3D.Vector.UnitY = new pd3D.Vector(0, 1, 0)),
    (pd3D.Vector.UnitZ = new pd3D.Vector(0, 0, 1));
  var r = "undefined" != typeof Float32Array;
  (pd3D.Matrix = function () {
    var t = Array.prototype.concat.apply([], arguments);
    t.length || (t = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
      (this.m = r ? new Float32Array(t) : t);
  }),
    (pd3D.Matrix.prototype = {
      inverse: function (t) {
        return (t = t || new pd3D.Matrix()), pd3D.Matrix.inverse(this, t);
      },
      transpose: function (t) {
        return (t = t || new pd3D.Matrix()), pd3D.Matrix.transpose(this, t);
      },
      multiply: function (t, e) {
        return (e = e || new pd3D.Matrix()), pd3D.Matrix.multiply(this, t, e);
      },
      multiplyBy: function (t, e) {
        return (
          (e = e || new pd3D.Matrix()),
          pd3D.Matrix.multiply(this, t, e),
          this.init(e)
        );
      },
      init: function (t) {
        if (null != t)
          for (var e = this.m, r = t.m, n = 0; n < 16; ++n) e[n] = r[n];
        return this;
      },
      transformPoint: function (t, e) {
        var r = this.m,
          n = r[12] * t.x + r[13] * t.y + r[14] * t.z + r[15];
        -1e-12 < n && n < 1e-12 && (n = 1);
        var i = (r[0] * t.x + r[1] * t.y + r[2] * t.z + r[3]) / n,
          a = (r[4] * t.x + r[5] * t.y + r[6] * t.z + r[7]) / n,
          o = (r[8] * t.x + r[9] * t.y + r[10] * t.z + r[11]) / n;
        return e ? e.init(i, a, o) : new pd3D.Vector(i, a, o);
      },
      transformVector: function (t, e) {
        var r = this.m,
          n = r[0] * t.x + r[1] * t.y + r[2] * t.z,
          i = r[4] * t.x + r[5] * t.y + r[6] * t.z,
          a = r[8] * t.x + r[9] * t.y + r[10] * t.z;
        return e ? e.init(n, i, a) : new pd3D.Vector(n, i, a);
      },
      copyToColumnMajorArray: function (t) {
        var e = this.m;
        return (
          ((t = t || new Float32Array(16))[0] = e[0]),
          (t[4] = e[1]),
          (t[8] = e[2]),
          (t[12] = e[3]),
          (t[1] = e[4]),
          (t[5] = e[5]),
          (t[9] = e[6]),
          (t[13] = e[7]),
          (t[2] = e[8]),
          (t[6] = e[9]),
          (t[10] = e[10]),
          (t[14] = e[11]),
          (t[3] = e[12]),
          (t[7] = e[13]),
          (t[11] = e[14]),
          (t[15] = e[15]),
          t
        );
      },
      applyPointTransformToArray: function (t) {
        var e = this.m,
          r = e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3],
          n = e[4] * t[0] + e[5] * t[1] + e[6] * t[2] + e[7],
          i = e[8] * t[0] + e[9] * t[1] + e[10] * t[2] + e[11],
          a = e[12] * t[0] + e[13] * t[1] + e[14] * t[2] + e[15];
        return (
          0 < Math.abs(a)
            ? ((t[0] = r / a), (t[1] = n / a), (t[2] = i / a))
            : ((t[0] = r), (t[1] = n), (t[2] = i)),
          t
        );
      },
      applyVectorTransformToArray: function (t) {
        var e = this.m,
          r = e[0] * t[0] + e[1] * t[1] + e[2] * t[2],
          n = e[4] * t[0] + e[5] * t[1] + e[6] * t[2],
          i = e[8] * t[0] + e[9] * t[1] + e[10] * t[2];
        return (t[0] = r), (t[1] = n), (t[2] = i), t;
      },
    }),
    (pd3D.Matrix.fromArray = function (t, e) {
      if (!t || 16 != t.length)
        throw new TypeError(
          "Argument 'array' must be a valid Array containing 16 numeric values."
        );
      return ((e = e || new pd3D.Matrix()).m = r ? new Float32Array(t) : t), e;
    }),
    (pd3D.Matrix.clone = function (t, e) {
      if (((e = e || new pd3D.Matrix()), null != t))
        for (var r = e.m, n = t.m, i = 0; i < 16; ++i) r[i] = n[i];
      return e;
    }),
    (pd3D.Matrix.inverse = function (t, e) {
      e = e || new pd3D.Matrix();
      var r = t.m,
        n = e.m;
      (n[0] =
        r[5] * r[10] * r[15] -
        r[5] * r[14] * r[11] -
        r[6] * r[9] * r[15] +
        r[6] * r[13] * r[11] +
        r[7] * r[9] * r[14] -
        r[7] * r[13] * r[10]),
        (n[1] =
          -r[1] * r[10] * r[15] +
          r[1] * r[14] * r[11] +
          r[2] * r[9] * r[15] -
          r[2] * r[13] * r[11] -
          r[3] * r[9] * r[14] +
          r[3] * r[13] * r[10]),
        (n[2] =
          r[1] * r[6] * r[15] -
          r[1] * r[14] * r[7] -
          r[2] * r[5] * r[15] +
          r[2] * r[13] * r[7] +
          r[3] * r[5] * r[14] -
          r[3] * r[13] * r[6]),
        (n[3] =
          -r[1] * r[6] * r[11] +
          r[1] * r[10] * r[7] +
          r[2] * r[5] * r[11] -
          r[2] * r[9] * r[7] -
          r[3] * r[5] * r[10] +
          r[3] * r[9] * r[6]),
        (n[4] =
          -r[4] * r[10] * r[15] +
          r[4] * r[14] * r[11] +
          r[6] * r[8] * r[15] -
          r[6] * r[12] * r[11] -
          r[7] * r[8] * r[14] +
          r[7] * r[12] * r[10]),
        (n[5] =
          r[0] * r[10] * r[15] -
          r[0] * r[14] * r[11] -
          r[2] * r[8] * r[15] +
          r[2] * r[12] * r[11] +
          r[3] * r[8] * r[14] -
          r[3] * r[12] * r[10]),
        (n[6] =
          -r[0] * r[6] * r[15] +
          r[0] * r[14] * r[7] +
          r[2] * r[4] * r[15] -
          r[2] * r[12] * r[7] -
          r[3] * r[4] * r[14] +
          r[3] * r[12] * r[6]),
        (n[7] =
          r[0] * r[6] * r[11] -
          r[0] * r[10] * r[7] -
          r[2] * r[4] * r[11] +
          r[2] * r[8] * r[7] +
          r[3] * r[4] * r[10] -
          r[3] * r[8] * r[6]),
        (n[8] =
          r[4] * r[9] * r[15] -
          r[4] * r[13] * r[11] -
          r[5] * r[8] * r[15] +
          r[5] * r[12] * r[11] +
          r[7] * r[8] * r[13] -
          r[7] * r[12] * r[9]),
        (n[9] =
          -r[0] * r[9] * r[15] +
          r[0] * r[13] * r[11] +
          r[1] * r[8] * r[15] -
          r[1] * r[12] * r[11] -
          r[3] * r[8] * r[13] +
          r[3] * r[12] * r[9]),
        (n[10] =
          r[0] * r[5] * r[15] -
          r[0] * r[13] * r[7] -
          r[1] * r[4] * r[15] +
          r[1] * r[12] * r[7] +
          r[3] * r[4] * r[13] -
          r[3] * r[12] * r[5]),
        (n[11] =
          -r[0] * r[5] * r[11] +
          r[0] * r[9] * r[7] +
          r[1] * r[4] * r[11] -
          r[1] * r[8] * r[7] -
          r[3] * r[4] * r[9] +
          r[3] * r[8] * r[5]),
        (n[12] =
          -r[4] * r[9] * r[14] +
          r[4] * r[13] * r[10] +
          r[5] * r[8] * r[14] -
          r[5] * r[12] * r[10] -
          r[6] * r[8] * r[13] +
          r[6] * r[12] * r[9]),
        (n[13] =
          r[0] * r[9] * r[14] -
          r[0] * r[13] * r[10] -
          r[1] * r[8] * r[14] +
          r[1] * r[12] * r[10] +
          r[2] * r[8] * r[13] -
          r[2] * r[12] * r[9]),
        (n[14] =
          -r[0] * r[5] * r[14] +
          r[0] * r[13] * r[6] +
          r[1] * r[4] * r[14] -
          r[1] * r[12] * r[6] -
          r[2] * r[4] * r[13] +
          r[2] * r[12] * r[5]),
        (n[15] =
          r[0] * r[5] * r[10] -
          r[0] * r[9] * r[6] -
          r[1] * r[4] * r[10] +
          r[1] * r[8] * r[6] +
          r[2] * r[4] * r[9] -
          r[2] * r[8] * r[5]);
      for (
        var i = r[0] * n[0] + r[1] * n[4] + r[2] * n[8] + r[3] * n[12], a = 0;
        a < 16;
        ++a
      )
        n[a] /= i;
      return e;
    }),
    (pd3D.Matrix.transpose = function (t, e) {
      e = e || new pd3D.Matrix();
      var r = t.m,
        n = e.m;
      return (
        (n[0] = r[0]),
        (n[1] = r[4]),
        (n[2] = r[8]),
        (n[3] = r[12]),
        (n[4] = r[1]),
        (n[5] = r[5]),
        (n[6] = r[9]),
        (n[7] = r[13]),
        (n[8] = r[2]),
        (n[9] = r[6]),
        (n[10] = r[10]),
        (n[11] = r[14]),
        (n[12] = r[3]),
        (n[13] = r[7]),
        (n[14] = r[11]),
        (n[15] = r[15]),
        e
      );
    }),
    (pd3D.Matrix.multiply = function (t, e, r) {
      var n = t.m,
        i = e.m;
      if (t === r) {
        ((o = [])[0] = n[0] * i[0] + n[1] * i[4] + n[2] * i[8] + n[3] * i[12]),
          (o[1] = n[0] * i[1] + n[1] * i[5] + n[2] * i[9] + n[3] * i[13]),
          (o[2] = n[0] * i[2] + n[1] * i[6] + n[2] * i[10] + n[3] * i[14]),
          (o[3] = n[0] * i[3] + n[1] * i[7] + n[2] * i[11] + n[3] * i[15]),
          (o[4] = n[4] * i[0] + n[5] * i[4] + n[6] * i[8] + n[7] * i[12]),
          (o[5] = n[4] * i[1] + n[5] * i[5] + n[6] * i[9] + n[7] * i[13]),
          (o[6] = n[4] * i[2] + n[5] * i[6] + n[6] * i[10] + n[7] * i[14]),
          (o[7] = n[4] * i[3] + n[5] * i[7] + n[6] * i[11] + n[7] * i[15]),
          (o[8] = n[8] * i[0] + n[9] * i[4] + n[10] * i[8] + n[11] * i[12]),
          (o[9] = n[8] * i[1] + n[9] * i[5] + n[10] * i[9] + n[11] * i[13]),
          (o[10] = n[8] * i[2] + n[9] * i[6] + n[10] * i[10] + n[11] * i[14]),
          (o[11] = n[8] * i[3] + n[9] * i[7] + n[10] * i[11] + n[11] * i[15]),
          (o[12] = n[12] * i[0] + n[13] * i[4] + n[14] * i[8] + n[15] * i[12]),
          (o[13] = n[12] * i[1] + n[13] * i[5] + n[14] * i[9] + n[15] * i[13]),
          (o[14] = n[12] * i[2] + n[13] * i[6] + n[14] * i[10] + n[15] * i[14]),
          (o[15] = n[12] * i[3] + n[13] * i[7] + n[14] * i[11] + n[15] * i[15]);
        for (var a = 0; a < 16; ++a) n[a] = o[a];
      } else {
        var o;
        ((o = (r = r || new pd3D.Matrix()).m)[0] =
          n[0] * i[0] + n[1] * i[4] + n[2] * i[8] + n[3] * i[12]),
          (o[1] = n[0] * i[1] + n[1] * i[5] + n[2] * i[9] + n[3] * i[13]),
          (o[2] = n[0] * i[2] + n[1] * i[6] + n[2] * i[10] + n[3] * i[14]),
          (o[3] = n[0] * i[3] + n[1] * i[7] + n[2] * i[11] + n[3] * i[15]),
          (o[4] = n[4] * i[0] + n[5] * i[4] + n[6] * i[8] + n[7] * i[12]),
          (o[5] = n[4] * i[1] + n[5] * i[5] + n[6] * i[9] + n[7] * i[13]),
          (o[6] = n[4] * i[2] + n[5] * i[6] + n[6] * i[10] + n[7] * i[14]),
          (o[7] = n[4] * i[3] + n[5] * i[7] + n[6] * i[11] + n[7] * i[15]),
          (o[8] = n[8] * i[0] + n[9] * i[4] + n[10] * i[8] + n[11] * i[12]),
          (o[9] = n[8] * i[1] + n[9] * i[5] + n[10] * i[9] + n[11] * i[13]),
          (o[10] = n[8] * i[2] + n[9] * i[6] + n[10] * i[10] + n[11] * i[14]),
          (o[11] = n[8] * i[3] + n[9] * i[7] + n[10] * i[11] + n[11] * i[15]),
          (o[12] = n[12] * i[0] + n[13] * i[4] + n[14] * i[8] + n[15] * i[12]),
          (o[13] = n[12] * i[1] + n[13] * i[5] + n[14] * i[9] + n[15] * i[13]),
          (o[14] = n[12] * i[2] + n[13] * i[6] + n[14] * i[10] + n[15] * i[14]),
          (o[15] = n[12] * i[3] + n[13] * i[7] + n[14] * i[11] + n[15] * i[15]);
      }
      return r;
    }),
    (pd3D.Matrix.identity = function (t) {
      var e = (t = t || new pd3D.Matrix()).m;
      return (
        (e[0] = e[5] = e[10] = e[15] = 1),
        (e[1] =
          e[2] =
          e[3] =
          e[4] =
          e[6] =
          e[7] =
          e[8] =
          e[9] =
          e[11] =
          e[12] =
          e[13] =
          e[14] =
            0),
        t
      );
    }),
    (pd3D.Matrix.perspective = function (t, e, r, n, i) {
      var a = Math.tan((t * Math.PI) / 360) * r,
        o = a * e;
      return pd3D.Matrix.frustum(-o, o, -a, a, r, n, i);
    }),
    (pd3D.Matrix.frustum = function (t, e, r, n, i, a, o) {
      var s = (o = o || new pd3D.Matrix()).m;
      return (
        (s[0] = (2 * i) / (e - t)),
        (s[1] = 0),
        (s[2] = (e + t) / (e - t)),
        (s[3] = 0),
        (s[4] = 0),
        (s[5] = (2 * i) / (n - r)),
        (s[6] = (n + r) / (n - r)),
        (s[7] = 0),
        (s[8] = 0),
        (s[9] = 0),
        (s[10] = -(a + i) / (a - i)),
        (s[11] = (-2 * a * i) / (a - i)),
        (s[12] = 0),
        (s[13] = 0),
        (s[14] = -1),
        (s[15] = 0),
        o
      );
    }),
    (pd3D.Matrix.ortho = function (t, e, r, n, i, a, o) {
      var s = (o = o || new pd3D.Matrix()).m;
      return (
        (s[0] = 2 / (e - t)),
        (s[1] = 0),
        (s[2] = 0),
        (s[3] = -(e + t) / (e - t)),
        (s[4] = 0),
        (s[5] = 2 / (n - r)),
        (s[6] = 0),
        (s[7] = -(n + r) / (n - r)),
        (s[8] = 0),
        (s[9] = 0),
        (s[10] = -2 / (a - i)),
        (s[11] = -(a + i) / (a - i)),
        (s[12] = 0),
        (s[13] = 0),
        (s[14] = 0),
        (s[15] = 1),
        o
      );
    }),
    (pd3D.Matrix.scale = function (t, e, r, n) {
      var i = (n = n || new pd3D.Matrix()).m;
      return (
        (i[0] = +t || 0),
        (i[1] = 0),
        (i[2] = 0),
        (i[3] = 0),
        (i[4] = 0),
        (i[5] = +e || 0),
        (i[6] = 0),
        (i[7] = 0),
        (i[8] = 0),
        (i[9] = 0),
        (i[10] = +r || 0),
        (i[11] = 0),
        (i[12] = 0),
        (i[13] = 0),
        (i[14] = 0),
        (i[15] = 1),
        n
      );
    }),
    (pd3D.Matrix.translate = function (t, e, r, n) {
      var i = (n = n || new pd3D.Matrix()).m;
      return (
        (i[0] = 1),
        (i[1] = 0),
        (i[2] = 0),
        (i[3] = +t || 0),
        (i[4] = 0),
        (i[5] = 1),
        (i[6] = 0),
        (i[7] = +e || 0),
        (i[8] = 0),
        (i[9] = 0),
        (i[10] = 1),
        (i[11] = +r || 0),
        (i[12] = 0),
        (i[13] = 0),
        (i[14] = 0),
        (i[15] = 1),
        n
      );
    }),
    (pd3D.Matrix.rotate = function (t, e, r, n, i) {
      if (!t || (!e && !r && !n)) return pd3D.Matrix.identity(i);
      var a = (i = i || new pd3D.Matrix()).m,
        o = Math.sqrt(e * e + r * r + n * n);
      (t *= pd.Const.DEG2RAD), (e /= o), (r /= o), (n /= o);
      var s = Math.cos(t),
        d = Math.sin(t),
        l = 1 - s;
      return (
        (a[0] = e * e * l + s),
        (a[1] = e * r * l - n * d),
        (a[2] = e * n * l + r * d),
        (a[3] = 0),
        (a[4] = r * e * l + n * d),
        (a[5] = r * r * l + s),
        (a[6] = r * n * l - e * d),
        (a[7] = 0),
        (a[8] = n * e * l - r * d),
        (a[9] = n * r * l + e * d),
        (a[10] = n * n * l + s),
        (a[11] = 0),
        (a[12] = 0),
        (a[13] = 0),
        (a[14] = 0),
        (a[15] = 1),
        i
      );
    }),
    (pd3D.Matrix.skew = function (t, e, r) {
      r = r || new pd3D.Matrix();
      var n = Math.tan(e * pd.Const.DEG2RAD),
        i = r.m;
      switch (
        ((i[0] = 1),
        (i[1] = 0),
        (i[2] = 0),
        (i[3] = 0),
        (i[4] = 0),
        (i[5] = 1),
        (i[6] = 0),
        (i[7] = 0),
        (i[8] = 0),
        (i[9] = 0),
        (i[10] = 1),
        (i[11] = 0),
        (i[12] = 0),
        (i[13] = 0),
        (i[14] = 0),
        (i[15] = 1),
        t)
      ) {
        default:
        case 1:
          i[4] = n;
          break;
        case 2:
          i[8] = n;
          break;
        case 3:
          i[1] = n;
          break;
        case 4:
          i[9] = n;
          break;
        case 5:
          i[2] = n;
          break;
        case 6:
          i[6] = n;
      }
      return r;
    }),
    (pd3D.Matrix.lookAt = function (t, e, r, n, i, a, o, s, d, l) {
      var h = (l = l || new pd3D.Matrix()).m,
        u = new pd3D.Vector(t, e, r),
        c = new pd3D.Vector(n, i, a),
        p = new pd3D.Vector(o, s, d),
        f = u.subtract(c).unit(),
        m = p.cross(f).unit(),
        g = f.cross(m).unit();
      return (
        (h[0] = m.x),
        (h[1] = m.y),
        (h[2] = m.z),
        (h[3] = -m.dot(u)),
        (h[4] = g.x),
        (h[5] = g.y),
        (h[6] = g.z),
        (h[7] = -g.dot(u)),
        (h[8] = f.x),
        (h[9] = f.y),
        (h[10] = f.z),
        (h[11] = -f.dot(u)),
        (h[12] = 0),
        (h[13] = 0),
        (h[14] = 0),
        (h[15] = 1),
        l
      );
    }),
    (pd3D.MatrixAccumulator = function () {
      (this.tempMatrix1 = new pd3D.Matrix()),
        (this.tempMatrix2 = new pd3D.Matrix()),
        (this.resultMatrix = new pd3D.Matrix());
    }),
    (pd3D.MatrixAccumulator.prototype.toMatrix = function () {
      return this.resultMatrix;
    }),
    (pd3D.MatrixAccumulator.prototype.reset = function () {
      return pd3D.Matrix.identity(this.resultMatrix), this;
    }),
    (pd3D.MatrixAccumulator.prototype.scale = function (t, e, r) {
      return (
        1 == arguments.length ? (e = r = t) : 2 == arguments.length && (r = 1),
        pd3D.Matrix.scale(t, e, r, this.tempMatrix1),
        pd3D.Matrix.multiply(
          this.resultMatrix,
          this.tempMatrix1,
          this.tempMatrix2
        ),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.translate = function (t, e, r) {
      return (
        pd3D.Matrix.translate(t, e, r, this.tempMatrix1),
        pd3D.Matrix.multiply(
          this.resultMatrix,
          this.tempMatrix1,
          this.tempMatrix2
        ),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.rotate = function (t, e, r, n) {
      return (
        pd3D.Matrix.rotate(t, e, r, n, this.tempMatrix1),
        pd3D.Matrix.multiply(
          this.resultMatrix,
          this.tempMatrix1,
          this.tempMatrix2
        ),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.inverse = function () {
      return (
        pd3D.Matrix.inverse(this.resultMatrix, this.tempMatrix2),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.transpose = function () {
      return (
        pd3D.Matrix.transpose(this.resultMatrix, this.tempMatrix2),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.multiply = function (t) {
      return (
        pd3D.Matrix.multiply(this.resultMatrix, t, this.tempMatrix2),
        this.resultMatrix.init(this.tempMatrix2),
        this
      );
    }),
    (pd3D.MatrixAccumulator.prototype.init = function (t) {
      return this.resultMatrix.init(t), this;
    }),
    (pd3D.MatrixAccumulator.prototype.transformPoint = function (t, e) {
      return this.resultMatrix.transformPoint(t, e);
    }),
    (pd3D.MatrixAccumulator.prototype.transformVector = function (t, e) {
      return this.resultMatrix.transformVector(t, e);
    }),
    (pd3D.PolarMatrix = function () {
      pd3D.Matrix.call(this),
        (this.angleX = 0),
        (this.angleZ = 0),
        (this.isIdentity = !0),
        (this._matrixX = new pd3D.Matrix()),
        (this._matrixZ = new pd3D.Matrix()),
        (this._matrixX.hasChanged = !1),
        (this._matrixZ.hasChanged = !1),
        (this._matrixX.isIdentity = !0),
        (this._matrixZ.isIdentity = !0);
    }),
    (pd3D.PolarMatrix.prototype = Object.create(pd3D.Matrix.prototype)),
    (pd3D.PolarMatrix.prototype.constructor = pd3D.PolarMatrix),
    (pd3D.PolarMatrix.prototype._update = function () {
      var t = this.angleX,
        e = this._matrixX;
      e.hasChanged &&
        (Math.abs(t) > pd.Const.EPSILON
          ? (pd3D.Matrix.rotate(t, 1, 0, 0, e), (e.isIdentity = !1))
          : ((e.isIdentity = !0), pd3D.Matrix.identity(e)));
      var r = this.angleZ,
        n = this._matrixZ;
      return (
        n.hasChanged &&
          (Math.abs(r) > pd.Const.EPSILON
            ? (pd3D.Matrix.rotate(r, 0, 0, 1, n), (n.isIdentity = !1))
            : ((n.isIdentity = !0), pd3D.Matrix.identity(n))),
        (e.hasChanged || n.hasChanged) &&
          (n.isIdentity
            ? e.isIdentity
              ? ((this.isIdentity = !0), pd3D.Matrix.identity(this))
              : (pd3D.Matrix.clone(n, this), (this.isIdentity = !1))
            : (e.isIdentity
                ? pd3D.Matrix.clone(n, this)
                : pd3D.Matrix.multiply(n, e, this),
              (this.isIdentity = !1)),
          (e.hasChanged = !1),
          (n.hasChanged = !1)),
        this
      );
    }),
    (pd3D.PolarMatrix.prototype.setXZ = function (t, e) {
      var r = this._matrixX;
      pd.closeTo(this.angleX, t) || ((r.hasChanged = !0), (this.angleX = t));
      var n = this._matrixZ;
      return (
        pd.closeTo(this.angleZ, e) || ((n.hasChanged = !0), (this.angleZ = e)),
        (r.hasChanged || n.hasChanged) && this._update(),
        this
      );
    }),
    (pd3D.PolarMatrix.prototype.setAziAlt = function (t, e) {
      return this.setXZ(90 - e, 90 + t);
    }),
    (pd3D.PolarMatrix.prototype.setDirection = function (t) {
      var e,
        r = this.angleZ - 90,
        n = 90 - this.angleX;
      return (
        pd.isArray(t)
          ? 1e-12 < (e = pd3D.VectorArray.length(t)) &&
            ((r =
              t[0] * t[0] < 1e-12
                ? 0
                : Math.atan2(t[1], t[0]) * pd.Const.RAD2DEG),
            (n = Math.asin(t[2] / e) * pd.Const.RAD2DEG))
          : (e = t.length()) < 1e-9
          ? (r = n = 0)
          : ((r =
              t.x * t.x < 1e-12 ? 0 : Math.atan2(t.y, t.x) * pd.Const.RAD2DEG),
            (n = Math.asin(t.z / e) * pd.Const.RAD2DEG)),
        this.setXZ(90 - n, 90 + r)
      );
    }),
    (pd3D.PolarMatrix.prototype.multiplyBy = function (t, e) {
      return (
        (e = e || new pd3D.Matrix()),
        this.isIdentity ||
          (t
            ? (e = pd3D.Matrix.multiply(t, this, e))
            : pd3D.Matrix.clone(this, e)),
        e
      );
    }),
    (pd3D.Transform = function () {
      (this.isIdentity = !0),
        (this.hasChanged = !1),
        (this._cachedMatrix = new pd3D.Matrix()),
        Object.defineProperty(this, "m", {
          get: function () {
            return (
              this.hasChanged && this.checkForChanges(), this._cachedMatrix.m
            );
          },
        }),
        (this.getMatrix = function () {
          return this.hasChanged && this.checkForChanges(), this._cachedMatrix;
        }),
        (this._xformData = [0, 0, 0, 0, 0, 0, 1, 1, 1]),
        (this._cachedData = [0, 0, 0, 0, 0, 0, 1, 1, 1]),
        (this._cachedTranslation = new pd3D.Matrix()),
        (this._cachedRotation = new pd3D.Matrix()),
        (this._cachedScale = new pd3D.Matrix()),
        (this._vectorRotation = !1),
        (this._cachedTranslation.isIdentity = !0),
        (this._cachedRotation.isIdentity = !0),
        (this._cachedScale.isIdentity = !0);
    }),
    (pd3D.Transform.prototype = Object.create(pd3D.Matrix.prototype)),
    (pd3D.Transform.prototype.constructor = pd3D.Transform),
    (pd3D.Transform.prototype.reset = function () {
      var t = this._xformData;
      return (
        (t[0] = t[1] = t[2] = 0),
        (t[3] = t[4] = t[5] = 0),
        (t[6] = t[7] = t[8] = 1),
        (this._cachedTranslation.isIdentity = !0),
        (this._cachedRotation.isIdentity = !0),
        (this._cachedScale.isIdentity = !0),
        (this.hasChanged = !0),
        this
      );
    }),
    (pd3D.Transform.prototype.setTranslation = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or an [tx,ty,tz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      return (
        (Math.abs(t - i[0]) > n ||
          Math.abs(e - i[1]) > n ||
          Math.abs(r - i[2]) > n) &&
          (this.hasChanged = !0),
        (i[0] = t),
        (i[1] = e),
        (i[2] = r),
        this
      );
    }),
    (pd3D.Transform.prototype.addTranslation = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or a [tx,ty,tz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      return (
        (Math.abs(t) > n || Math.abs(e) > n || Math.abs(r) > n) &&
          (this.hasChanged = !0),
        (i[0] += t),
        (i[1] += e),
        (i[2] += r),
        this
      );
    }),
    (pd3D.Transform.prototype.setVectorRotation = function (t, e, r, n) {
      var i = pd.Const.EPSILON,
        a = this._xformData;
      if (((t = pd.toNumber(t, 0)), 2 == arguments.length)) {
        var o = e;
        if (!pd.isArray(o))
          throw new TypeError(
            "Parameters must be either three numeric values or a [rx,ry,rz] vector array."
          );
        (e = +o[0] || 0), (r = +o[1] || 0), (n = +o[2] || 0);
      }
      this._vectorAngles || (this._vectorAngles = []),
        (this._vectorAngles[0] = t);
      var s =
        (this._vectorAngles[1] = e) * e +
        (this._vectorAngles[2] = r) * r +
        (this._vectorAngles[3] = n) * n;
      if (
        (0 < s && ((e *= s = 1 / Math.sqrt(s)), (r *= s), (n *= s)),
        (e *= t),
        (r *= t),
        (n *= t),
        !this._vectorRotation)
      ) {
        var d = this._cachedData;
        (this.hasChanged = !0), (d[3] = e - 1), (d[4] = r - 1), (d[5] = n - 1);
      }
      return (
        (Math.abs(e - a[3]) > i ||
          Math.abs(r - a[4]) > i ||
          Math.abs(n - a[5]) > i) &&
          (this.hasChanged = !0),
        (a[3] = e),
        (a[4] = r),
        (a[5] = n),
        (this._vectorRotation = !0),
        this
      );
    }),
    (pd3D.Transform.prototype.setAxialRotation = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or a [rx,ry,rz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      if (this._vectorRotation) {
        var o = this._cachedData;
        (this.hasChanged = !0), (o[3] = t - 1), (o[4] = e - 1), (o[5] = r - 1);
      }
      return (
        (Math.abs(t - i[3]) > n ||
          Math.abs(e - i[4]) > n ||
          Math.abs(r - i[5]) > n) &&
          (this.hasChanged = !0),
        (i[3] = t),
        (i[4] = e),
        (i[5] = r),
        (this._vectorRotation = !1),
        this
      );
    }),
    (pd3D.Transform.prototype.addRotation = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (this._vectorRotation)
        throw new Error(
          "Cannot acumulate vector rotations, use `setAxialRotation()` to reset to axial mode."
        );
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or a [rx,ry,rz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      return (
        (Math.abs(t) > n || Math.abs(e) > n || Math.abs(r) > n) &&
          (this.hasChanged = !0),
        (i[3] += t),
        (i[4] += e),
        (i[5] += r),
        this
      );
    }),
    (pd3D.Transform.prototype.setScale = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or a [sx,sy,sz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      return (
        (Math.abs(t - i[6]) > n ||
          Math.abs(e - i[7]) > n ||
          Math.abs(r - i[8]) > n) &&
          (this.hasChanged = !0),
        (i[6] = t),
        (i[7] = e),
        (i[8] = r),
        this
      );
    }),
    (pd3D.Transform.prototype.addScale = function (t, e, r) {
      var n = pd.Const.EPSILON,
        i = this._xformData;
      if (1 == arguments.length) {
        var a = t;
        if (!pd.isArray(a))
          throw new TypeError(
            "Parameters must be either three numeric values or a [sx,sy,sz] vector array."
          );
        (t = +a[0] || 0), (e = +a[1] || 0), (r = +a[2] || 0);
      }
      return (
        (Math.abs(t - 1) > n || Math.abs(e - 1) > n || Math.abs(r - 1) > n) &&
          (this.hasChanged = !0),
        (i[6] *= t),
        (i[7] *= e),
        (i[8] *= r),
        this
      );
    }),
    (pd3D.Transform.prototype.checkForChanges = function () {
      var t,
        e = !1,
        r = this._xformData,
        n = this._cachedData,
        i = pd.Const.EPSILON;
      if (
        ((Math.abs(n[0] - r[0]) > i ||
          Math.abs(n[1] - r[1]) > i ||
          Math.abs(n[2] - r[2]) > i) &&
          ((t = this._cachedTranslation),
          Math.abs(r[0]) > i || Math.abs(r[1]) > i || Math.abs(r[2]) > i
            ? (pd3D.Matrix.translate(r[0], r[1], r[2], t), (t.isIdentity = !1))
            : (pd3D.Matrix.identity(t), (t.isIdentity = !0)),
          (n[0] = r[0]),
          (n[1] = r[1]),
          (n[2] = r[2]),
          (e = !0)),
        Math.abs(n[3] - r[3]) > i ||
          Math.abs(n[4] - r[4]) > i ||
          Math.abs(n[5] - r[5]) > i)
      ) {
        var a = !0;
        if (((t = this._cachedRotation), this._vectorRotation)) {
          var o = this._vectorAngles;
          o && Math.abs(o[0]) > i
            ? (pd3D.Matrix.rotate(o[0], o[1], o[2], o[3], t), (a = !1))
            : (pd3D.Matrix.identity(t), (a = !0));
        } else
          Math.abs(r[5]) > i &&
            (pd3D.Matrix.rotate(r[5], 0, 0, 1, t), (a = !1)),
            Math.abs(r[3]) > i &&
              (a
                ? pd3D.Matrix.rotate(r[3], 1, 0, 0, t)
                : pd3D.Matrix.multiply(t, pd3D.Matrix.rotate(r[3], 1, 0, 0), t),
              (a = !1)),
            Math.abs(r[4]) > i &&
              (a
                ? pd3D.Matrix.rotate(r[4], 0, 1, 0, t)
                : pd3D.Matrix.multiply(t, pd3D.Matrix.rotate(r[5], 0, 1, 0), t),
              (a = !1));
        (t.isIdentity = a),
          (n[3] = r[3]),
          (n[4] = r[4]),
          (n[5] = r[5]),
          (e = !0);
      }
      return (
        (Math.abs(n[6] - r[6]) > i ||
          Math.abs(n[7] - r[7]) > i ||
          Math.abs(n[8] - r[8]) > i) &&
          ((t = this._cachedScale),
          Math.abs(r[0] - 1) > i ||
          Math.abs(r[1] - 1) > i ||
          Math.abs(r[2] - 1) > i
            ? (pd3D.Matrix.scale(r[6], r[7], r[8], t), (t.isIdentity = !1))
            : (pd3D.Matrix.identity(t), (t.isIdentity = !0)),
          (n[6] = r[6]),
          (n[7] = r[7]),
          (n[8] = r[8]),
          (e = !0)),
        e &&
          ((this.isIdentity = !0),
          (t = this._cachedTranslation).isIdentity ||
            (pd3D.Matrix.clone(t, this._cachedMatrix), (this.isIdentity = !1)),
          (t = this._cachedRotation).isIdentity ||
            (this.isIdentity
              ? pd3D.Matrix.clone(t, this._cachedMatrix)
              : pd3D.Matrix.multiply(this._cachedMatrix, t, this._cachedMatrix),
            (this.isIdentity = !1)),
          (t = this._cachedScale).isIdentity ||
            (this.isIdentity
              ? pd3D.Matrix.clone(t, this._cachedMatrix)
              : pd3D.Matrix.multiply(this._cachedMatrix, t, this._cachedMatrix),
            (this.isIdentity = !1)),
          this.isIdentity && pd3D.Matrix.identity(this._cachedMatrix)),
        (this.hasChanged = !1),
        this
      );
    }),
    (pd3D.Transform.prototype.multiplyBy = function (t, e) {
      return (
        (e = e || new pd3D.Matrix()),
        this.isIdentity ||
          (t
            ? (e = pd3D.Matrix.multiply(t, this, e))
            : pd3D.Matrix.clone(this, e)),
        e
      );
    }),
    (pd3D.Transform.prototype.copyTo = function (t) {
      return (t = t || new pd3D.Matrix()), pd3D.Matrix.clone(this, t), t;
    }),
    (pd3D.Material = function (t) {
      (t = t || {}),
        (this.id = pd3D.getUniqueID()),
        (this.name =
          t.name || "Material_" + pd.toStringWithLeadingZeros(this.id, 5));
    }),
    (pd3D.Node = function (t, e) {
      (this.id = pd3D.getUniqueID()),
        (this.nodeType = e || "Node"),
        (this.name =
          t || this.nodeType + "_" + pd.toStringWithLeadingZeros(this.id, 5)),
        (this.transformMatrix = null),
        (this.inverseMatrix = null),
        (this.visible = !0),
        (this.active = !0),
        (this.geometry = {}),
        (this.children = []),
        (this.hasChanged = !1),
        (this.callbackOnDraw = null);
    }),
    (pd3D.Node.prototype.hide = function () {
      return (this.visible = !1), this;
    }),
    (pd3D.Node.prototype.show = function (t) {
      return (t = !1 !== t), (this.visible = t), this;
    }),
    (pd3D.Node.prototype.getTransform = function () {
      return this.transformMatrix;
    }),
    (pd3D.Node.prototype.setTransform = function (t) {
      return (
        (this.transformMatrix = t),
        this.transformMatrix
          ? (this.inverseMatrix = pd3D.Matrix.inverse(
              this.transformMatrix,
              this.inverseMatrix
            ))
          : (this.inverseMatrix = null),
        this
      );
    }),
    (pd3D.Node.prototype.addChild = function (t) {
      if (!t)
        throw new TypeError("ERROR: Undefined object not added as child node.");
      if (!(t instanceof pd3D.Node)) {
        if (!(t.draw || (t.drawSurfaces && t.drawOutlines)))
          throw new TypeError(
            "ERROR: Unsupported object not added as child node."
          );
        t.id || (t.id = pd3D.getUniqueID()),
          t.name || (t.name = "Object_" + pd.toStringWithLeadingZeros(t.id, 5));
      }
      return this.children.push(t), (this.hasChanged = !0), this;
    }),
    (pd3D.Node.prototype.getChildByIndex = function (t) {
      return 0 <= t && t < this.children.length ? this.children[t] : null;
    }),
    (pd3D.Node.prototype.findChildrenById = function (t, e) {
      var r = e || [];
      if (pd.isNumeric(t)) {
        var n;
        this.id == t && r.push(this);
        for (var i = 0, a = this.children.length; i < a; ++i)
          null != (n = this.children[i]) &&
            (n.id == t
              ? r.push(n)
              : n.findChildrenById && n.findChildrenById(t, r));
      }
      return r;
    }),
    (pd3D.Node.prototype.findChildrenByName = function (t, e) {
      var r = e || [];
      if (t && t.length) {
        var n;
        this.name == t && r.push(this);
        for (var i = 0, a = this.children.length; i < a; ++i)
          null != (n = this.children[i]) &&
            (n.name == t
              ? r.push(n)
              : n.findChildrenByName && n.findChildrenByName(t, r));
      }
      return r;
    }),
    (pd3D.Node.prototype.removeChildByIndex = function (t) {
      return (
        0 <= t &&
          t < this.children.length &&
          (this.children.splice(t, 1), (this.hasChanged = !0)),
        this
      );
    }),
    (pd3D.Node.prototype.removeChild = function (t, e) {
      if (t) {
        var r = this.children.indexOf(t);
        if (-1 < r)
          return this.children.splice(r, 1), (this.hasChanged = !0), this;
        if (e)
          for (var n = 0, i = this.children.length; n < i; ++n)
            this.children[n] &&
              this.children[n].removeChild &&
              this.children[n].removeChild(t);
      }
      return this;
    }),
    (pd3D.Node.prototype.clearChildren = function () {
      for (var t, e = 0, r = this.children.length; e < r; ++e)
        (t = this.children[e]) && t.clear && t.clear();
      return (this.children.length = 0), (this.hasChanged = !0), this;
    }),
    (pd3D.Node.prototype.addMesh = function (t, e) {
      if (!(t && t instanceof pd3D.Mesh))
        throw new TypeError(
          "ERROR: Only valid pd3D.Mesh objects can be added as pd3D.Node geometry."
        );
      if (!(e && e instanceof pd3D.Material))
        throw new TypeError(
          "ERROR: Only valid pd3D.Material objects can be assigned to pd3D.Node geometry."
        );
      var r = e.id.toString();
      return (
        this.geometry[r] || (this.geometry[r] = { material: e, meshes: [] }),
        this.geometry[r].meshes.push(t),
        (this.hasChanged = !0),
        this
      );
    }),
    (pd3D.Node.prototype.addMeshes = function (t, e) {
      if (!t || !pd.isArray(t))
        throw new TypeError(
          "ERROR: Only valid arrays of pd3D.Mesh objects can be added as pd3D.Node geometry."
        );
      if (!(e && e instanceof pd3D.Material))
        throw new TypeError(
          "ERROR: Only valid pd3D.Material objects can be assigned to pd3D.Node geometry."
        );
      var r = e.id.toString();
      this.geometry[r] || (this.geometry[r] = { material: e, meshes: [] });
      for (var n = 0, i = t.length; n < i; ++n) {
        var a = t[n];
        a &&
          a instanceof pd3D.Mesh &&
          (this.geometry[r].meshes.push(a), (this.hasChanged = !0));
      }
      return this;
    }),
    (pd3D.Node.prototype.findMeshById = function (t) {
      for (var e in this.geometry)
        if (this.geometry.hasOwnProperty(e))
          for (var r = this.geometry[e].meshes, n = 0, i = r.length; n < i; ++n)
            if (r[n].id == t) return r[n];
      var a,
        o = null;
      for (n = 0, i = this.children.length; n < i; ++n)
        if (
          (a = this.children[n]) &&
          a.findMeshById &&
          null != (o = a.findMeshById(t))
        )
          return o;
      return null;
    }),
    (pd3D.Node.prototype.getMeshList = function () {
      var t = [];
      for (var e in this.geometry)
        if (this.geometry.hasOwnProperty(e))
          for (var r = this.geometry[e].meshes, n = 0, i = r.length; n < i; ++n)
            t.push(r[n]);
      return t;
    }),
    (pd3D.Node.prototype.getMeshesByMaterial = function (t) {
      if (!t || !t.id)
        throw new TypeError(
          "ERROR: Only valid pd3D.Material objects can be used to obtain meshes."
        );
      var e = t.id.toString();
      return this.geometry[e] ? this.geometry[e].meshes : [];
    }),
    (pd3D.Node.prototype.swapMaterials = function (t, e) {
      if (!(t && t.id && e && e.id))
        throw new TypeError(
          "ERROR: Both arguments must be valid pd3D.Material objects."
        );
      if (t.id != e.id) {
        var r = t.id.toString(),
          n = e.id.toString();
        if (this.geometry[r]) {
          var i = this.geometry[r].meshes;
          this.geometry[n]
            ? Array.prototype.push.apply(this.geometry[n].meshes, i)
            : (this.geometry[n] = { material: e, meshes: i }),
            delete this.geometry[r];
        }
        for (var a = 0, o = this.children.length; a < o; ++a)
          this.children[a].swapMaterials &&
            this.children[a].swapMaterials(t, e);
      }
      return this;
    }),
    (pd3D.Node.prototype.clearGeometry = function () {
      for (var t in this.geometry)
        if (this.geometry.hasOwnProperty(t))
          for (var e = this.geometry[t].meshes, r = 0, n = e.length; r < n; ++r)
            e[r].clear();
      return (this.geometry = {}), (this.hasChanged = !0), this;
    }),
    (pd3D.Node.prototype.reverseNormals = function () {
      for (var t in this.geometry)
        if (this.geometry.hasOwnProperty(t))
          for (var e = this.geometry[t].meshes, r = 0, n = e.length; r < n; ++r)
            e[r].reverseNormals();
      var i;
      for (r = 0, n = this.children.length; r < n; ++r)
        (i = this.children[r]) && i.reverseNormals && i.reverseNormals();
      return this;
    }),
    (pd3D.Node.prototype.reverseTriangles = function () {
      for (var t in this.geometry)
        if (this.geometry.hasOwnProperty(t))
          for (var e = this.geometry[t].meshes, r = 0, n = e.length; r < n; ++r)
            e[r].reverseTriangles();
      var i;
      for (r = 0, n = this.children.length; r < n; ++r)
        (i = this.children[r]) && i.reverseTriangles && i.reverseTriangles();
      return this;
    }),
    (pd3D.Node.prototype.swapYZ = function () {
      for (var t in this.geometry)
        if (this.geometry.hasOwnProperty(t))
          for (var e = this.geometry[t].meshes, r = 0, n = e.length; r < n; ++r)
            e[r].swapYZ();
      var i;
      for (r = 0, n = this.children.length; r < n; ++r)
        (i = this.children[r]) && i.swapYZ && i.swapYZ();
      return this;
    }),
    (pd3D.Node.prototype.mirrorY = function () {
      for (var t in this.geometry)
        if (this.geometry.hasOwnProperty(t))
          for (var e = this.geometry[t].meshes, r = 0, n = e.length; r < n; ++r)
            e[r].mirrorY();
      var i;
      for (r = 0, n = this.children.length; r < n; ++r)
        (i = this.children[r]) && i.mirrorY && i.mirrorY();
      return this;
    }),
    (pd3D.Node.prototype.translate = function (t, e, r) {
      for (var n in this.geometry)
        if (this.geometry.hasOwnProperty(n))
          for (var i = this.geometry[n].meshes, a = 0, o = i.length; a < o; ++a)
            i[a].translate(t, e, r);
      var s;
      for (a = 0, o = this.children.length; a < o; ++a)
        (s = this.children[a]) && s.translate && s.translate(t, e, r);
      return this;
    }),
    (pd3D.Node.prototype.applyMatrix = function (t, e) {
      if (t) {
        var r;
        e = e || t.inverse().transpose();
        for (var n in this.geometry)
          if (this.geometry.hasOwnProperty(n))
            for (
              var i = this.geometry[n].meshes, a = 0, o = i.length;
              a < o;
              ++a
            )
              i[a].transform(t, e);
        for (a = 0, o = this.children.length; a < o; ++a)
          (r = this.children[a]) && r.applyMatrix && r.applyMatrix(t, e);
      }
      return this;
    }),
    (pd3D.Node.prototype.getAABB = function (t, e) {
      for (var r in ((t && t.min) ||
        ((t = {
          min: new pd3D.Vector(
            Number.MAX_VALUE,
            Number.MAX_VALUE,
            Number.MAX_VALUE
          ),
        }).max = t.min.negative()),
      this.geometry))
        if (this.geometry.hasOwnProperty(r))
          for (var n = this.geometry[r].meshes, i = 0, a = n.length; i < a; ++i)
            e && n[i].computeBoundingBox(), n[i].getAABB(t);
      var o;
      for (i = 0, a = this.children.length; i < a; ++i)
        (o = this.children[i]) && o.getAABB && o.getAABB(t, e);
      return t;
    }),
    (pd3D.Node.prototype.compileGeometry = function () {
      var t = [];
      for (var e in this.geometry)
        if (this.geometry.hasOwnProperty(e)) {
          for (
            var r, n = this.geometry[e].meshes, i = 0, a = n.length;
            i < a;
            ++i
          )
            (r = n[i]) && r.hasContent() && r.compile();
          this.geometry[e].meshes.length < 1 && t.push(e);
        }
      if (0 < t.length)
        for (i = 0, a = t.length; i < a; ++i) delete this.geometry[t[i]];
      return this;
    }),
    (pd3D.Node.prototype.compile = function () {
      for (var t, e = 0, r = this.children.length; e < r; ++e)
        (t = this.children[e]) && t.compile && t.compile();
      return this.compileGeometry();
    }),
    (pd3D.Node.prototype.intersectRay = function (t, e, r) {
      if (((r = r || null), this.visible)) {
        for (var n in this.geometry)
          if (this.geometry.hasOwnProperty(n))
            for (
              var i = this.geometry[n].meshes, a = 0, o = i.length;
              a < o;
              ++a
            )
              r = pd3D.RayTrace.intersectMesh(t, e, i[a], r);
        var s;
        for (a = 0, o = this.children.length; a < o; ++a)
          (s = this.children[a]) &&
            s.intersectRay &&
            (r = s.intersectRay(t, e, r));
      }
      return r;
    }),
    (pd3D.Node.prototype.obstructedRay = function (t, e) {
      if (this.visible) {
        for (var r in this.geometry)
          if (this.geometry.hasOwnProperty(r))
            for (
              var n = this.geometry[r].meshes, i = 0, a = n.length;
              i < a;
              ++i
            )
              if (pd3D.RayTrace.getFirstHitOnMesh(t, e, n[i])) return !0;
        var o;
        for (i = 0, a = this.children.length; i < a; ++i)
          if (
            (o = this.children[i]) &&
            o.obstructedRay &&
            o.obstructedRay(t, e)
          )
            return !0;
      }
      return !1;
    }),
    (pd3D.Node.prototype.clear = function () {
      return (
        this.clearChildren(),
        this.clearGeometry(),
        (this.transformMatrix = null),
        delete this.transformMatrix,
        (this.inverseMatrix = null),
        delete this.inverseMatrix,
        (this.hasChanged = !0),
        this
      );
    }),
    (pd3D.Node.prototype.beginMeshOverflow = function (t) {
      if (t) {
        t.reuseStart();
        for (var e = 0, r = t._data.overflowMesh; null != r && e++ < 25; )
          r.reuseStart(), (r.visible = !1), (r = r._data.overflowMesh);
      }
      return this;
    }),
    (pd3D.Node.prototype.checkMeshOverflow = function (t) {
      if (t && 65e3 < t.vertexCount()) {
        if (t._data.overflowMesh) t._data.overflowMesh.reuseStart();
        else
          for (var e in ((t._data.overflowMesh = new pd3D.Mesh(t)),
          this.geometry))
            if (this.geometry.hasOwnProperty(e))
              for (
                var r = this.geometry[e].meshes, n = 0, i = r.length;
                n < i;
                ++n
              )
                if (r[n].id == t.id) {
                  r.push(t._data.overflowMesh);
                  break;
                }
        (t = t._data.overflowMesh).visible = !0;
      }
      return t;
    }),
    (pd3D.Node.prototype.endMeshOverflow = function (t) {
      for (var e = t, r = 0; null != e && r++ < 26; ) {
        var n = 0 < e.vertexCount() || 0 < e.vertices.length;
        e.reuseEnd(),
          n && e.compile(),
          (e.visible = e.hasContent()),
          (e = e._data.overflowMesh);
      }
      return this;
    }),
    (pd3D.RayTrace = function (t, e, r, n) {
      (this.t = 0 < arguments.length ? t : Number.MAX_VALUE),
        (this.mesh = n || null),
        (this.normal = r),
        (this.hit = e);
    }),
    (pd3D.RayTrace.prototype.mergeWith = function (t) {
      0 < t.t &&
        t.t < this.t &&
        ((this.t = t.t),
        t.mesh ? (this.mesh = t.mesh) : this.mesh && (this.mesh = null),
        (this.normal = t.normal),
        (this.hit = t.hit));
    }),
    (pd3D.RayTrace.insideBox = function (t, e, r) {
      return (
        t.x >= e.x &&
        t.x <= r.x &&
        t.y >= e.y &&
        t.y <= r.y &&
        t.z >= e.z &&
        t.z <= r.z
      );
    }),
    (pd3D.RayTrace.intersectBox = function (t, e, r, n) {
      var i = r.subtract(t).divide(e),
        a = n.subtract(t).divide(e),
        o = pd3D.Vector.min(i, a),
        s = pd3D.Vector.max(i, a),
        d = o.max(),
        l = s.min();
      if (0 < d && d < l) {
        var h = t.add(e.multiply(d));
        return (
          (r = r.add(1e-6)),
          (n = n.subtract(1e-6)),
          new pd3D.RayTrace(
            d,
            h,
            new pd3D.Vector(
              (h.x > n.x) - (h.x < r.x),
              (h.y > n.y) - (h.y < r.y),
              (h.z > n.z) - (h.z < r.z)
            )
          )
        );
      }
      return null;
    }),
    (pd3D.RayTrace.intersectSphere = function (t, e, r, n) {
      var i = t.subtract(r),
        a = e.dot(e),
        o = 2 * e.dot(i),
        s = o * o - 4 * a * (i.dot(i) - n * n);
      if (0 < s) {
        var d = (-o - Math.sqrt(s)) / (2 * a),
          l = t.add(e.multiply(d));
        return new pd3D.RayTrace(d, l, l.subtract(r).divide(n));
      }
      return null;
    }),
    (pd3D.RayTrace.intersectTriangle = function (t, e, r, n, i) {
      var a = n.subtract(r),
        o = i.subtract(r),
        s = a.cross(o).unit(),
        d = s.dot(r.subtract(t)) / s.dot(e);
      if (0 < d) {
        var l = t.add(e.multiply(d)),
          h = l.subtract(r),
          u = o.dot(o),
          c = o.dot(a),
          p = o.dot(h),
          f = a.dot(a),
          m = a.dot(h),
          g = u * f - c * c,
          v = (f * p - c * m) / g,
          y = (u * m - c * p) / g;
        if (0 <= v && 0 <= y && v + y <= 1) return new pd3D.RayTrace(d, l, s);
      }
      return null;
    }),
    (pd3D.RayTrace.intersectMesh = function (t, e, r, n) {
      var i = null;
      if (
        ((n = n || null),
        !r.boundingBox ||
          pd3D.RayTrace.insideBox(t, r.boundingBox.min, r.boundingBox.max) ||
          pd3D.RayTrace.intersectBox(
            t,
            e,
            r.boundingBox.min,
            r.boundingBox.max
          ))
      )
        for (
          var a,
            o = r.vertices,
            s = r.triangles.length,
            d = r.triangles,
            l = new pd3D.Vector(),
            h = new pd3D.Vector(),
            u = new pd3D.Vector(),
            c = 0;
          c < s;
          ++c
        )
          (a = d[c]),
            pd3D.Vector.fromArray(o[a[0]], l),
            pd3D.Vector.fromArray(o[a[1]], h),
            pd3D.Vector.fromArray(o[a[2]], u),
            null != (i = pd3D.RayTrace.intersectTriangle(t, e, l, h, u)) &&
              (n
                ? ((i.mesh = r), n.mergeWith(i))
                : (n = new pd3D.RayTrace(i.t, i.hit, i.normal, r)));
      return n;
    }),
    (pd3D.RayTrace.getFirstHitOnMesh = function (t, e, r) {
      if (
        !r.boundingBox ||
        pd3D.RayTrace.insideBox(t, r.boundingBox.min, r.boundingBox.max) ||
        pd3D.RayTrace.intersectBox(t, e, r.boundingBox.min, r.boundingBox.max)
      )
        for (
          var n,
            i,
            a = r.vertices,
            o = r.triangles.length,
            s = r.triangles,
            d = new pd3D.Vector(),
            l = new pd3D.Vector(),
            h = new pd3D.Vector(),
            u = 0;
          u < o;
          ++u
        )
          if (
            ((i = s[u]),
            pd3D.Vector.fromArray(a[i[0]], d),
            pd3D.Vector.fromArray(a[i[1]], l),
            pd3D.Vector.fromArray(a[i[2]], h),
            null != (n = pd3D.RayTrace.intersectTriangle(t, e, d, l, h)))
          )
            return new pd3D.RayTrace(n.t, n.hit, n.normal, r);
      return null;
    });
})(),
  (pd3D.Shapes = pd3D.Shapes || {}),
  (function () {
    var L = 0.5 * Math.PI,
      F = 2 * Math.PI;
    function G(t) {
      var e = t[0],
        r = t[1],
        n = +t[2] || 0,
        i = e * e + r * r + n * n;
      0 < i &&
        ((i = 1 / Math.sqrt(i)),
        (t[0] = e * i),
        (t[1] = r * i),
        (t[2] = n * i));
    }
    pd3D.Shapes.plane = function (t, e) {
      var r = !1,
        n = (t = t || {}).detailX || t.detail || 1,
        i = t.detailY || t.detail || 1,
        a = {};
      e || ((e = new pd3D.Mesh(t)), (r = !0));
      for (var o = 0; o <= i; ++o)
        for (var s = o / i, d = 0; d <= n; ++d) {
          var l = d / n;
          if (
            ((a.pos = [2 * l - 1, 2 * s - 1, 0]),
            e.coords && (a.coord = [l, s]),
            e.addVertexObject(a),
            d < n && o < i)
          ) {
            var h = d + o * (n + 1);
            e.addTriangle(h, h + 1, h + n + 1),
              e.addTriangle(h + n + 1, h + 1, h + n + 2);
          }
        }
      return r && e.compile(), e;
    };
    var v = [
      [0, 4, 2, 6, -1, 0, 0],
      [1, 3, 5, 7, 1, 0, 0],
      [0, 1, 4, 5, 0, -1, 0],
      [2, 6, 3, 7, 0, 1, 0],
      [0, 2, 1, 3, 0, 0, -1],
      [4, 5, 6, 7, 0, 0, 1],
    ];
    function b(t) {
      return new pd3D.Vector(2 * (1 & t) - 1, (2 & t) - 1, (4 & t) / 2 - 1);
    }
    (pd3D.Shapes.cube = function (t, e) {
      t = t || {};
      var r = !1,
        n = [1, 1, 1],
        i = {};
      pd.isArray(t.size)
        ? ((n[0] = 0.5 * pd.toNumber(t.size[0], 1)),
          (n[1] = 0.5 * pd.toNumber(t.size[1], 1)),
          (n[2] = 0.5 * pd.toNumber(t.size[2], 1)))
        : ((n[0] = 0.5 * pd.toNumber(t.size, 1)), (n[1] = n[2] = n[0])),
        e || ((e = new pd3D.Mesh(t)), (r = !0));
      for (var a = e.vertexCount(), o = 0; o < v.length; ++o) {
        for (
          var s = a + 4 * o, d = Math.floor(0.5 * o), l = v[o], h = 0;
          h < 4;
          ++h
        ) {
          var u = l[h];
          (i.pos = b(u).scale(n[d]).toArray()),
            e.coords && (i.coord = [1 & h, (2 & h) / 2]),
            e.normals && (i.normal = l.slice(4, 7)),
            e.addVertexObject(i);
        }
        if (e.triangles)
          if (t.invert) {
            if (
              (e.addTriangle(s + 2, s + 1, s),
              e.addTriangle(s + 3, s + 1, s + 2),
              e.normals)
            )
              for (var c = 0; c < 4; ++c) {
                var p = e.normals[s + c];
                (p[0] = -p[0]), (p[1] = -p[1]), (p[2] = -p[2]);
              }
          } else
            e.addTriangle(s, s + 1, s + 2), e.addTriangle(s + 2, s + 1, s + 3);
      }
      if (
        (e.lines &&
          (e.addLine(a + 0, a + 1),
          e.addLine(a + 1, a + 3),
          e.addLine(a + 3, a + 2),
          e.addLine(a + 2, a + 0),
          e.addLine(a + 4, a + 5),
          e.addLine(a + 5, a + 7),
          e.addLine(a + 7, a + 6),
          e.addLine(a + 6, a + 4),
          e.addLine(a + 0, a + 4),
          e.addLine(a + 1, a + 6),
          e.addLine(a + 3, a + 7),
          e.addLine(a + 2, a + 5)),
        pd.isArray(t.center) && e.vertices)
      ) {
        var f = t.center;
        (f[0] = pd.toNumber(f[0], 0)),
          (f[1] = pd.toNumber(f[1], 0)),
          (f[2] = pd.toNumber(f[2], 0));
        o = a;
        for (var m = e.vertexCount(); o < m; ++o) {
          var g = e.vertices[o];
          (g[0] += f[0]), (g[1] += f[1]), (g[2] += f[2]);
        }
      }
      return r && e.compile(), e;
    }),
      (pd3D.Shapes.rectangle = function (t, n) {
        var e,
          r,
          i,
          a,
          o,
          s,
          d,
          l = !1,
          h = (t = t || {}).transform || null,
          u = pd.toNumber(t.scale, 1),
          c = 0.5 * pd.toNumber(t.width, 250),
          p = 0.5 * pd.toNumber(t.height, 100),
          f = pd.toNumber(t.borderWidth, 0) * u,
          m = pd.toBoolean(t.background, !0),
          g = pd.toBoolean(t.border, !1),
          v = [0, 0, 0, 0],
          y = [0, 0, 0],
          b = -1,
          D = { edge1: -1, edge2: -1 },
          M = t.min || [0, 0, 0],
          x = t.max || [M[0] + c, M[1] + p, M[2]],
          T = F / Math.max(4, 4 * pd.toNumber(t.segments, 6)),
          w = { pos: [] };
        if (
          ((c = 0.5 * (x[0] - M[0])), (p = 0.5 * (x[1] - M[1])), t.cornerRadius)
        ) {
          if (pd.isArray(t.cornerRadius)) {
            var A = t.cornerRadius;
            (v[0] = pd.toNumber(A[0] || 0) * u),
              (v[1] = pd.toNumber(A[1] || 0) * u),
              (v[2] = pd.toNumber(A[2] || 0) * u),
              (v[3] = pd.toNumber(A[3] || 0) * u);
          } else
            (r = pd.toNumber(t.cornerRadius, 0) * u),
              (v[0] = r),
              (v[1] = r),
              (v[2] = r),
              (v[3] = r);
          var O = Math.min(c, p);
          (v[0] = pd.sign(v[0]) * Math.min(O, Math.abs(v[0]))),
            (v[1] = pd.sign(v[0]) * Math.min(O, Math.abs(v[1]))),
            (v[2] = pd.sign(v[0]) * Math.min(O, Math.abs(v[2]))),
            (v[3] = pd.sign(v[0]) * Math.min(O, Math.abs(v[3])));
        }
        if (
          (t.center && pd.isArray(t.center)
            ? ((y[0] = pd.toNumber(t.center[0], 0)),
              (y[1] = pd.toNumber(t.center[1], 0)),
              (y[2] = pd.toNumber(t.center[2], 0)),
              (M[0] = y[0] - c),
              (x[0] = y[0] + c),
              (M[1] = y[1] - c),
              (x[1] = y[1] + c),
              (M[2] = x[2] = +y[2] || 0))
            : ((M[2] = +M[2] || 0),
              (x[2] = +x[2] || 0),
              (y[0] = 0.5 * (M[0] + x[0])),
              (y[1] = 0.5 * (M[1] + x[1])),
              (y[2] = 0.5 * (M[2] + x[2]))),
          n || ((n = new pd3D.Mesh(t)), (l = !0)),
          (m = m && n.triangles),
          (g = g && n.lines),
          n.normals)
        ) {
          var V = [0, 0, 1];
          h && h.applyVectorTransformToArray(V), n.normal(V);
        }
        if (m || (g && !(f < 0.001))) {
          if (
            (m
              ? pd.isArray(t.backgroundColor) && n.color(t.backgroundColor)
              : g && pd.isArray(t.borderColor) && n.color(t.borderColor),
            t.notch)
          ) {
            if (
              ((D.length = pd.toNumber(t.notchLength, 15)),
              (D.width = 0.5 * pd.toNumber(t.notchWidth, Math.abs(D.length))),
              (D.position = pd.toNumber(t.notchPosition, 0.5)),
              (D.edge = pd.toInteger(t.notchEdge, -1)),
              (D.type = pd.toInteger(t.notchType, 0)),
              (D.vertices = []),
              (D.length *= u),
              (D.width *= u),
              pd.isArray(t.notchTarget))
            )
              (D.x = +t.notchTarget[0] || 0), (D.y = +t.notchTarget[1] || 0);
            else if (0 <= D.edge)
              switch (D.edge) {
                case pd.Align.BOTTOM:
                  (D.x = pd.mapTo(D.position, 0, 1, M[0], x[0])),
                    (D.y = M[1] - D.length);
                  break;
                case pd.Align.RIGHT:
                  (D.x = x[0] + D.length),
                    (D.y = pd.mapTo(D.position, 0, 1, M[1], x[1]));
                  break;
                case pd.Align.TOP:
                  (D.x = pd.mapTo(D.position, 0, 1, M[0], x[0])),
                    (D.y = x[1] + D.length);
                  break;
                case pd.Align.LEFT:
                  (D.x = M[0] - D.length),
                    (D.y = pd.mapTo(D.position, 0, 1, M[1], x[1]));
                  break;
                default:
                  (D.x = y[0]), (D.y = y[1]);
              }
            (D.x < M[0] || D.x > x[0] || D.y < M[1] || D.y > x[1]) &&
              (D.type
                ? D.x < y[0]
                  ? D.y < y[1]
                    ? ((i =
                        D.x +
                        pd.safeDivide(M[1] - D.y, y[1] - D.y) * (y[0] - D.x)),
                      (a =
                        D.y +
                        pd.safeDivide(M[0] - D.x, y[0] - D.x) * (y[1] - D.y)) +
                        D.width >=
                      M[1]
                        ? ((D.edge1 = 3),
                          (D.vertices[0] = [M[0], Math.max(a + D.width, M[1])]),
                          D.vertices[0][1] < M[1] + Math.abs(v[0]) &&
                            (v[0] = 0))
                        : ((D.edge1 = 0),
                          (D.vertices[0] = [Math.max(i - D.width, M[0]), M[1]]),
                          D.vertices[0][0] < M[0] + Math.abs(v[0]) &&
                            (v[0] = 0)),
                      (D.vertices[1] = [D.x, D.y]),
                      i + D.width >= M[0]
                        ? ((D.edge2 = 0),
                          (D.vertices[2] = [Math.max(i + D.width, M[0]), M[1]]),
                          D.vertices[2][0] < M[0] + Math.abs(v[0]) &&
                            (v[0] = 0))
                        : ((D.edge2 = 3),
                          (D.vertices[2] = [M[0], Math.max(a - D.width, M[1])]),
                          D.vertices[2][1] < M[1] + Math.abs(v[0]) &&
                            (v[0] = 0)))
                    : ((i =
                        D.x -
                        pd.safeDivide(D.y - x[1], y[1] - D.y) * (y[0] - D.x)),
                      (a =
                        D.y +
                        pd.safeDivide(M[0] - D.x, y[0] - D.x) * (y[1] - D.y)),
                      i + D.width >= M[0]
                        ? ((D.edge1 = 2),
                          (D.vertices[0] = [Math.max(i + D.width, M[0]), x[1]]),
                          D.vertices[0][0] < M[0] + Math.abs(v[3]) &&
                            (v[3] = 0))
                        : ((D.edge1 = 3),
                          (D.vertices[0] = [M[0], Math.min(a + D.width, x[1])]),
                          D.vertices[0][1] > x[1] - Math.abs(v[3]) &&
                            (v[3] = 0)),
                      (D.vertices[1] = [D.x, D.y]),
                      a - D.width <= x[1]
                        ? ((D.edge2 = 3),
                          (D.vertices[2] = [M[0], Math.min(a - D.width, x[1])]),
                          D.vertices[2][1] > x[1] - Math.abs(v[3]) &&
                            (v[3] = 0))
                        : ((D.edge2 = 2),
                          (D.vertices[2] = [Math.max(i - D.width, M[0]), x[1]]),
                          D.vertices[2][0] < M[0] + Math.abs(v[3]) &&
                            (v[3] = 0)))
                  : D.y < y[1]
                  ? ((i =
                      D.x +
                      pd.safeDivide(M[1] - D.y, y[1] - D.y) * (y[0] - D.x)),
                    (a =
                      D.y +
                      pd.safeDivide(x[0] - D.x, y[0] - D.x) * (y[1] - D.y)),
                    i - D.width <= x[0]
                      ? ((D.edge1 = 0),
                        (D.vertices[0] = [Math.min(i - D.width, x[0]), M[1]]),
                        D.vertices[0][0] > x[0] - Math.abs(v[1]) && (v[1] = 0))
                      : ((D.edge1 = 1),
                        (D.vertices[0] = [x[0], Math.max(a - D.width, M[1])]),
                        D.vertices[0][1] < M[1] + Math.abs(v[1]) && (v[1] = 0)),
                    (D.vertices[1] = [D.x, D.y]),
                    a + D.width > M[1]
                      ? ((D.edge2 = 1),
                        (D.vertices[2] = [x[0], Math.max(a + D.width, M[1])]),
                        D.vertices[2][1] < M[1] + Math.abs(v[1]) && (v[1] = 0))
                      : ((D.edge2 = 0),
                        (D.vertices[2] = [Math.min(i + D.width, x[0]), M[1]]),
                        D.vertices[2][0] > x[0] - Math.abs(v[1]) && (v[1] = 0)))
                  : ((i =
                      D.x +
                      pd.safeDivide(x[1] - D.y, y[1] - D.y) * (y[0] - D.x)),
                    (a =
                      D.y +
                      pd.safeDivide(x[0] - D.x, y[0] - D.x) * (y[1] - D.y)),
                    i + D.width <= x[0]
                      ? ((D.edge1 = 2),
                        (D.vertices[0] = [Math.min(i + D.width, x[0]), x[1]]),
                        D.vertices[0][0] > x[0] - Math.abs(v[2]) && (v[2] = 0))
                      : ((D.edge1 = 1),
                        (D.vertices[0] = [x[0], Math.min(a - D.width, x[1])]),
                        D.vertices[0][1] > x[1] - Math.abs(v[2]) && (v[2] = 0)),
                    (D.vertices[1] = [D.x, D.y]),
                    a + D.width <= x[1]
                      ? ((D.edge2 = 1),
                        (D.vertices[2] = [x[0], Math.min(a + D.width, x[1])]),
                        D.vertices[2][1] > x[1] - Math.abs(v[2]) && (v[2] = 0))
                      : ((D.edge2 = 2),
                        (D.vertices[2] = [Math.min(i - D.width, x[0]), x[1]]),
                        D.vertices[2][0] > x[0] - Math.abs(v[2]) && (v[2] = 0)))
                : D.x < y[0]
                ? D.y < y[1]
                  ? (D.x >= M[0]
                      ? ((D.edge1 = D.edge2 = 0),
                        (D.vertices[0] = [
                          pd.constrainTo(D.x - D.width, M[0], x[0]),
                          M[1],
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          pd.constrainTo(
                            D.x + D.width,
                            M[0] + 2 * D.width,
                            x[0]
                          ),
                          M[1],
                        ]))
                      : D.y >= M[1]
                      ? ((D.edge1 = D.edge2 = 3),
                        (D.vertices[0] = [
                          M[0],
                          pd.constrainTo(
                            D.y + D.width,
                            M[1] + 2 * D.width,
                            x[1]
                          ),
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          M[0],
                          pd.constrainTo(D.y - D.width, M[1], x[1]),
                        ]))
                      : ((D.edge1 = 3),
                        (D.edge2 = 0),
                        (i = M[0] - D.x),
                        (a = M[1] - D.y),
                        (o = Math.sqrt(i * i + a * a)),
                        (i = pd.safeDivide(i, o)),
                        (a = pd.safeDivide(a, o)),
                        (D.vertices[0] = [
                          M[0],
                          pd.constrainTo(M[1] + 2 * i * D.width, M[1], x[1]),
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          pd.constrainTo(M[0] + a * D.width, M[0], x[0]),
                          M[1],
                        ])),
                    (e = Math.abs(v[0])),
                    ((D.vertices[0][0] < M[0] + e &&
                      D.vertices[0][1] < M[1] + e) ||
                      (D.vertices[2][0] < M[0] + e &&
                        D.vertices[2][1] < M[1] + e)) &&
                      (v[0] = 0))
                  : (D.x >= M[0]
                      ? ((D.edge1 = D.edge2 = 2),
                        (D.vertices[0] = [
                          pd.constrainTo(
                            D.x + D.width,
                            M[0] + 2 * D.width,
                            x[0]
                          ),
                          x[1],
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          pd.constrainTo(D.x - D.width, M[0], x[0]),
                          x[1],
                        ]))
                      : D.y <= x[1]
                      ? ((D.edge1 = D.edge2 = 3),
                        (D.vertices[0] = [
                          M[0],
                          pd.constrainTo(D.y + D.width, M[1], x[1]),
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          M[0],
                          pd.constrainTo(
                            D.y - D.width,
                            M[1],
                            x[1] - 2 * D.width
                          ),
                        ]))
                      : ((D.edge1 = 2),
                        (D.edge2 = 3),
                        (i = M[0] - D.x),
                        (a = D.y - x[1]),
                        (o = Math.sqrt(i * i + a * a)),
                        (i = pd.safeDivide(i, o)),
                        (a = pd.safeDivide(a, o)),
                        (D.vertices[0] = [
                          pd.constrainTo(M[0] + 2 * a * D.width, M[0], x[0]),
                          x[1],
                        ]),
                        (D.vertices[1] = [D.x, D.y]),
                        (D.vertices[2] = [
                          M[0],
                          pd.constrainTo(x[1] - 2 * i * D.width, M[1], x[1]),
                        ])),
                    (e = Math.abs(v[3])),
                    ((D.vertices[0][0] < M[0] + e &&
                      D.vertices[0][1] > x[1] - e) ||
                      (D.vertices[2][0] < M[0] + e &&
                        D.vertices[2][1] > x[1] - e)) &&
                      (v[3] = 0))
                : D.y < y[1]
                ? (D.x <= x[0]
                    ? ((D.edge1 = D.edge2 = 0),
                      (D.vertices[0] = [
                        pd.constrainTo(D.x - D.width, M[0], x[0] - 2 * D.width),
                        M[1],
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        pd.constrainTo(D.x + D.width, M[0], x[0]),
                        M[1],
                      ]))
                    : D.y >= M[1]
                    ? ((D.edge1 = D.edge2 = 1),
                      (D.vertices[0] = [
                        x[0],
                        pd.constrainTo(D.y - D.width, M[1], x[1]),
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        x[0],
                        pd.constrainTo(D.y + D.width, M[1] + 2 * D.width, x[1]),
                      ]))
                    : ((D.edge1 = 0),
                      (D.edge2 = 1),
                      (i = D.x - x[0]),
                      (a = M[1] - D.y),
                      (o = Math.sqrt(i * i + a * a)),
                      (i = pd.safeDivide(i, o)),
                      (a = pd.safeDivide(a, o)),
                      (D.vertices[0] = [
                        pd.constrainTo(x[0] - 2 * a * D.width, M[0], x[0]),
                        M[1],
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        x[0],
                        pd.constrainTo(M[1] + 2 * i * D.width, M[1], x[1]),
                      ])),
                  (e = Math.abs(v[1])),
                  ((D.vertices[0][0] > x[0] - e &&
                    D.vertices[0][1] < M[1] + e) ||
                    (D.vertices[2][0] > x[0] - e &&
                      D.vertices[2][1] < M[1] + e)) &&
                    (v[1] = 0))
                : (D.x <= x[0]
                    ? ((D.edge1 = D.edge2 = 2),
                      (D.vertices[0] = [
                        pd.constrainTo(D.x + D.width, M[0], x[0]),
                        x[1],
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        pd.constrainTo(D.x - D.width, M[0], x[0] - 2 * D.width),
                        x[1],
                      ]))
                    : D.y <= x[1]
                    ? ((D.edge1 = D.edge2 = 1),
                      (D.vertices[0] = [
                        x[0],
                        pd.constrainTo(D.y - D.width, M[1], x[1] - 2 * D.width),
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        x[0],
                        pd.constrainTo(D.y + D.width, M[1], x[1]),
                      ]))
                    : ((D.edge1 = 1),
                      (D.edge2 = 2),
                      (i = D.x - x[0]),
                      (a = D.y - x[1]),
                      (o = Math.sqrt(i * i + a * a)),
                      (i = pd.safeDivide(i, o)),
                      (a = pd.safeDivide(a, o)),
                      (D.vertices[0] = [
                        x[0],
                        pd.constrainTo(x[1] - 2 * i * D.width, M[1], x[1]),
                      ]),
                      (D.vertices[1] = [D.x, D.y]),
                      (D.vertices[2] = [
                        pd.constrainTo(x[0] - 2 * a * D.width, M[0], x[0]),
                        x[1],
                      ])),
                  (e = Math.abs(v[2])),
                  ((D.vertices[0][0] > x[0] - e &&
                    D.vertices[0][1] > x[1] - e) ||
                    (D.vertices[2][0] > x[0] - e &&
                      D.vertices[2][1] > x[1] - e)) &&
                    (v[2] = 0)));
          }
          if (
            ((s = E(y[0], y[1])),
            3 == D.edge1 && 0 == D.edge2
              ? P(D)
              : ((r = v[0]),
                0.4999 < (e = Math.abs(r))
                  ? (E(M[0], M[1] + e),
                    0 < r && _([M[0] + e, M[1] + e], -Math.PI, -L, e),
                    E(M[0] + e, M[1]))
                  : E(M[0], M[1])),
            0 == D.edge1 && 0 == D.edge2 && P(D),
            0 == D.edge1 && 1 == D.edge2
              ? P(D)
              : ((r = v[1]),
                0.4999 < (e = Math.abs(r))
                  ? (E(x[0] - e, M[1]),
                    0 < r && _([x[0] - r, M[1] + e], -L, 0, r),
                    E(x[0], M[1] + e))
                  : E(x[0], M[1])),
            1 == D.edge1 && 1 == D.edge2 && P(D),
            1 == D.edge1 && 2 == D.edge2
              ? P(D)
              : ((r = v[2]),
                0.4999 < (e = Math.abs(r))
                  ? (E(x[0], x[1] - e),
                    0 < r && _([x[0] - e, x[1] - e], 0, L, e),
                    E(x[0] - e, x[1]))
                  : E(x[0], x[1])),
            2 == D.edge1 && 2 == D.edge2 && P(D),
            2 == D.edge1 && 3 == D.edge2
              ? P(D)
              : ((r = v[3]),
                0.4999 < (e = Math.abs(r))
                  ? (E(M[0] + e, x[1]),
                    0 < r && _([M[0] + e, x[1] - e], L, Math.PI, e),
                    E(M[0], x[1] - e))
                  : E(M[0], x[1])),
            3 == D.edge1 && 3 == D.edge2 && P(D),
            (d = n.vertexCount()),
            g && 0.001 < f)
          )
            if (n.hasVertexColors && pd.isArray(t.borderColor)) {
              var C,
                S = pd.toNumber(t.borderZOffset, 0) * u;
              n.color(t.borderColor);
              for (var k = s + 1; k < d; ++k)
                (C = n.getVertex(k)),
                  (w.pos = [C[0], C[1], C[2] + S]),
                  n.coords && (w.coord = n.coords[k]),
                  n.addVertexObject(w);
              if (1 < f) {
                var N = [],
                  I = n.vertexCount();
                for (k = d; k < I; ++k) N.push(n.getVertex(k));
                pd3D.Shapes.thickLine(
                  {
                    vertices: N,
                    side: pd.toInteger(t.borderAlign, pd.Align.INSIDE),
                    shaft: f,
                    closed: !0,
                  },
                  n
                );
              } else {
                I = n.vertexCount();
                n.addLine(d, I - 1);
                for (k = d + 1; k < I; ++k) n.addLine(k - 1, k);
              }
            } else {
              n.addLine(s + 1, d - 1);
              for (k = s + 2; k < d; ++k) n.addLine(k - 1, k);
            }
          if (m) {
            n.addTriangle(s, d - 1, s + 1);
            for (k = s + 2; k < d; ++k)
              k == b
                ? (n.addTriangle(b - 1, b, b + 1),
                  n.addTriangle(s, k - 1, k + 1),
                  k++)
                : n.addTriangle(s, k - 1, k);
          }
          return l && n.compile(), (t = null), n;
        }
        function E(t, e) {
          var r;
          return (
            (w.pos = [t, e, y[2]]),
            h && h.applyPointTransformToArray(w.pos),
            n.coords &&
              (w.coord = [((r = w.pos)[0] - M[0]) / c, (r[1] - M[2]) / p]),
            n.addVertexObject(w)
          );
        }
        function _(t, e, r, n) {
          r -= 0.5 * T;
          for (var i = e + T; i < r; i += T)
            E(t[0] + n * Math.cos(i), t[1] + n * Math.sin(i));
        }
        function P(t) {
          E(t.vertices[0][0], t.vertices[0][1]),
            (b = E(t.vertices[1][0], t.vertices[1][1])),
            E(t.vertices[2][0], t.vertices[2][1]);
        }
        l && n.compile();
      }),
      (pd3D.Shapes.circle = function (t, e) {
        t = t || {};
        var r,
          n,
          i,
          a = !1,
          o = pd.toNumber(t.radius, 1),
          s = pd.toNumber(t.radiusInner, -1),
          d = pd.isArray(t.center) ? t.center : [0, 0, 0],
          l = F / pd.toNumber(t.segments, 24),
          h = pd.toBoolean(t.background, !0),
          u = pd.toBoolean(t.border, !0),
          c = pd.toNumber(t.fromAngle, 0) * pd.Const.DEG2RAD,
          p = pd.toNumber(t.toAngle, 360) * pd.Const.DEG2RAD,
          f = e.vertexCount(),
          m = { pos: [] },
          g = null;
        if (
          (e || ((e = new pd3D.Mesh(t)), (a = !0)),
          t.transform instanceof pd3D.Matrix && (g = t.transform),
          e.normals)
        ) {
          var v = [0, 0, 1];
          g && g.applyVectorTransformToArray(v), e.normal(v);
        }
        if (((h = h && e.triangles), (u = u && e.lines), 0 < o))
          if (0 < s)
            for (var y, b, D, M, x = c; x < p; x += l)
              (r = Math.sin(x)),
                (n = Math.cos(x)),
                (m.pos = [d[0] + s * r, d[1] + s * n, d[2]]),
                e.coords && (m.coord = [r, n]),
                (y = e.addVertexObject(m)),
                (m.pos = [d[0] + o * r, d[1] + o * n, d[2]]),
                (D = e.addVertexObject(m)),
                c < x &&
                  (h && (e.addTriangle(D, M, b), e.addTriangle(y, D, b)),
                  u && (e.addLine(b, y), e.addLine(M, D))),
                (b = y),
                (M = D);
          else {
            (m.pos = [d[0], d[1], d[2]]), e.coords && (m.coord = [0, 0]);
            var T = e.addVertexObject(m);
            (m.pos = [d[0] + o * Math.sin(c), d[1] + o * Math.cos(c), d[2]]),
              e.coords && (m.coord = [0, 1]),
              e.addVertexObject(m),
              (i = T + 2);
            for (x = c + l; x < p; x += l)
              (r = Math.sin(x)),
                (n = Math.cos(x)),
                (m.pos = [d[0] + o * r, d[1] + o * n, d[2]]),
                e.coords && (m.coord = [r, n]),
                e.addVertexObject(m),
                h && (e.addTriangle(T, i - 1, i), e.addTriangle(T, i, i - 1)),
                u && e.addLine(i - 1, i),
                i++;
          }
        return g && e.transform(g, null, f), a && e.compile(), e;
      }),
      (pd3D.Shapes.sphere = function (t, e) {
        var n = !1;
        function r(t, e, r) {
          return n ? [t, r, e] : [t, e, r];
        }
        function i(t) {
          return t + (t - t * t) / 2;
        }
        var a = (t = t || {}).detail || 6,
          o = new pd.Indexer();
        e ? e.clear() : (e = new pd3D.Mesh(t));
        for (var s = 0; s < 8; ++s) {
          var d = [],
            l = b(s);
          n = 0 < l.x * l.y * l.z;
          for (var h = 0; h <= a; ++h) {
            for (var u = 0; h + u <= a; ++u) {
              var c = h / a,
                p = u / a,
                f = (a - h - u) / a,
                m = new pd3D.Vector(i(c), i(p), i(f)).unit().multiply(l),
                g = { vertex: m.toArray() };
              if (e.coords) {
                var v = m.toAngles();
                g.coord = [(v.theta + Math.PI) / F, (v.phi + L) / Math.PI];
              }
              d.push(o.addObject(g));
            }
            if (0 < h)
              for (u = 0; h + u <= a; ++u) {
                (c = (h - 1) * (a + 1) + (h - 1 - (h - 1) * (h - 1)) / 2 + u),
                  (p = h * (a + 1) + (h - h * h) / 2 + u);
                e.triangles.push(r(d[c], d[c + 1], d[p])),
                  h + u < a && e.triangles.push(r(d[p], d[c + 1], d[p + 1]));
              }
          }
        }
        if (
          ((e.vertices = o.unique.map(function (t) {
            return t.vertex;
          })),
          e.coords &&
            (e.coords = o.unique.map(function (t) {
              return t.coord;
            })),
          e.normals &&
            (e.normals = e.vertices.map(function (t) {
              return [t[0], t[1], t[2]];
            })),
          t.radius || t.center)
        ) {
          var y = t.center || [0, 0, 0];
          l =
            t.scale || (t.radius ? [t.radius, t.radius, t.radius] : [1, 1, 1]);
          e.vertices = e.vertices.map(function (t) {
            return [y[0] + t[0] * l[0], y[1] + t[1] * l[1], y[2] + t[2] * l[2]];
          });
        }
        return e.compile(), e;
      }),
      (pd3D.Shapes.sphereLatLng = function (t, e) {
        t = t || {};
        var r,
          n,
          i,
          a,
          o,
          s,
          d,
          l,
          h = pd.Const.DEG2RAD,
          u = t.latIncrement
            ? pd.constrainTo(t.latIncrement, 1, 45) * h
            : t.increment
            ? pd.constrainTo(t.increment, 1, 45) * h
            : 5 * h,
          c = t.lngIncrement
            ? pd.constrainTo(t.lngIncrement, 1, 45) * h
            : t.increment
            ? pd.constrainTo(t.increment, 1, 45) * h
            : 5 * h,
          p =
            t.scale || (t.radius ? [t.radius, t.radius, t.radius] : [1, 1, 1]),
          f = t.center || [0, 0, 0],
          m = Math.ceil(Math.PI / u),
          g = Math.ceil(F / c),
          v = 0;
        e ? e.clear() : (e = new pd3D.Mesh(t)), (n = L + u);
        for (var y = 0; y <= m; ++y) {
          (n -= u),
            (a = Math.cos(n)),
            (o = Math.sin(n)),
            (v = e.vertices.length - (g + 1)),
            (r = e.vertices.length),
            (i = -L - c);
          for (var b = 0; b <= g; ++b)
            (i += c),
              (s = a * Math.sin(i)),
              (d = a * Math.cos(i)),
              (l = o),
              e.vertices.push([
                f[0] + s * p[0],
                f[1] + d * p[1],
                f[2] + l * p[2],
              ]),
              e.normals && e.normals.push([s, d, l]),
              e.coords && e.coords.push([1 - b / g, 1 - y / m]),
              0 < y &&
                0 < b &&
                (e.triangles.push([r, r - 1, v - 1]),
                e.triangles.push([v, r, v - 1])),
              v++,
              r++;
        }
        if (e.lines) {
          var D = t.graticule ? pd.constrainTo(t.graticule, 1, 10) : 2,
            M = t.poleGraticule ? pd.constrainTo(t.poleGraticule, 1, 10) : 3;
          for (y = D; y < m; y += D) {
            r = y * (g + 1);
            for (b = 0; b <= g; ++b) e.lines.push([r - 1, r++]);
          }
          for (b = 0; b < g; b += D) {
            b % M == 0 && ((r = g + 1 + b), e.lines.push([r - (g + 1), r]));
            for (y = 2; y < m; ++y)
              (r = y * (g + 1) + b), e.lines.push([r - (g + 1), r]);
            b % M == 0 &&
              ((r = m * (g + 1) + b), e.lines.push([r - (g + 1), r]));
          }
        }
        return e.compile(), e;
      }),
      (pd3D.Shapes.thickLine = function (t, e) {
        var r = t.vertices;
        if (r && 1 < r.length) {
          t = t || {};
          var n = !1;
          e || ((e = new pd3D.Mesh(t)), (n = !0));
          var i,
            a,
            o,
            s,
            d,
            l,
            h,
            u,
            c,
            p,
            f,
            m,
            g,
            v,
            y,
            b,
            D = r.length,
            M = pd.toInteger(t.side, 0),
            x = pd.toNumber(t.scale, 1),
            T = pd.toInteger(t.joints, 0),
            w = pd.toInteger(t.endcap, 0),
            A = pd.toNumber(t.width, 0),
            O = t.normal || [0, 0, 1],
            V = e.triangles && pd.toBoolean(t.triangles, !0),
            C = e.lines && pd.toBoolean(t.lines, !1),
            S = pd.toBoolean(t.closed, !1),
            k = e.vertexCount(),
            N = [],
            I = [],
            E = [],
            _ = [],
            P = [],
            L = [],
            R = [],
            F = [],
            z = [];
          if (t.style) {
            var B = t.style;
            (M = pd.toInteger(B.lineSide, M)),
              (A = pd.toNumber(B.lineWidth, A)),
              (T = pd.toInteger(B.lineJoint, T)),
              (w = pd.toInteger(B.lineCap, w)),
              (V = e.triangles && pd.toBoolean(B.triangles, V)),
              (C = e.lines && pd.toBoolean(B.lines, C));
          }
          if ((S && (w = 0), x > pd.Const.EPSILON && (A *= x), "offset" in t)) {
            var Y = pd.constrainTo(pd.toNumber(t.offset, 0.5), 0, 1);
            (h = (1 - Y) * A), (d = Y * A);
          } else
            switch (M) {
              default:
                d = h = 0.5 * A;
                break;
              case pd.Align.OUTSIDE:
                (d = 0), (h = A);
                break;
              case pd.Align.INSIDE:
                (d = A), (h = 0);
            }
          if (1.001 < A) {
            (u = S ? 0 : 1),
              (i = r[(l = S ? D - 1 : 0)]),
              (a = r[u]),
              (F[0] = a[0] - i[0]),
              (F[1] = a[1] - i[1]),
              (F[2] = (+a[2] || 0) - (+i[2] || 0)),
              t.normals && (O = t.normals[l]),
              (f = Math.sqrt(F[0] * F[0] + F[1] * F[1] + F[2] * F[2])),
              (E[0] = F[1] * O[2] - F[2] * O[1]),
              (E[1] = F[2] * O[0] - F[0] * O[2]),
              (E[2] = F[0] * O[1] - F[1] * O[0]),
              G(E);
            for (var U = 0; U < D; ++U) {
              if (
                (D <= (u = (l = U) + 1) && (u = 0),
                (i = r[l]),
                (a = r[u]),
                !S && u < 1 && 0 < l
                  ? ((z[0] = i[0] - r[l - 1][0]),
                    (z[1] = i[1] - r[l - 1][1]),
                    (z[2] = (+i[2] || 0) - (+r[l - 1][2] || 0)))
                  : ((z[0] = a[0] - i[0]),
                    (z[1] = a[1] - i[1]),
                    (z[2] = (+a[2] || 0) - (+i[2] || 0))),
                t.normals && (O = t.normals[l]),
                (m = Math.sqrt(z[0] * z[0] + z[1] * z[1] + z[2] * z[2])),
                (_[0] = z[1] * O[2] - z[2] * O[1]),
                (_[1] = z[2] * O[0] - z[0] * O[2]),
                (_[2] = z[0] * O[1] - z[1] * O[0]),
                G(_),
                (v = f * m),
                (g = F[0] * z[0] + F[1] * z[1] + F[2] * z[2]),
                (b =
                  1 <= (y = v > pd.Const.EPSILON ? g / v : 0)
                    ? 0
                    : y <= -1
                    ? Math.PI
                    : Math.acos(y)),
                pd3D.VectorArray.cross(I, F, z),
                !(1 != w || (l && u)))
              ) {
                var H = z.slice();
                G(H),
                  0 == l &&
                    (i = [
                      i[0] - 0.5 * H[0] * A,
                      i[1] - 0.5 * H[1] * A,
                      i[2] - 0.5 * H[2] * A,
                    ]),
                  0 == u &&
                    (i = [
                      i[0] + 0.5 * H[0] * A,
                      i[1] + 0.5 * H[1] * A,
                      i[2] + 0.5 * H[2] * A,
                    ]);
              }
              (v = Math.cos(0.5 * b)),
                (o = pd.safeDivide(d, v)),
                (s = pd.safeDivide(h, v)),
                (N[0] = E[0] + _[0]),
                (N[1] = E[1] + _[1]),
                (N[2] = E[2] + _[2]),
                G(N);
              var q = Math.min(f, m) + 1.4142136 * A;
              (s = Math.min(s, q)),
                (o = Math.min(o, q)),
                (P[0] = i[0] + N[0] * s),
                (P[1] = i[1] + N[1] * s),
                (P[2] = i[2] + N[2] * s),
                (L[0] = i[0] - N[0] * o),
                (L[1] = i[1] - N[1] * o),
                (L[2] = i[2] - N[2] * o),
                b < 2.0943951022
                  ? (e.addVertex(L.slice()),
                    (c = e.addVertex(P.slice())),
                    0 < U
                      ? (V &&
                          (e.addTriangle(c - 3, c, c - 1),
                          e.addTriangle(c - 3, c - 2, c)),
                        C && (e.addLine(c - 3, c - 1), e.addLine(c - 2, c)))
                      : !S && C && e.addLine(c - 1, c))
                  : I[2] < 0
                  ? ((f < s || m < s) && (s = Math.min(f, m)),
                    (p = Math.sin(0.5 * b) * d),
                    (R[0] = i[0] - N[0] * d),
                    (R[1] = i[1] - N[1] * d),
                    (R[2] = i[2] - N[2] * d),
                    e.addVertex([
                      R[0] + _[0] * p,
                      R[1] + _[1] * p,
                      R[2] + _[2] * p,
                    ]),
                    e.addVertex([
                      R[0] + E[0] * p,
                      R[1] + E[1] * p,
                      R[2] + E[2] * p,
                    ]),
                    (c = e.addVertex(P.slice())),
                    0 < U
                      ? (V &&
                          (e.addTriangle(c - 3, c, c - 2),
                          e.addTriangle(c - 4, c - 3, c - 2),
                          e.addTriangle(c - 1, c - 2, c)),
                        C &&
                          (e.addLine(c - 3, c),
                          e.addLine(c - 4, c - 2),
                          e.addLine(c - 2, c - 1)))
                      : !S && C && e.addLine(c - 1, c))
                  : ((f < o || m < o) && (o = Math.min(f, m)),
                    (p = Math.sin(0.5 * b) * h),
                    (R[0] = i[0] + N[0] * h),
                    (R[1] = i[1] + N[1] * h),
                    (R[2] = i[2] + N[2] * h),
                    e.addVertex([
                      R[0] + E[0] * p,
                      R[1] + E[1] * p,
                      R[2] + E[2] * p,
                    ]),
                    e.addVertex(L.slice()),
                    (c = e.addVertex([
                      R[0] + _[0] * p,
                      R[1] + _[1] * p,
                      R[2] + _[2] * p,
                    ])),
                    0 < U
                      ? (V &&
                          (e.addTriangle(c - 4, c - 2, c - 1),
                          e.addTriangle(c - 4, c - 3, c - 2),
                          e.addTriangle(c - 1, c - 2, c)),
                        C &&
                          (e.addLine(c - 4, c - 1),
                          e.addLine(c - 3, c - 2),
                          e.addLine(c - 2, c)))
                      : !S && C && e.addLine(c - 1, c)),
                (E[0] = _[0]),
                (E[1] = _[1]),
                (E[2] = _[2]),
                (f = m),
                (F[0] = z[0]),
                (F[1] = z[1]),
                (F[2] = z[2]);
            }
            S
              ? (V && (e.addTriangle(k, c - 1, c), e.addTriangle(k, c, k + 1)),
                C && (e.addLine(k, c - 1), e.addLine(k + 1, c)))
              : C && e.addLine(c - 1, c);
          } else if (e.lines) {
            e.addVertex(r[0]);
            for (U = 1; U < D - 1; ++U)
              (c = e.addVertex(r[U])), e.addLine(c - 1, c);
            (c = e.addVertex(r[D - 1])),
              e.addLine(c - 1, c),
              S && e.addLine(k, c),
              (k = e.vertexCount());
          }
          t.transform instanceof pd3D.Matrix &&
            e.transform(t.transform, null, k),
            n && e.compile();
        }
        return e;
      }),
      (pd3D.Shapes.arrow = function (t, e) {
        var r = !1,
          n = !1;
        (t = t || {}), e || ((e = new pd3D.Mesh(t)), (r = !0));
        var i = pd.toInteger(t.type, 0),
          a = pd.toNumber(t.scale, 1),
          o = pd.toNumber(t.shaft, 0),
          s = pd.toNumber(t.indent, 0),
          d = pd.toNumber(t.thickness, 0.25),
          l = Math.max(1, pd.toNumber(t.length, 0 < i ? 25 : 40)),
          h = Math.max(1, pd.toNumber(t.width, l * (0 < i ? 1 : 0.6))),
          u = e.triangles && pd.toBoolean(t.triangles, !0),
          c = e.lines && pd.toBoolean(t.lines, !1);
        if (t.style) {
          var p = t.style;
          (i = pd.toInteger(p.arrowType, i)),
            (o = pd.toNumber(p.lineWidth, o)),
            (s = pd.toNumber(p.arrowIndent, s)),
            (d = pd.toNumber(p.arrowThickness, d)),
            (h = Math.max(1, pd.toNumber(p.arrowWidth, h))),
            (l = Math.max(1, pd.toNumber(p.arrowLength, l))),
            (u = e.triangles && pd.toBoolean(p.triangles, u)),
            (c = e.lines && pd.toBoolean(p.lines, c));
        }
        var f = -1,
          m = -1,
          g = h / l;
        t.vertices &&
          0 < t.vertices.length &&
          ((t.side = pd.Align.CENTER),
          (n = t.ignoreEnd = !0),
          pd3D.Shapes.thickLine(t, e)),
          a > pd.Const.EPSILON && ((h *= a), (l *= a), (s *= a), (o *= a));
        var v = 4;
        1 <= d ? (v = 1 / ((d * a) / l)) : 0 < d && (v = 1 / d);
        var y = l / v,
          b = h / v,
          D = t.to;
        null == D &&
          (D =
            t.vertices && 0 < t.vertices.length
              ? t.vertices[t.vertices.length - 1]
              : [0, 0, 0]);
        var M = t.from || null;
        null == M &&
          t.vertices &&
          1 < t.vertices.length &&
          (M = t.vertices[t.vertices.length - 2]);
        var x = o < 1.001 ? 0 : 0.5 * o,
          T = 0.5 * h,
          w = e.vertexCount();
        switch (i) {
          default:
          case 0:
            (s = Math.min(s, 0.9 * l)),
              pd.closeTo(s, 0, 0.1) && !n
                ? (e.addVertex([0, 0, 0]),
                  e.addVertex([-l, T, 0]),
                  e.addVertex([-l, -T, 0]),
                  u && e.addTriangle(w, w + 1, w + 2),
                  c &&
                    (e.addLine(w, w + 1),
                    e.addLine(w + 1, w + 2),
                    e.addLine(w + 2, w)))
                : (e.addVertex([0, 0, 0]),
                  e.addVertex([-l, T, 0]),
                  (f = e.addVertex([-l + s, x, 0])),
                  (m = e.addVertex([-l + s, -x, 0])),
                  e.addVertex([-l, -T, 0]),
                  u &&
                    (e.addTriangle(w, w + 1, w + 2),
                    e.addTriangle(w, w + 3, w + 4)),
                  c &&
                    (e.addLine(w, w + 1),
                    e.addLine(w + 1, w + 2),
                    e.addLine(w + 3, w + 4),
                    e.addLine(w + 4, w)));
            break;
          case 1:
            e.addVertex([0, 0, 0]),
              e.addVertex([-(v + 0.25) * y, (v + 0.25) * b, 0]),
              e.addVertex([-(v + 0.75) * y, (v - 0.25) * b, 0]),
              (f = e.addVertex([-y - x, x * g, 0])),
              (m = e.addVertex([-y - x, -x * g, 0])),
              e.addVertex([-(v + 0.75) * y, -(v - 0.25) * b, 0]),
              e.addVertex([-(v + 0.25) * y, -(v + 0.25) * b, 0]),
              u &&
                (e.addTriangle(w, w + 1, w + 3),
                e.addTriangle(w + 1, w + 2, w + 3),
                e.addTriangle(w + 4, w + 5, w + 6),
                e.addTriangle(w, w + 4, w + 6)),
              c &&
                (e.addLine(w, w + 1),
                e.addLine(w + 1, w + 2),
                e.addLine(w + 2, w + 3),
                e.addLine(w + 4, w + 5),
                e.addLine(w + 5, w + 6),
                e.addLine(w + 6, w));
            break;
          case 2:
            e.addVertex([0, 0, 0]),
              e.addVertex([-v * y, v * b, 0]),
              e.addVertex([-(v + 1) * y, v * b, 0]),
              (f = e.addVertex([-y - x, x * g, 0])),
              (m = e.addVertex([-y - x, -x * g, 0])),
              e.addVertex([-(v + 1) * y, -v * b, 0]),
              e.addVertex([-v * y, -v * b, 0]),
              u &&
                (e.addTriangle(w, w + 1, w + 3),
                e.addTriangle(w + 1, w + 2, w + 3),
                e.addTriangle(w + 4, w + 5, w + 6),
                e.addTriangle(w, w + 4, w + 6)),
              c &&
                (e.addLine(w, w + 1),
                e.addLine(w + 1, w + 2),
                e.addLine(w + 2, w + 3),
                e.addLine(w + 4, w + 5),
                e.addLine(w + 5, w + 6),
                e.addLine(w + 6, w));
            break;
          case 3:
            e.addVertex([0, 0, 0]),
              e.addVertex([-(v + 0.5) * y, (v + 0.5) * b, 0]),
              e.addVertex([-(v + 0.5) * y, (v - 0.5) * b, 0]),
              (f = e.addVertex([-y - x, x * g, 0])),
              (m = e.addVertex([-y - x, -x * g, 0])),
              e.addVertex([-(v + 0.5) * y, -(v - 0.5) * b, 0]),
              e.addVertex([-(v + 0.5) * y, -(v + 0.5) * b, 0]),
              u &&
                (e.addTriangle(w, w + 1, w + 3),
                e.addTriangle(w + 1, w + 2, w + 3),
                e.addTriangle(w + 4, w + 5, w + 6),
                e.addTriangle(w, w + 4, w + 6)),
              c &&
                (e.addLine(w, w + 1),
                e.addLine(w + 1, w + 2),
                e.addLine(w + 2, w + 3),
                e.addLine(w + 4, w + 5),
                e.addLine(w + 5, w + 6),
                e.addLine(w + 6, w));
            break;
          case 4:
            e.addVertex([0, 0, 0]),
              e.addVertex([-v * y, v * b, 0]),
              e.addVertex([-(v + 0.5) * y, v * b, 0]),
              e.addVertex([-(v + 0.5) * y, (v - 0.5) * b, 0]),
              (f = e.addVertex([-y - x, x * g, 0])),
              (m = e.addVertex([-y - x, -x * g, 0])),
              e.addVertex([-(v + 0.5) * y, -(v - 0.5) * b, 0]),
              e.addVertex([-(v + 0.5) * y, -v * b, 0]),
              e.addVertex([-v * y, -v * b, 0]),
              u &&
                (e.addTriangle(w, w + 1, w + 4),
                e.addTriangle(w + 1, w + 2, w + 3),
                e.addTriangle(w + 1, w + 3, w + 4),
                e.addTriangle(w + 5, w + 6, w + 8),
                e.addTriangle(w + 6, w + 7, w + 8),
                e.addTriangle(w, w + 5, w + 8)),
              c &&
                (e.addLine(w, w + 1),
                e.addLine(w + 1, w + 2),
                e.addLine(w + 2, w + 3),
                e.addLine(w + 3, w + 4),
                e.addLine(w + 5, w + 6),
                e.addLine(w + 6, w + 7),
                e.addLine(w + 7, w + 8),
                e.addLine(w + 8, w));
        }
        if (
          (0 <= f &&
            0 <= m &&
            (x < 0.1 && e.lines
              ? e.addLine(w - 1, m)
              : (u &&
                  0 < x &&
                  (e.addTriangle(w, f, m),
                  n &&
                    (e.addTriangle(w - 1, f, w - 2),
                    e.addTriangle(w - 1, m, f))),
                c &&
                  (n
                    ? (e.addLine(w - 2, f), e.addLine(w - 1, m))
                    : 0 < x && e.addLine(f, m)))),
          pd.isArray(D))
        ) {
          var A = pd3D.Matrix.translate(+D[0] || 0, +D[1] || 0, +D[2] || 0);
          if (pd.isArray(M)) {
            var O = Math.atan2(D[1] - M[1], D[0] - M[0]) * pd.Const.RAD2DEG;
            pd.closeTo(O, 0) ||
              (A = pd3D.Matrix.multiply(A, pd3D.Matrix.rotate(O, 0, 0, 1), A));
          }
          e.transform(A, null, w);
        }
        return (
          t.transform instanceof pd3D.Matrix &&
            e.transform(t.transform, null, w),
          r && e.compile(),
          e
        );
      }),
      (pd3D.Shapes.Type = {
        CIRCLE: 1,
        CIRCLE_HOLLOW: -1,
        TRIANGLE: 2,
        TRIANGLE_HOLLOW: -2,
        SQUARE: 3,
        SQUARE_HOLLOW: -3,
        DIAMOND: 4,
        DIAMOND_HOLLOW: -4,
        STAR: 5,
        STAR_HOLLOW: -5,
        SPOKES: 6,
        CROSS: -6,
      }),
      (pd3D.Shapes.polygon = function (t, e, r) {
        var n = !1;
        (t = t || {}), e || ((e = new pd3D.Mesh(t)), (n = !0));
        var i,
          a,
          o,
          s,
          d,
          l,
          h,
          u = null,
          c = pd.toInteger(t.type, 0),
          p = pd.toNumber(t.size, 20),
          f = pd.toNumber(t.rotation, 0),
          m = pd.toNumber(t.thickness, 2.5),
          g = pd.constrainTo(pd.toNumber(t.angle, 360), 0, 360),
          v = pd.constrainTo(pd.toInteger(t.segments, 24), 2, 720),
          y = e.triangles && pd.toBoolean(t.triangles, !0),
          b = e.lines && pd.toBoolean(t.lines, !1),
          D = { pos: [] },
          M = t.center || null;
        null == M &&
          t.vertices &&
          0 < t.vertices.length &&
          (M = t.vertices[t.vertices.length - 1]),
          (r = pd.toNumber(r, 0)),
          pd.closeTo(r, 0) && (r = pd.toNumber(t.scale, 0)),
          pd.closeTo(r, 0) && (r = 1),
          pd.isArray(t.offset) &&
            (null == M && (M = [0, 0, 0]),
            (M[0] += (+t.offset[0] || 0) * r),
            (M[1] += (+t.offset[1] || 0) * r),
            (M[2] += (+t.offset[2] || 0) * r));
        var x = t.from || null;
        if (
          (null == x &&
            t.vertices &&
            1 < t.vertices.length &&
            (x = t.vertices[t.vertices.length - 2]),
          pd.closeTo(g, 0) && (g = 360),
          r > pd.Const.EPSILON && ((m *= r), (p *= r)),
          pd.isArray(t.color) && e.color(t.color),
          t.transform instanceof pd3D.Matrix && (u = t.transform),
          e.normals)
        ) {
          var T = [0, 0, 1];
          u && u.applyVectorTransformToArray(T), e.normal(T);
        }
        var w = e.vertexCount();
        switch (c) {
          case 2:
          case -2:
            (v = 3), (m *= 2), (f += 60);
            break;
          case 3:
          case -3:
            (v = 4), (m *= 1.41421356), (f += 45);
            break;
          case 4:
          case -4:
            (v = 4), (m *= 1.41421356);
            break;
          case 5:
          case -5:
            (v *= 2), (f += 180);
            break;
          case -6:
            v = 4;
        }
        switch (c) {
          default:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            var A = p,
              O = Math.max(2, pd.toInteger(t.tickIncr, 2));
            if (0 < A) {
              (D.pos = [0, 0, 0]), e.coords && (D.coord = [0, 0]);
              var V = e.addVertexObject(D);
              v < 2 && (v = pd.mapAndConstrainTo(g, 0, 360, 2, 24)),
                (f *= pd.Const.DEG2RAD),
                (g *= pd.Const.DEG2RAD);
              for (
                var C = (h = 0), S = 1 + (N = 0.5 * (E = 1 / Math.round(v)));
                C < S;
                C += E
              )
                (L = Math.min(C, 1) * g),
                  (d = Math.cos(L + f)),
                  (l = Math.sin(L + f)),
                  5 == c && (A = h++ % O ? p - m : p),
                  (D.pos = [A * d, A * l, 0]),
                  e.coords && (D.coord = [d, l]),
                  (i = e.addVertexObject(D)),
                  N < C && (y && e.addTriangle(V, a, i), b && e.addLine(a, i)),
                  (a = i);
              b && g < F && (e.addLine(V, V + 1), e.addLine(V, i));
            }
            break;
          case -1:
          case -2:
          case -3:
          case -4:
          case -5:
            A = p;
            var k = Math.max(0, p - m);
            O = Math.max(2, pd.toInteger(t.tickIncr, 2));
            if (0 < A) {
              v < 2 && (v = pd.mapAndConstrainTo(g, 0, 360, 2, 24)),
                (f *= pd.Const.DEG2RAD),
                (g *= pd.Const.DEG2RAD);
              var N;
              for (
                C = h = 0, S = 1 + (N = 0.5 * (E = 1 / Math.round(v)));
                C < S;
                C += E
              )
                (L = Math.min(C, 1) * g),
                  (d = Math.cos(L + f)),
                  (l = Math.sin(L + f)),
                  -5 == c && (A = h++ % O ? p - m : p),
                  (D.pos = [k * d, k * l, 0]),
                  e.coords && (D.coord = [d, l]),
                  (i = e.addVertexObject(D)),
                  (D.pos = [A * d, A * l, 0]),
                  (o = e.addVertexObject(D)),
                  N < C &&
                    (y && (e.addTriangle(o, a, s), e.addTriangle(i, a, o)),
                    b && (e.addLine(a, i), e.addLine(s, o))),
                  (a = i),
                  (s = o);
              b && g < F && (e.addLine(w, w + 1), e.addLine(a, s));
            }
            break;
          case 6:
          case -6:
            A = p;
            var I = pd.toNumber(t.tickSize, m) * r;
            k = Math.max(0, p - I);
            if (0 < A) {
              v < 2 && (v = pd.mapAndConstrainTo(g, 0, 360, 2, 24)), (h = 0);
              var E = 1 / Math.round(v),
                _ = new pd3D.Matrix();
              if (m < 1e-6 && b) {
                var P = [new pd3D.Vector(0, k, 0), new pd3D.Vector(0, A, 0)];
                for (C = 0; C < 1; C += E)
                  (L = Math.min(C, 1) * g),
                    (_ = pd3D.Matrix.rotate(L + f, 0, 0, 1, _)),
                    (D.pos = _.transformPoint(P[0]).toArray()),
                    (i = e.addVertexObject(D)),
                    (D.pos = _.transformPoint(P[1]).toArray()),
                    e.addVertexObject(D),
                    b && e.addLine(i, i + 1);
              } else {
                m = Math.max(1e-6, (m *= 0.5));
                var L;
                for (
                  P = [
                    new pd3D.Vector(-m, k, 0),
                    new pd3D.Vector(m, k, 0),
                    new pd3D.Vector(m, A, 0),
                    new pd3D.Vector(-m, A, 0),
                  ],
                    C = 0;
                  C < 1;
                  C += E
                )
                  (L = Math.min(C, 1) * g),
                    (_ = pd3D.Matrix.rotate(L + f, 0, 0, 1, _)),
                    (D.pos = _.transformPoint(P[0]).toArray()),
                    (i = e.addVertexObject(D)),
                    (D.pos = _.transformPoint(P[1]).toArray()),
                    e.addVertexObject(D),
                    (D.pos = _.transformPoint(P[2]).toArray()),
                    e.addVertexObject(D),
                    (D.pos = _.transformPoint(P[3]).toArray()),
                    e.addVertexObject(D),
                    y &&
                      (e.addTriangle(i, i + 1, i + 2),
                      e.addTriangle(i, i + 2, i + 3)),
                    b &&
                      (e.addLine(i, i + 1),
                      e.addLine(i + 1, i + 2),
                      e.addLine(i + 2, i + 3),
                      e.addLine(i + 3, i));
              }
            }
        }
        if (pd.isArray(x)) {
          var R = 0;
          (R =
            null != M
              ? Math.atan2(M[1] - x[1], M[0] - x[0]) * pd.Const.RAD2DEG
              : Math.atan2(-x[1], -x[0]) * pd.Const.RAD2DEG),
            pd.closeTo(R, 0) ||
              e.transform(pd3D.Matrix.rotate(R, 0, 0, 1), null, w);
        }
        return (
          null != M &&
            e.transform(pd3D.Matrix.translate(M[0], M[1], M[2]), null, w),
          u && e.transform(u, null, w),
          n && e.compile(),
          e
        );
      }),
      (pd3D.Shapes.circularArrow = function (t, e) {
        var r = !1;
        (t = t || {}), e || ((e = new pd3D.Mesh(t)), (r = !0));
        var n = pd.Const.DEG2RAD,
          i = pd.toNumber(t.width, 1),
          a = pd.toNumber(t.radius, 1),
          o = t.center || [0, 0, 0],
          s = pd.toNumber(t.fromAngle, 0) * n,
          d = pd.toNumber(t.toAngle, Math.PI) * n,
          l = e.triangles && pd.toBoolean(t.triangles, !0),
          h = e.lines && pd.toBoolean(t.lines, !1),
          u = e.vertexCount(),
          c = 2.5 * n,
          p = d - s,
          f = Math.ceil(Math.abs(p) / c),
          m = a + i,
          g = a - i,
          v = a + 0.5 * i,
          y = a - 0.5 * i;
        f < 3 && (f = 3);
        var b = s,
          D = p / f,
          M = Math.sin(s),
          x = Math.cos(s);
        e.addVertex([o[0] + a * M, o[1] + a * x, o[2]]),
          (b += D),
          (M = Math.sin(b)),
          (x = Math.cos(b)),
          e.addVertex([o[0] + m * M, o[1] + m * x, o[2]]),
          e.addVertex([o[0] + g * M, o[1] + g * x, o[2]]),
          l && e.addTriangle(u, u + 2, u + 1),
          e.addVertex([o[0] + y * M, o[1] + y * x, o[2]]),
          e.addVertex([o[0] + v * M, o[1] + v * x, o[2]]),
          h &&
            (e.addLine(u, u + 1),
            e.addLine(u, u + 2),
            e.addLine(u + 2, u + 3),
            e.addLine(u + 1, u + 4));
        for (var T = e.vertexCount(), w = 2; w < f; ++w)
          (b += D),
            (M = Math.sin(b)),
            (x = Math.cos(b)),
            e.addVertex([o[0] + y * M, o[1] + y * x, o[2]]),
            e.addVertex([o[0] + v * M, o[1] + v * x, o[2]]),
            l &&
              (e.addTriangle(T - 1, T - 2, T), e.addTriangle(T + 1, T - 1, T)),
            h && (e.addLine(T - 2, T), e.addLine(T - 1, T + 1)),
            (T += 2);
        return (
          e.addVertex([o[0] + g * M, o[1] + g * x, o[2]]),
          e.addVertex([o[0] + m * M, o[1] + m * x, o[2]]),
          (M = Math.sin(d)),
          (x = Math.cos(d)),
          e.addVertex([o[0] + a * M, o[1] + a * x, o[2]]),
          l && e.addTriangle(T, T + 2, T + 1),
          h &&
            (e.addLine(T - 2, T),
            e.addLine(T - 1, T + 1),
            e.addLine(T, T + 2),
            e.addLine(T + 1, T + 2)),
          t.transform instanceof pd3D.Matrix &&
            e.transform(t.transform, null, u),
          r && e.compile(),
          e
        );
      });
  })(),
  String.prototype.trim ||
    (function () {
      var t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
      String.prototype.trim = function () {
        return this.replace(t, "");
      };
    })(),
  (function () {
    var g = null,
      p = null,
      f = null,
      j = 0.1,
      K = 0.5 * j,
      X = 0.8,
      $ = 1.25,
      Z = 1,
      Q = 0.1,
      J = 0,
      tt = 0,
      et = 0.8,
      rt = 0.25,
      m = 0.5,
      nt = null,
      it = null,
      v = !1,
      y = 0,
      at = null;
    (pd3D.FontInstance = function (t) {
      (t = t || {}),
        (this.isTriangulated = !0),
        (this._width = pd.toNumber(t.width, 0.1)),
        (this._aspectRatio = pd.toNumber(t.aspectRatio, 1.25)),
        (this._chamfer = pd.toNumber(t.chamfer, 0.1)),
        (this._italic = pd.toNumber(t.italic, 0)),
        (this._skew = pd.toNumber(t.skew, 0)),
        (this._weight = pd.toNumber(t.weight, 0)),
        this._weight > pd.Const.EPSILON
          ? (this._width = (this._weight / 900) * 0.35)
          : (this._weight = Math.round((this._width / 0.35) * 900)),
        (this._extrusion = pd.toNumber(t.extrusion, 0)),
        (this._updateMetrics = !0),
        (this._metrics = [[], []]),
        (this._letterSpacing = pd.toNumber(t.letterSpacing, 0.25)),
        (this._wordSpacing = pd.toNumber(t.wordSpacing, 0.8)),
        (this._lineSpacing = pd.toNumber(t.lineSpacing, 0.5)),
        (this._smallCapsRatio = pd.toNumber(t.smallCapsRatio, 0.8)),
        (this._includeOutline = !1);
      var a = null,
        o = null,
        s = null;
      (this.maxTextWidth = 0),
        (this.blockHeight = 0),
        (this.blockWidth = 0),
        (this.setSize = function (t) {
          return (
            pd.isArray(t)
              ? (s = pd3D.Matrix.scale(+t[0] || 1, +t[1] || 1, +t[2] || 1, s))
              : ((t = +t || 0),
                (s = pd.closeTo(t, 0) ? null : pd3D.Matrix.scale(t, t, t, s))),
            this
          );
        }),
        (this.setRotationPolar = function (t, e) {
          return (
            pd.closeTo(t, 0)
              ? (o = pd.closeTo(e, 0)
                  ? null
                  : pd3D.Matrix.rotate(e, 0, 1, 0, o))
              : ((o = pd3D.Matrix.rotate(t, 0, 0, 1, o)),
                pd.closeTo(e, 0) ||
                  o.multiplyBy(pd3D.Matrix.rotate(e, 0, 1, 0))),
            this
          );
        }),
        (this.setRotation = function (t, e, r, n) {
          return (
            (o = pd.closeTo(t, 0) ? null : pd3D.Matrix.rotate(t, e, r, n, o)),
            this
          );
        }),
        (this.addRotation = function (t, e, r, n) {
          return (
            pd.closeTo(t, 0) ||
              (o
                ? o.multiplyBy(pd3D.Matrix.rotate(t, e, r, n))
                : (o = pd3D.Matrix.rotate(t, e, r, n, o))),
            this
          );
        }),
        (this.clearRotations = function () {
          return (o = null), this;
        }),
        (this.drawText = function (t, e, r, n, i) {
          return (
            (a = pd3D.Matrix.translate(e[0], e[1], e[2], a)),
            o && a.multiplyBy(o),
            s && a.multiplyBy(s),
            this.addText(t, n || pd.Align.CENTER, i || pd.Align.CENTER, a, r),
            this
          );
        });
    }),
      (pd3D.FontInstance.prototype.italicSlant = function (t) {
        return arguments.length
          ? ((this._italic = pd.constrainTo(parseFloat(t), -1, 1)), this)
          : this._italic;
      }),
      (pd3D.FontInstance.prototype.verticalSkew = function (t) {
        return arguments.length
          ? ((this._skew = pd.constrainTo(parseFloat(t), -1, 1)), this)
          : this._skew;
      }),
      (pd3D.FontInstance.prototype.averageKerning = function (t) {
        return arguments.length
          ? ((this._letterSpacing = pd.constrainTo(parseFloat(t) - 1, 0, 10)),
            this)
          : this._letterSpacing + 1;
      }),
      (pd3D.FontInstance.prototype.letterSpacing = function (t) {
        return arguments.length
          ? ((this._letterSpacing = pd.constrainTo(parseFloat(t), 0, 10)), this)
          : this._letterSpacing;
      }),
      (pd3D.FontInstance.prototype.wordSpacing = function (t) {
        return arguments.length
          ? ((this._wordSpacing = pd.constrainTo(parseFloat(t), 0, 10)), this)
          : this._wordSpacing;
      }),
      (pd3D.FontInstance.prototype.lineSpacing = function (t) {
        return arguments.length
          ? ((this._lineSpacing = pd.constrainTo(parseFloat(t), 0, 10)), this)
          : this._lineSpacing;
      }),
      (pd3D.FontInstance.prototype.smallCapsRatio = function (t) {
        return arguments.length
          ? ((this._smallCapsRatio = pd.constrainTo(parseFloat(t), 0.1, 1)),
            this)
          : this._smallCapsRatio;
      }),
      (pd3D.FontInstance.prototype.aspectRatio = function (t, e, r) {
        return arguments.length
          ? ((this._aspectRatio = pd.constrainTo(t, 0.1, 10)),
            e > pd.Const.EPSILON &&
              (this._letterSpacing = pd.constrainTo(e - 1, 0, 10)),
            r > pd.Const.EPSILON &&
              (this._wordSpacing = pd.constrainTo(r, 0, 10)),
            (this._updateMetrics = !0),
            this)
          : this._aspectRatio;
      }),
      (pd3D.FontInstance.prototype.weight = function (t) {
        if (!arguments.length) return this._weight;
        var e = pd.constrainTo(parseFloat(t), 0, 900);
        return (
          pd.closeTo(this._weight, e, 0.5) ||
            ((this._width = 333333e-9 * e),
            (this._weight = Math.round(e)),
            (this._updateMetrics = !0)),
          this
        );
      }),
      (pd3D.FontInstance.prototype.chamfer = function (t) {
        if (!arguments.length) return (this._chamfer / 0.275) * 1e3;
        var e = 275e-6 * pd.constrainTo(parseFloat(t), 1, 1e3);
        return (
          pd.closeTo(this._chamfer, e, 0.001) ||
            ((this._updateMetrics = !0), (this._chamfer = e)),
          this
        );
      }),
      (pd3D.FontInstance.prototype.includeOutline = function (t) {
        return arguments.length
          ? ((this._includeOutline = !!t), this)
          : this._includeOutline;
      }),
      (pd3D.FontInstance.prototype.extrusion = function (t) {
        return arguments.length
          ? ((this._extrusion = pd.toNumber(t, 0)), this)
          : this._extrusion;
      }),
      (pd3D.FontInstance.prototype.resetMetrics = function () {
        return (
          (this._aspectRatio = pd.constrainTo(this._aspectRatio, 0.1, 10)),
          (this._letterSpacing = 0.25),
          (this._wordSpacing = 0.8),
          (this._lineSpacing = 0.5),
          (this._italic = 0),
          (this._skew = 0),
          this._calculateFontVertices(),
          this
        );
      }),
      (pd3D.FontInstance.prototype._calculateFontVertices = function () {
        var t = this._width,
          e = this._chamfer,
          r = this._aspectRatio,
          n = t / 2.414213,
          i = 0.5 * r,
          a = 0.5 * (t = Math.min(i, t)),
          o = t + 0.01,
          s = this._metrics[0],
          d = this._metrics[1];
        (s[0] = 0),
          (s[1] = t),
          (s[2] = e),
          (s[3] = Math.max(t, e + n)),
          (s[4] = i - a),
          (s[5] = i + a),
          (s[6] = Math.max(o, Math.min(r - t, r - e - n))),
          (s[7] = Math.max(o, r - e)),
          (s[8] = Math.max(o, r - t)),
          (s[9] = r),
          (s[10] = pd.mapAndConstrainTo(e, 0, t, 0, t)),
          (d[0] = 0),
          (d[1] = t),
          (d[2] = e),
          (d[3] = Math.max(t, e + n)),
          (d[4] = 0.5 + a - e - n),
          (d[5] = Math.min(0.5, 0.5 + a - e)),
          (d[6] = 0.5 - a),
          (d[7] = 0.5),
          (d[8] = 0.5 + a),
          (d[9] = Math.max(0.5, 0.5 - a + e)),
          (d[10] = Math.max(d[8], 0.5 - a + e + n)),
          (d[11] = Math.min(1 - t, 1 - e - n)),
          (d[12] = 1 - e),
          (d[13] = 1 - t),
          (d[14] = 1),
          (d[4] = Math.min(d[4], d[6])),
          d[3] > d[4] && (d[3] = d[4] = 0.5 * (d[3] + d[4])),
          d[10] > d[11] && (d[10] = d[11] = 0.5 * (d[10] + d[11])),
          (this._updateMetrics = !1);
      }),
      (pd3D.FontInstance.prototype.getLineWidth = function (t) {
        var e,
          r,
          n = 0,
          i = 0,
          a = this._aspectRatio,
          o = this._width,
          s = this._smallCapsRatio,
          d = this._letterSpacing * a,
          l = this._wordSpacing,
          h = !1,
          u = !1,
          c = !1,
          p = t.length,
          f = !0;
        0 < p && 97 <= (r = t.charCodeAt(0)) && r < 123 && (c = !0);
        for (var m = 0; m < p; m++) {
          switch (
            ((i = e = 1),
            (h = u),
            (u = c),
            m < p - 1
              ? (c = 97 <= (r = t.charCodeAt(m + 1)) && r < 123)
              : (f = c = !1),
            t.charAt(m))
          ) {
            default:
              u && (e = s);
              break;
            case "i":
              e = s;
            case "I":
              i = Math.max(0.5, (1.25 * o) / a);
              break;
            case "\b":
            case "\f":
              i = e = 0;
              break;
            case " ":
              i = l;
              break;
            case "1":
            case "{":
            case "}":
              i = 0.5;
              break;
            case "(":
            case ")":
            case "[":
            case "]":
              i = o / a + 0.2;
              break;
            case '"':
              i = (o / a) * 2 + 0.1;
              break;
            case "|":
            case "`":
              i = 0.5;
              break;
            case ",":
            case ".":
            case ":":
            case ";":
              (h || c) && (e = s);
            case "!":
            case "'":
              i = o / a;
          }
          (n += i * a * e), f && (n += c ? d * s : d * e);
        }
        return n;
      }),
      (pd3D.FontInstance.prototype.getTextWidth = function (t) {
        for (
          var e, r = t.match(/[^\r\n]+/g), n = 0, i = 0, a = r.length;
          i < a;
          ++i
        )
          n < (e = this.getLineWidth(r[i].trim())) && (n = e);
        return n;
      }),
      (pd3D.FontInstance.prototype.addText = function (t, e, r, n, i) {
        if (
          (this._updateMetrics && this._calculateFontVertices(),
          !t || t.length < 1)
        )
          return i;
        (n = n || new pd3D.Matrix()),
          b.init(n),
          (j = this._width),
          (K = 0.5 * j),
          (X = this._smallCapsRatio),
          ($ = this._aspectRatio),
          (Q = this._chamfer),
          (J = this._italic),
          (tt = this._skew),
          (m = this._lineSpacing),
          (et = this._wordSpacing),
          (rt = this._letterSpacing * $),
          (v = this._includeOutline && i.hasLines),
          (y = this._extrusion),
          (nt = this._metrics[0]),
          (it = this._metrics[1]),
          (g = i || new pd3D.Mesh()),
          (p = g.defaultColor),
          (f = g.defaultLineColor),
          (v && g.hasVertexColors && g.defaultLineColor != g.defaultColor) ||
            (f = null),
          g.triangles || g.addIndexBuffer("triangles"),
          (at = y > pd.Const.EPSILON ? (g.hasVertexNormals ? w : T) : x);
        var a,
          o,
          s,
          d = t.match(/[^\r\n]+/g),
          l = d ? d.length : 0,
          h = 0,
          u = Math.max(1, l + (l - 1) * m);
        switch (r) {
          default:
          case pd.Align.BASELINE:
            break;
          case pd.Align.TOP:
          case pd.Align.TOP_LEFT:
          case pd.Align.TOP_RIGHT:
            l < 2 && (u += 0.5 * m),
              b.multiplyBy(pd3D.Matrix.translate(0, -1, 0));
            break;
          case pd.Align.CENTER:
            b.multiplyBy(pd3D.Matrix.translate(0, 0.5 * u - 1, 0));
            break;
          case pd.Align.BOTTOM:
          case pd.Align.BOT_LEFT:
          case pd.Align.BOT_RIGHT:
            l < 2 && (u += 0.5 * m),
              b.multiplyBy(pd3D.Matrix.translate(0, -1 + u, 0));
        }
        for (var c = 0; c < l; ++c) {
          switch (
            ((a = d[c].trim()),
            (s = 0),
            h < (o = this.getLineWidth(a)) && (h = o),
            e)
          ) {
            default:
              s = 0.5 * -o;
              break;
            case pd.Align.LEFT:
            case pd.Align.TOP_LEFT:
            case pd.Align.BOT_LEFT:
            case pd.Align.BASELINE:
              break;
            case pd.Align.RIGHT:
            case pd.Align.TOP_RIGHT:
            case pd.Align.BOT_RIGHT:
              s = -o;
          }
          pd.closeTo(s, 0)
            ? A(a)
            : (b.multiplyBy(pd3D.Matrix.translate(s, 0, 0)),
              A(a),
              b.multiplyBy(pd3D.Matrix.translate(-s, 0, 0))),
            1 < d.length && b.multiplyBy(pd3D.Matrix.translate(0, -(1 + m), 0));
        }
        return (
          this.maxTextWidth < h && (this.maxTextWidth = h),
          (this.blockHeight = u),
          (this.blockWidth = h),
          g.hasVertexColors && g.color(p),
          g
        );
      });
    var a = new pd3D.Vector(),
      b = new pd3D.Matrix(),
      ot = 0;
    function D(t, e) {
      var r = ot + (t + J * (e - 0.5)) * Z,
        n = (e + tt * e * (t - 0.5)) * Z,
        i = b.m;
      return (
        a
          .init(
            i[0] * r + i[1] * n + i[3],
            i[4] * r + i[5] * n + i[7],
            i[8] * r + i[9] * n + i[11]
          )
          .divide(i[12] * r + i[13] * n + i[15]),
        a.toArray()
      );
    }
    function M(t, e) {
      return (
        a.init(ot + (t + J * (e - 0.5)) * Z, (e + tt * e * (t - 0.5)) * Z, y),
        b.transformPoint(a, a),
        a.toArray()
      );
    }
    function x(t, e, r) {
      var n,
        i,
        a,
        o,
        s = t.length;
      g.hasVertexColors && g.color(p);
      var d = g.addVertex(D(t[0][0], t[0][1]));
      for (a = 1; a < s; ++a) g.addVertex(D(t[a][0], t[a][1]));
      if (0.001 < j)
        for (s = e.length, a = 0; a < s; ++a)
          g.addTriangle(d + e[a][0], d + e[a][1], d + e[a][2]),
            3 < e[a].length &&
              g.addTriangle(d + e[a][0], d + e[a][2], d + e[a][3]);
      if (v && r) {
        if (f && g.hasVertexColors)
          for (
            s = t.length,
              g.color(f),
              d = g.addVertex(D(t[0][0], t[0][1])),
              a = 1;
            a < s;
            ++a
          )
            g.addVertex(D(t[a][0], t[a][1]));
        for (n = d, s = r.length, a = 0; a < s; ++a) {
          for (i = d + r[a], o = n + 1; o <= i; ++o) g.addLine(o - 1, o);
          g.addLine(i, n), (n = i + 1);
        }
      }
    }
    function T(t, e, r) {
      var n,
        i,
        a,
        o,
        s,
        d,
        l = t.length;
      for (s = g.addVertex(D(t[0][0], t[0][1])), a = 1; a < l; ++a)
        g.addVertex(D(t[a][0], t[a][1]));
      for (d = g.addVertex(M(t[0][0], t[0][1])), a = 1; a < l; ++a)
        g.addVertex(M(t[a][0], t[a][1]));
      for (l = e.length, a = 0; a < l; ++a)
        g.addTriangle(s + e[a][2], s + e[a][1], s + e[a][0]),
          3 < e[a].length &&
            g.addTriangle(s + e[a][3], s + e[a][2], s + e[a][0]),
          g.addTriangle(d + e[a][0], d + e[a][1], d + e[a][2]),
          3 < e[a].length &&
            g.addTriangle(d + e[a][0], d + e[a][2], d + e[a][3]);
      for (a = 0; a < l; ++a)
        g.addTriangle(s + e[a][2], s + e[a][1], s + e[a][0]),
          3 < e[a].length &&
            g.addTriangle(s + e[a][3], s + e[a][2], s + e[a][0]),
          g.addTriangle(d + e[a][0], d + e[a][1], d + e[a][2]),
          3 < e[a].length &&
            g.addTriangle(d + e[a][0], d + e[a][2], d + e[a][3]);
      if (r) {
        for (n = s, l = r.length, vtx_dif = d - s, a = 0; a < l; ++a) {
          for (i = s + r[a], o = n + 1; o <= i; ++o)
            g.addTriangle(o - 1, o, o + vtx_dif),
              g.addTriangle(o - 1, o + vtx_dif, o - 1 + vtx_dif);
          g.addTriangle(i, n, n + vtx_dif),
            g.addTriangle(i, n + vtx_dif, i + vtx_dif),
            (n = i + 1);
        }
        if (v) {
          for (n = s, a = 0; a < l; ++a) {
            for (i = s + r[a], o = n + 1; o <= i; ++o) g.addLine(o - 1, o);
            g.addLine(i, n), (n = i + 1);
          }
          for (n = d, a = 0; a < l; ++a) {
            for (i = d + r[a], o = n + 1; o <= i; ++o) g.addLine(o - 1, o);
            g.addLine(i, n), (n = i + 1);
          }
          for (a = 0; a < l; ++a)
            for (o = r[a]; 0 <= o; --o) g.addLine(o + s, o + d);
        }
      }
    }
    function w(t, e, r) {
      var n,
        i,
        a,
        o,
        s,
        d,
        l,
        h,
        u,
        c,
        p = t.length,
        f = [0, 0, -1],
        m = g.defaultNormal;
      for (
        b.applyVectorTransformToArray(f),
          g.defaultNormal = f.slice(),
          a = g.addVertex(D(t[0][0], t[0][1])),
          s = 1;
        s < p;
        ++s
      )
        g.addVertex(D(t[s][0], t[s][1]));
      for (
        pd3D.VectorArray.negate(f),
          g.defaultNormal = f.slice(),
          o = g.addVertex(M(t[0][0], t[0][1])),
          s = 1;
        s < p;
        ++s
      )
        g.addVertex(M(t[s][0], t[s][1]));
      for (p = e.length, s = 0; s < p; ++s)
        g.addTriangle(a + e[s][2], a + e[s][1], a + e[s][0]),
          3 < e[s].length &&
            g.addTriangle(a + e[s][3], a + e[s][2], a + e[s][0]),
          g.addTriangle(o + e[s][0], o + e[s][1], o + e[s][2]),
          3 < e[s].length &&
            g.addTriangle(o + e[s][0], o + e[s][2], o + e[s][3]);
      for (s = 0; s < p; ++s)
        g.addTriangle(a + e[s][2], a + e[s][1], a + e[s][0]),
          3 < e[s].length &&
            g.addTriangle(a + e[s][3], a + e[s][2], a + e[s][0]),
          g.addTriangle(o + e[s][0], o + e[s][1], o + e[s][2]),
          3 < e[s].length &&
            g.addTriangle(o + e[s][0], o + e[s][2], o + e[s][3]);
      if (r) {
        for (n = 0, p = r.length, s = 0; s < p; ++s) {
          for (i = r[s], d = n + 1; d <= i; ++d)
            (l = D(t[d - 1][0], t[d - 1][1])),
              (h = D(t[d][0], t[d][1])),
              (u = M(t[d][0], t[d][1])),
              (c = M(t[d - 1][0], t[d - 1][1])),
              pd3D.VectorArray.calcNormalFromTriangle(f, l, h, u),
              (g.defaultNormal = f.slice()),
              g.addTriangle(g.addVertex(l), g.addVertex(h), g.addVertex(u)),
              g.addTriangle(g.addVertex(l), g.addVertex(u), g.addVertex(c));
          (l = D(t[i][0], t[i][1])),
            (h = D(t[n][0], t[n][1])),
            (u = M(t[n][0], t[n][1])),
            (c = M(t[i][0], t[i][1])),
            pd3D.VectorArray.calcNormalFromTriangle(f, l, h, u),
            (g.defaultNormal = f.slice()),
            g.addTriangle(g.addVertex(l), g.addVertex(h), g.addVertex(u)),
            g.addTriangle(g.addVertex(l), g.addVertex(u), g.addVertex(c)),
            (n = i + 1);
        }
        if (v) {
          for (n = a, s = 0; s < p; ++s) {
            for (i = a + r[s], d = n + 1; d <= i; ++d) g.addLine(d - 1, d);
            g.addLine(i, n), (n = i + 1);
          }
          for (n = o, s = 0; s < p; ++s) {
            for (i = o + r[s], d = n + 1; d <= i; ++d) g.addLine(d - 1, d);
            g.addLine(i, n), (n = i + 1);
          }
          for (s = 0; s < p; ++s)
            for (d = r[s]; 0 <= d; --d) g.addLine(d + a, d + o);
        }
      }
      g.defaultNormal = m;
    }
    function A(t) {
      var e,
        r,
        n,
        i,
        a,
        o = t.length,
        s = !1,
        d = !1,
        l = !1,
        h = J,
        u = tt,
        c = 0;
      (ot = 0) < o && 97 <= (a = t.charCodeAt(0)) && a < 123 && (l = !0);
      for (var p = 0; p < o; p++) {
        (e = r = 0),
          (s = d),
          (d = l),
          (l =
            p < o - (i = Z = 1) && 97 <= (a = t.charCodeAt(p + 1)) && a < 123);
        t.charAt(p);
        switch (t.charAt(p)) {
          default:
            (n = 0.25 * $),
              (r = it[1] + pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.1)),
              at(
                [
                  [nt[0], it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[14]],
                  [nt[0], it[14]],
                  [nt[1], it[1]],
                  [nt[8], it[1]],
                  [nt[8], it[13]],
                  [nt[0], it[13]],
                ],
                [
                  [0, 1, 7, 4],
                  [1, 2, 6, 7],
                  [2, 3, 5, 6],
                  [3, 0, 4, 5],
                ],
                [3, 7]
              );
            break;
          case " ":
            i = et;
            break;
          case "\f":
            (c = veryClose(c, 0) ? 0.15 : 0), (J = h + c), (i = 0);
            break;
          case "!":
            (r = it[1] + pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.1)),
              at(
                [
                  [nt[0], it[0]],
                  [nt[1], it[0]],
                  [nt[1], it[1]],
                  [nt[0], it[1]],
                  [nt[0], r],
                  [nt[1], r],
                  [nt[1], it[14]],
                  [nt[0], it[14]],
                ],
                [
                  [0, 1, 2, 3],
                  [4, 5, 6, 7],
                ],
                [3, 7]
              ),
              (i = j / $);
            break;
          case '"':
            (n = nt[1] + 0.1),
              at(
                [
                  [nt[0], it[13]],
                  [nt[0] + K, it[13] - j],
                  [nt[1], it[13]],
                  [nt[1], it[14]],
                  [nt[0], it[14]],
                  [n, it[13]],
                  [n + K, it[13] - j],
                  [n + j, it[13]],
                  [n + j, it[14]],
                  [n, it[14]],
                ],
                [
                  [0, 1, 2],
                  [0, 2, 3, 4],
                  [5, 6, 7],
                  [6, 7, 8, 9],
                ],
                [4, 9]
              ),
              (i = (j / $) * 2 + 0.1);
            break;
          case "'":
            at(
              [
                [nt[0], it[13]],
                [nt[0] + K, it[13] - j],
                [nt[1], it[13]],
                [nt[1], it[14]],
                [nt[0], it[14]],
              ],
              [
                [0, 1, 2],
                [0, 2, 3, 4],
              ],
              [4]
            ),
              (i = j / $);
            break;
          case "#":
            (e = pd.mapAndConstrainTo($, 0, 5, 0, 0.2 * $)),
              (r = pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.05));
            var f = 0.3 * $,
              m = Math.atan(1 / f),
              g = j / Math.sin(m),
              v = Math.cos(m),
              y = it[7] - r,
              b = it[7] - r - j,
              D = it[7] + r + j,
              M = it[7] + r,
              x = y * v,
              T = b * v,
              w = D * v,
              A = M * v,
              O = it[14] * v,
              V = pd.mapAndConstrainTo($, 0, 2, 0, e + r),
              C = nt[0] + e,
              S = nt[0] + V,
              k = nt[9] - V - O - g,
              N = nt[9] - e;
            at(
              [
                [S, it[0]],
                [S + g, it[0]],
                [S + T + g, b],
                [k + T, b],
                [k, it[0]],
                [k + g, it[0]],
                [k + T + g, b],
                [N, b],
                [N, y],
                [k + x + g, y],
                [k + A + g, M],
                [N, M],
                [N, D],
                [k + w + g, D],
                [k + O + g, it[14]],
                [k + O, it[14]],
                [k + w, D],
                [S + w + g, D],
                [S + O + g, it[14]],
                [S + O, it[14]],
                [S + w, D],
                [C, D],
                [C, M],
                [S + A, M],
                [S + x, y],
                [C, y],
                [C, b],
                [S + T, b],
                [S + x + g, y],
                [S + A + g, M],
                [k + A, M],
                [k + x, y],
              ],
              [
                [0, 1, 2, 27],
                [3, 4, 5, 6],
                [9, 10, 30, 31],
                [13, 14, 15, 16],
                [17, 18, 19, 20],
                [23, 24, 28, 29],
                [26, 7, 8, 25],
                [22, 11, 12, 21],
              ],
              [27, 31]
            );
            break;
          case "$":
            at(
              [
                [nt[2], it[0]],
                [nt[4], it[0]],
                [nt[4], it[0] - 0.2],
                [nt[5], it[0] - 0.2],
                [nt[5], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[7], it[8]],
                [nt[3], it[8]],
                [nt[1], it[10]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[9], it[11]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[5], it[14]],
                [nt[5], it[14] + 0.2],
                [nt[4], it[14] + 0.2],
                [nt[4], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[9]],
                [nt[2], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[0], it[3]],
                [nt[0], it[2]],
              ],
              [
                [0, 5, 29, 30],
                [5, 6, 28, 29],
                [6, 7, 27, 28],
                [7, 8, 26, 27],
                [8, 9, 25, 26],
                [9, 10, 24, 25],
                [10, 11, 23, 24],
                [11, 12, 22, 23],
                [12, 13, 17, 22],
                [13, 14, 16, 17],
                [14, 15, 16],
                [30, 31, 33, 0],
                [31, 32, 33],
                [1, 2, 3, 4],
                [18, 19, 20, 21],
              ],
              [33]
            );
            break;
          case "%":
            var I = Math.min(0.15, j),
              E = pd.mapAndConstrainTo(j, 0, 0.2, 0.05, 0.15);
            (n = nt[9] - 1.5 * E),
              (r = (e = K / Math.sin(Math.atan(1 / $))) / $),
              at(
                [
                  [nt[0], it[0]],
                  [nt[0] + e, it[0]],
                  [nt[9], it[14] - r],
                  [nt[9], it[14]],
                  [nt[9] - e, it[14]],
                  [nt[0], it[0] + r],
                  [n - (e = 1.5 * E), (r = it[0] + 1.5 * E) - e],
                  [n + e, r - e],
                  [n + e, r + e],
                  [n - e, r + e],
                  [n - (e -= I), r - e],
                  [n - e, r + e],
                  [n + e, r + e],
                  [n + e, r - e],
                  [
                    (n = nt[0] + 1.5 * E) - (e = 1.5 * E),
                    (r = it[14] - 1.5 * E) - e,
                  ],
                  [n + e, r - e],
                  [n + e, r + e],
                  [n - e, r + e],
                  [n - (e -= I), r - e],
                  [n - e, r + e],
                  [n + e, r + e],
                  [n + e, r - e],
                ],
                [
                  [0, 1, 5],
                  [1, 2, 4, 5],
                  [2, 3, 4],
                  [6, 7, 13, 10],
                  [7, 8, 12, 13],
                  [8, 9, 11, 12],
                  [9, 6, 10, 11],
                  [14, 15, 21, 18],
                  [15, 16, 20, 21],
                  [16, 17, 19, 20],
                  [17, 14, 18, 19],
                ],
                [5, 9, 13, 17, 21]
              );
            break;
          case "&":
            (n = nt[4]),
              (e = Math.min(nt[4] - 0.05, nt[0] + Math.max(0, it[9] - 0.5))),
              at(
                [
                  [n, it[0] - 0.2],
                  [n + j, it[0] - 0.2],
                  [n + j, it[0]],
                  [nt[7], it[0]],
                  [nt[9], it[2]],
                  [nt[9], it[3]],
                  [nt[8], it[3]],
                  [nt[6], it[1]],
                  [n + j, it[1]],
                  [n + j, it[6]],
                  [nt[6], it[6]],
                  [nt[6], it[8]],
                  [n + j, it[8]],
                  [n + j, it[13]],
                  [nt[6] - e, it[13]],
                  [nt[8] - e, it[11]],
                  [nt[9] - e, it[11]],
                  [nt[9] - e, it[12]],
                  [nt[7] - e, it[14]],
                  [n + j, it[14]],
                  [n + j, it[14] + 0.2],
                  [n, it[14] + 0.2],
                  [n, it[14]],
                  [nt[2] + e, it[14]],
                  [nt[0] + e, it[12]],
                  [nt[0] + e, it[7]],
                  [nt[0], it[5]],
                  [nt[0], it[2]],
                  [nt[2], it[0]],
                  [n, it[0]],
                  [nt[3], it[1]],
                  [nt[1], it[3]],
                  [nt[1], it[4]],
                  [nt[3], it[6]],
                  [n, it[6]],
                  [n, it[1]],
                  [nt[3], it[8]],
                  [nt[1] + e, it[11]],
                  [nt[3] + e, it[13]],
                  [n, it[13]],
                  [n, it[8]],
                ],
                [
                  [0, 1, 20, 21],
                  [2, 3, 7, 8],
                  [3, 4, 6, 7],
                  [4, 5, 6],
                  [9, 10, 11, 12],
                  [13, 14, 18, 19],
                  [14, 15, 17, 18],
                  [15, 16, 17],
                  [22, 23, 38, 39],
                  [23, 24, 37, 38],
                  [24, 25, 36, 37],
                  [25, 33, 36],
                  [33, 34, 40, 36],
                  [25, 26, 32, 33],
                  [26, 27, 31, 32],
                  [27, 28, 30, 31],
                  [28, 29, 35, 30],
                ],
                [29, 35, 40]
              );
            break;
          case "(":
            (e = (r = 0.2) * $),
              at(
                [
                  [nt[1] + e, it[0] - r],
                  [nt[1], it[2]],
                  [nt[1], it[12]],
                  [nt[1] + e, it[14] + r],
                  [nt[0], it[12]],
                  [nt[0], it[2]],
                ],
                [
                  [0, 1, 5],
                  [1, 2, 4, 5],
                  [2, 3, 4],
                ],
                [5]
              ),
              (i = j / $ + 0.2);
            break;
          case ")":
            (r = 0.2),
              (e = nt[1] - nt[0]),
              (n = nt[1] + 0.2 * $),
              at(
                [
                  [nt[0], it[0] - r],
                  [n, it[2]],
                  [n, it[12]],
                  [nt[0], it[14] + r],
                  [n - e, it[12]],
                  [n - e, it[2]],
                ],
                [
                  [0, 1, 5],
                  [1, 2, 4, 5],
                  [2, 3, 4],
                ],
                [5]
              ),
              (i = j / $ + 0.2);
            break;
          case "*":
            var _ = pd.mapAndConstrainTo(j, 0.1, 0.3, 0.1, it[0]),
              P = pd.mapAndConstrainTo(j, 0.1, 0.3, 0.9, it[14]),
              L = pd.mapAndConstrainTo($, 0, 5, 0, 0.2 * $),
              R = nt[9] - L,
              F = nt[0] + L;
            m = Math.atan((R - F) / ((P - _) * $));
            (e = K / Math.sin(m)),
              (r = K / Math.cos(m)),
              at(
                [
                  [nt[4], _],
                  [nt[5], _],
                  [nt[5], it[6] - r],
                  [R - e, _],
                  [R, _],
                  [R, _ + r],
                  [nt[5] + e, it[6]],
                  [R, it[6]],
                  [R, it[8]],
                  [nt[5] + e, it[8]],
                  [R, P - r],
                  [R, P],
                  [R - e, P],
                  [nt[5], it[8] + r],
                  [nt[5], P],
                  [nt[4], P],
                  [nt[4], it[8] + r],
                  [F + e, P],
                  [F, P],
                  [F, P - r],
                  [nt[4] - e, it[8]],
                  [F, it[8]],
                  [F, it[6]],
                  [nt[4] - e, it[6]],
                  [F, _ + r],
                  [F, _],
                  [F + e, _],
                  [nt[4], it[6] - r],
                ],
                [
                  [0, 1, 2, 27],
                  [2, 3, 5, 6],
                  [3, 4, 5],
                  [6, 7, 8, 9],
                  [9, 10, 12, 13],
                  [10, 11, 12],
                  [13, 14, 15, 16],
                  [16, 17, 19, 20],
                  [17, 18, 19],
                  [20, 21, 22, 23],
                  [23, 24, 26, 27],
                  [24, 25, 26],
                  [27, 16, 20, 23],
                  [2, 13, 16, 27],
                  [2, 6, 9, 13],
                ],
                [27]
              );
            break;
          case "+":
            (_ = pd.mapAndConstrainTo(j, 0.1, 0.3, 0.1, it[0])),
              (P = pd.mapAndConstrainTo(j, 0.1, 0.3, 0.9, it[14]));
            (e = pd.mapAndConstrainTo($, 0, 5, 0, 0.2 * $)),
              at(
                [
                  [nt[4], _],
                  [nt[5], _],
                  [nt[5], it[6]],
                  [(n = nt[9] - e), it[6]],
                  [n, it[8]],
                  [nt[5], it[8]],
                  [nt[5], P],
                  [nt[4], P],
                  [nt[4], it[8]],
                  [(n = nt[0] + e), it[8]],
                  [n, it[6]],
                  [nt[4], it[6]],
                ],
                [
                  [1, 6, 7, 0],
                  [2, 3, 4, 5],
                  [8, 9, 10, 11],
                ],
                [11]
              );
            break;
          case "-":
            (e = pd.mapAndConstrainTo($, 0, 5, 0.1 * $, 0.3 * $)),
              at(
                [
                  [nt[0] + e, it[6]],
                  [(n = nt[9] - e), it[6]],
                  [n, it[8]],
                  [nt[0] + e, it[8]],
                ],
                [[0, 1, 2, 3]],
                [3]
              );
            break;
          case ",":
            (n = K),
              (r = it[1] + pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.1)),
              (s || l) && (Z = X),
              at(
                [
                  [nt[0], it[0]],
                  [nt[0] + K, it[0]],
                  [nt[0] + K, it[0] - j],
                  [nt[1], it[0]],
                  [nt[1], it[1]],
                  [nt[0], it[1]],
                ],
                [
                  [0, 3, 4, 5],
                  [1, 2, 3],
                ],
                [5]
              ),
              (i = j / $);
            break;
          case ".":
            (n = 0.25 * $),
              (r = it[1] + pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.1)),
              (s || l) && (Z = X),
              at(
                [
                  [nt[0], it[0]],
                  [it[1], it[0]],
                  [nt[1], it[1]],
                  [nt[0], it[1]],
                ],
                [[0, 1, 2, 3]],
                [3]
              ),
              (i = j / $);
            break;
          case "/":
            (r = (e = K / Math.sin(Math.atan(1 / $))) / $),
              at(
                [
                  [nt[0], it[0] - 0.2],
                  [nt[0] + e, it[0] - 0.2],
                  [nt[9], it[14] + 0.2 - r],
                  [nt[9], it[14] + 0.2],
                  [nt[9] - e, it[14] + 0.2],
                  [nt[0], it[0] - 0.2 + r],
                ],
                [
                  [0, 1, 5],
                  [1, 2, 4, 5],
                  [2, 3, 4],
                ],
                [5]
              );
            break;
          case "0":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[8], it[11] - j],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[1], it[3] + j],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
              ],
              [
                [0, 1, 12, 8],
                [1, 2, 11, 12],
                [2, 3, 17, 11],
                [3, 4, 16, 17],
                [4, 5, 15, 16],
                [5, 6, 14, 15],
                [6, 7, 9, 14],
                [7, 0, 8, 9],
                [9, 10, 17, 13],
              ],
              [7, 12, 17]
            );
            break;
          case "1":
            at(
              [
                [(e = 0.25 * $ - K), (r = it[0])],
                [(e += j), r],
                [e, (r = it[14])],
                [(e -= j), r],
                [(e -= j), (r = it[13])],
                [(e += j), r],
              ],
              [
                [0, 1, 2, 3],
                [3, 4, 5],
              ],
              [5]
            ),
              (i = 0.5);
            break;
          case "2":
            at(
              [
                [nt[0], it[0]],
                [nt[9], it[0]],
                [nt[9], it[1]],
                [nt[1], it[1]],
                [nt[1], it[4]],
                [nt[3], it[6]],
                [nt[7], it[6]],
                [nt[9], it[9]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[11]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[10]],
                [nt[6], it[8]],
                [nt[2], it[8]],
                [nt[0], it[5]],
              ],
              [
                [0, 1, 2, 3],
                [3, 4, 20, 0],
                [4, 5, 19, 20],
                [5, 6, 18, 19],
                [6, 7, 17, 18],
                [7, 8, 16, 17],
                [8, 9, 15, 16],
                [9, 10, 14, 15],
                [10, 11, 13, 14],
                [11, 12, 13],
              ],
              [20]
            );
            break;
          case "3":
            at(
              [
                [nt[0], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[9] - Math.max(0, it[9] - 0.5), it[7]],
                [nt[9], it[9]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[0], it[14]],
                [nt[0] + nt[10], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[10]],
                [nt[6], it[8]],
                [0.5 * $, it[8]],
                [0.5 * $, it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[0] + nt[10], it[1]],
              ],
              [
                [0, 1, 19, 20],
                [1, 2, 18, 19],
                [2, 3, 17, 18],
                [3, 4, 16, 17],
                [4, 13, 16],
                [13, 14, 15, 16],
                [4, 5, 12, 13],
                [5, 6, 11, 12],
                [6, 7, 10, 11],
                [7, 8, 9, 10],
              ],
              [20]
            );
            break;
          case "4":
            (n = 0.7 * $),
              (e = j / Math.sin(Math.atan(1 / $))),
              (r = j / $),
              at(
                [
                  [n - K, it[0]],
                  [n + K, it[0]],
                  [n + K, 0.35 - K],
                  [nt[9], 0.35 - K],
                  [nt[9], 0.35 + K],
                  [n + K, 0.35 + K],
                  [n + K, it[14]],
                  [n + K - e, it[14]],
                  [nt[0], 0.35 + K],
                  [nt[0], 0.35 - K],
                  [n - K, 0.35 - K],
                  [nt[0] + e, 0.35 + K],
                  [n - K, it[14] - r],
                  [n - K, 0.35 + K],
                ],
                [
                  [0, 1, 6, 12],
                  [7, 8, 11, 6],
                  [9, 10, 13, 8],
                  [2, 3, 4, 5],
                ],
                [10, 13]
              );
            break;
          case "5":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[7], it[8]],
                [nt[1], it[8]],
                [nt[1], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[0], it[14]],
                [nt[0], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[0], it[3]],
                [nt[0], it[2]],
              ],
              [
                [0, 1, 14, 15],
                [1, 2, 13, 14],
                [2, 3, 12, 13],
                [3, 4, 11, 12],
                [4, 5, 10, 11],
                [5, 6, 9, 10],
                [6, 7, 8, 9],
                [0, 15, 16, 18],
                [16, 17, 18],
              ],
              [18]
            );
            break;
          case "6":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[7], it[8]],
                [nt[1], it[8]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
              ],
              [
                [0, 1, 19, 13],
                [1, 2, 18, 19],
                [2, 3, 17, 18],
                [3, 4, 16, 17],
                [4, 5, 15, 16],
                [0, 13, 14, 12],
                [12, 14, 6, 11],
                [6, 7, 10, 11],
                [7, 8, 9, 10],
              ],
              [12, 19]
            );
            break;
          case "7":
            at(
              [
                [nt[8] - Q, it[0]],
                [nt[9] - Q, it[0]],
                [nt[9], it[14]],
                [nt[0], it[14]],
                [nt[0] + nt[10], it[13]],
                [nt[8], it[13]],
              ],
              [
                [0, 1, 2, 5],
                [2, 3, 4, 5],
              ],
              [5]
            );
            break;
          case "8":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[9] - Math.max(0, it[9] - 0.5), it[7]],
                [nt[9], it[9]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[9]],
                [nt[0] + Math.max(0, it[9] - 0.5), it[7]],
                [nt[0], it[5]],
                [nt[0], it[2]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[4]],
                [nt[3], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[8]],
                [nt[1], it[10]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[10]],
                [nt[6], it[8]],
              ],
              [
                [0, 1, 21, 14],
                [1, 2, 20, 21],
                [2, 3, 19, 20],
                [3, 4, 18, 19],
                [4, 29, 18],
                [18, 29, 22, 17],
                [4, 5, 28, 29],
                [5, 6, 27, 28],
                [6, 7, 26, 27],
                [7, 8, 25, 26],
                [8, 9, 24, 25],
                [9, 10, 23, 24],
                [10, 11, 22, 23],
                [11, 17, 22],
                [11, 12, 16, 17],
                [12, 13, 15, 16],
                [13, 0, 14, 15],
              ],
              [13, 21, 29]
            );
            break;
          case "9":
            at(
              [
                [nt[0], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[9]],
                [nt[2], it[6]],
                [nt[8], it[6]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[0] + nt[10], it[1]],
                [nt[3], it[8]],
                [nt[1], it[10]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[8]],
              ],
              [
                [0, 1, 11, 12],
                [1, 2, 10, 11],
                [2, 3, 18, 10],
                [3, 4, 17, 18],
                [4, 5, 16, 17],
                [5, 6, 15, 16],
                [6, 7, 14, 15],
                [7, 8, 13, 14],
                [8, 9, 19, 13],
              ],
              [12, 19]
            );
            break;
          case ":":
            (r = pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.05)),
              (s || l) && (Z = X),
              at(
                [
                  [nt[0], it[7] - r - j],
                  [nt[1], it[7] - r - j],
                  [nt[1], it[7] - r],
                  [nt[0], it[7] - r],
                  [nt[0], it[7] + r],
                  [nt[1], it[7] + r],
                  [nt[1], it[7] + r + j],
                  [nt[0], it[7] + r + j],
                ],
                [
                  [0, 1, 2, 3],
                  [4, 5, 6, 7],
                ],
                [3, 7]
              ),
              (i = j / $);
            break;
          case ";":
            (r = pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.05)),
              (s || l) && (Z = X),
              at(
                [
                  [nt[0], it[7] - r - j],
                  [nt[0] + K, it[7] - r - j],
                  [nt[0] + K, it[7] - r - j - j],
                  [nt[1], it[7] - r - j],
                  [nt[1], it[7] - r],
                  [nt[0], it[7] - r],
                  [nt[0], it[7] + r],
                  [nt[1], it[7] + r],
                  [nt[1], it[7] + r + j],
                  [nt[0], it[7] + r + j],
                ],
                [
                  [0, 3, 4, 5],
                  [1, 2, 3],
                  [6, 7, 8, 9],
                ],
                [5, 9]
              ),
              (i = j / $);
            break;
          case "<":
            (e = j / Math.sin(Math.atan(1 / $))),
              at(
                [
                  [(k = 0.75 * $ - (r = 0.5 * e)), 0.1],
                  [k + e, 0.1],
                  [(S = 0.25 * $ - r) + e, 0.5],
                  [k + e, 0.9],
                  [k, 0.9],
                  [S, 0.5],
                ],
                [
                  [1, 2, 5, 0],
                  [2, 3, 4, 5],
                ],
                [5]
              );
            break;
          case "=":
            (e = pd.mapAndConstrainTo($, 0, 5, 0, 0.2 * $)),
              (r = pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.05)),
              at(
                [
                  [nt[0] + e, it[7] - r - j],
                  [(n = nt[9] - e), it[7] - r - j],
                  [n, it[7] - r],
                  [(n = nt[0] + e), it[7] - r],
                  [n, it[7] + r],
                  [(n = nt[9] - e), it[7] + r],
                  [n, it[7] + r + j],
                  [nt[0] + e, it[7] + r + j],
                ],
                [
                  [0, 1, 2, 3],
                  [4, 5, 6, 7],
                ],
                [3, 7]
              );
            break;
          case ">":
            (e = j / Math.sin(Math.atan(1 / $))),
              at(
                [
                  [(S = 0.25 * $ - (r = 0.5 * e)), 0.1],
                  [S + e, 0.1],
                  [(k = 0.75 * $ - r) + e, 0.5],
                  [S + e, 0.9],
                  [S, 0.9],
                  [k, 0.5],
                ],
                [
                  [1, 2, 5, 0],
                  [2, 3, 4, 5],
                ],
                [5]
              );
            break;
          case "?":
            (r = Math.min(
              it[6],
              it[1] + pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.1)
            )),
              at(
                [
                  [nt[4], it[0]],
                  [nt[5], it[0]],
                  [nt[5], it[1]],
                  [nt[4], it[1]],
                  [nt[4], r],
                  [nt[5], r],
                  [nt[5], it[6]],
                  [nt[7], it[6]],
                  [nt[9], it[9]],
                  [nt[9], it[12]],
                  [nt[7], it[14]],
                  [nt[2], it[14]],
                  [nt[0], it[12]],
                  [nt[0], it[11]],
                  [nt[1], it[11]],
                  [nt[3], it[13]],
                  [nt[6], it[13]],
                  [nt[8], it[11]],
                  [nt[8], it[10]],
                  [nt[6], it[8]],
                  [nt[4], it[8]],
                ],
                [
                  [0, 1, 2, 3],
                  [4, 5, 6, 20],
                  [6, 7, 19, 20],
                  [7, 8, 18, 19],
                  [8, 9, 17, 18],
                  [9, 10, 16, 17],
                  [10, 11, 15, 16],
                  [11, 12, 14, 15],
                  [12, 13, 14],
                ],
                [3, 20]
              );
            break;
          case "@":
            (n = 0.5 * $), (r = pd.mapAndConstrainTo(j, 0, 0.3, 0.2, 0.05));
            var z = Math.min(n, nt[1] + r + j),
              B = Math.max(n, nt[8] - r - j),
              Y = Math.min(it[7], it[1] + r + j),
              U = Math.max(it[7], it[13] - r - j);
            at(
              [
                [nt[2], it[0]],
                [nt[9], it[0]],
                [nt[9] - nt[10], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[1] + r + j],
                [B + j, Y],
                [B + j, U + j],
                [z - j, U + j],
                [z - j, Y - j],
                [nt[9], Y - j],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
                [z, Y],
                [z, U],
                [B, U],
                [B, Y],
              ],
              [
                [0, 1, 2, 3],
                [3, 4, 19, 0],
                [4, 5, 18, 19],
                [5, 6, 17, 18],
                [6, 7, 16, 17],
                [7, 8, 15, 16],
                [8, 9, 14, 15],
                [9, 20, 13, 14],
                [10, 11, 22, 23],
                [11, 12, 21, 22],
                [12, 13, 20, 21],
              ],
              [19, 23]
            );
            break;
          case "a":
            Z = X;
          case "A":
            at(
              [
                [nt[0], it[0]],
                [nt[1], it[0]],
                [nt[1], it[6]],
                [nt[8], it[6]],
                [nt[8], it[0]],
                [nt[9], it[0]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[1], it[8]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[8]],
              ],
              [
                [4, 5, 6, 14],
                [6, 7, 13, 14],
                [7, 8, 12, 13],
                [8, 9, 11, 12],
                [9, 0, 1, 11],
                [2, 3, 15, 10],
              ],
              [9, 15]
            );
            break;
          case "b":
            Z = X;
          case "B":
            at(
              [
                [nt[0], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[9] - Math.max(0, it[9] - 0.5), it[7]],
                [nt[9], it[9]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[0], it[14]],
                [nt[1], it[1]],
                [nt[1], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[1], it[8]],
                [nt[1], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[10]],
                [nt[6], it[8]],
              ],
              [
                [0, 1, 14, 9],
                [1, 2, 13, 14],
                [2, 3, 12, 13],
                [3, 4, 11, 12],
                [4, 20, 11],
                [4, 5, 19, 20],
                [5, 6, 18, 19],
                [6, 7, 17, 18],
                [7, 8, 16, 17],
                [8, 0, 9, 16],
                [10, 11, 20, 15],
              ],
              [8, 14, 20]
            );
            break;
          case "c":
            Z = X;
          case "C":
            at(
              [
                [nt[2], it[0]],
                [nt[9], it[0]],
                [nt[9] - nt[10], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
              ],
              [
                [2, 3, 0, 1],
                [3, 4, 11, 0],
                [4, 5, 10, 11],
                [5, 6, 9, 10],
                [6, 7, 8, 9],
              ],
              [11]
            );
            break;
          case "d":
            Z = X;
          case "D":
            at(
              [
                [nt[0], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[0], it[14]],
                [nt[1], it[1]],
                [nt[1], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[3]],
                [nt[6], it[1]],
              ],
              [
                [0, 1, 11, 6],
                [1, 2, 10, 11],
                [2, 3, 9, 10],
                [3, 4, 8, 9],
                [4, 5, 7, 8],
                [5, 0, 6, 7],
              ],
              [5, 11]
            );
            break;
          case "e":
            Z = X;
          case "E":
            at(
              [
                [nt[0], it[0]],
                [nt[9], it[0]],
                [nt[9] - nt[10], it[1]],
                [nt[1], it[1]],
                [nt[1], it[6]],
                [nt[5], it[6]],
                [nt[5], it[8]],
                [nt[1], it[8]],
                [nt[1], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[0], it[14]],
              ],
              [
                [2, 3, 0, 1],
                [3, 8, 11, 0],
                [8, 9, 10, 11],
                [4, 5, 6, 7],
              ],
              [11]
            );
            break;
          case "f":
            Z = X;
          case "F":
            at(
              [
                [nt[0], it[0]],
                [nt[1], it[0]],
                [nt[1], it[6]],
                [nt[5], it[6]],
                [nt[5], it[8]],
                [nt[1], it[8]],
                [nt[1], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[0], it[14]],
              ],
              [
                [0, 1, 6, 9],
                [6, 7, 8, 9],
                [2, 3, 4, 5],
              ],
              [9]
            );
            break;
          case "g":
            Z = X;
          case "G":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[8]],
                [Math.min(nt[8], nt[5]), it[8]],
                [Math.min(nt[8], nt[5]), it[6]],
                [nt[8], it[6]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[9] - nt[10], it[13]],
                [nt[9], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
              ],
              [
                [0, 1, 8, 9],
                [1, 2, 7, 8],
                [2, 3, 6, 7],
                [3, 4, 5, 6],
                [9, 10, 17, 0],
                [10, 11, 16, 17],
                [11, 12, 15, 16],
                [12, 13, 14, 15],
              ],
              [17]
            );
            break;
          case "h":
            Z = X;
          case "H":
            at(
              [
                [nt[0], it[0]],
                [nt[1], it[0]],
                [nt[1], it[6]],
                [nt[8], it[6]],
                [nt[8], it[0]],
                [nt[9], it[0]],
                [nt[9], it[14]],
                [nt[8], it[14]],
                [nt[8], it[8]],
                [nt[1], it[8]],
                [nt[1], it[14]],
                [nt[0], it[14]],
              ],
              [
                [0, 1, 10, 11],
                [2, 3, 8, 9],
                [4, 5, 6, 7],
              ],
              [11]
            );
            break;
          case "i":
            Z = X;
          case "I":
            (n = 0.5 * Math.max(0.5 * $, 1.25 * j)),
              (r = Math.min(0.5 * (n - K), j)),
              at(
                [
                  [(e = n - K - r), it[0]],
                  [(e += j + r + r), it[0]],
                  [e, it[1]],
                  [(e -= r), it[1]],
                  [e, it[13]],
                  [(e += r), it[13]],
                  [e, it[14]],
                  [(e -= j + r + r), it[14]],
                  [e, it[13]],
                  [(e += r), it[13]],
                  [e, it[1]],
                  [(e -= r), it[1]],
                ],
                [
                  [0, 1, 2, 11],
                  [3, 4, 9, 10],
                  [6, 7, 8, 5],
                ],
                [11]
              ),
              (i = Math.max(0.5, (1.25 * j) / $));
            break;
          case "j":
            Z = X;
          case "J":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[14]],
                [nt[4], it[14]],
                [nt[4], it[13]],
                [nt[8], it[13]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[0], it[3]],
                [nt[0], it[2]],
              ],
              [
                [0, 1, 8, 9],
                [1, 2, 7, 8],
                [2, 3, 6, 7],
                [3, 4, 5, 6],
                [9, 10, 12, 0],
                [10, 11, 12],
              ],
              [12]
            );
            break;
          case "k":
            Z = X;
          case "K":
            var H = 0.5 / ($ - (n = 0.5 * $));
            (e = j / Math.sin(Math.atan(H))),
              (r = (0.5 - K) / H),
              nt[9] - e - r < nt[1] &&
                ((n = nt[1] + (e - j / (2 * H))), (r = nt[9] - e - nt[1])),
              at(
                [
                  [nt[0], it[0]],
                  [nt[1], it[0]],
                  [nt[1], it[6]],
                  [nt[9] - e - r, it[6]],
                  [Math.max(nt[1], nt[9] - e), it[0]],
                  [nt[9], it[0]],
                  [n, it[7]],
                  [nt[9], it[14]],
                  [Math.max(nt[1], nt[9] - e), it[14]],
                  [nt[9] - e - r, it[8]],
                  [nt[1], it[8]],
                  [nt[1], it[14]],
                  [nt[0], it[14]],
                ],
                [
                  [0, 1, 11, 12],
                  [2, 3, 9, 10],
                  [3, 6, 9],
                  [3, 4, 5, 6],
                  [6, 7, 8, 9],
                ],
                [12]
              );
            break;
          case "l":
            Z = X;
          case "L":
            at(
              [
                [nt[0], it[0]],
                [nt[9], it[0]],
                [nt[9] - nt[10], it[1]],
                [nt[1], it[1]],
                [nt[1], it[14]],
                [nt[0], it[14]],
              ],
              [
                [0, 1, 2, 3],
                [3, 4, 5, 0],
              ],
              [5]
            );
            break;
          case "m":
            Z = X;
          case "M":
            (n = 0.5 * $),
              (e = Math.atan((n - j) / (0.5 - K))),
              (r = pd.constrainTo(j / Math.sin(e), 0, 0.75)),
              at(
                [
                  [nt[0], it[0]],
                  [nt[1], it[0]],
                  [nt[1], it[14] - r],
                  [n, it[8] > r ? it[8] - r : it[0]],
                  [nt[8], it[14] - r],
                  [nt[8], it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[14]],
                  [nt[8], it[14]],
                  [n, it[8] > r ? it[8] : it[0] + r],
                  [nt[1], it[14]],
                  [nt[0], it[14]],
                ],
                [
                  [1, 10, 11, 0],
                  [2, 3, 9, 10],
                  [3, 4, 8, 9],
                  [8, 5, 6, 7],
                ],
                [11]
              );
            break;
          case "n":
            Z = X;
          case "N":
            (e = Math.atan(1 / $)),
              (r = j / Math.cos(e)),
              at(
                [
                  [nt[0], it[0]],
                  [nt[1], it[0]],
                  [nt[1], it[14] - r],
                  [nt[8], it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[14]],
                  [nt[8], it[14]],
                  [nt[8], it[0] + r],
                  [nt[1], it[14]],
                  [nt[0], it[14]],
                ],
                [
                  [1, 8, 9, 0],
                  [2, 3, 7, 8],
                  [4, 5, 6, 3],
                ],
                [9]
              );
            break;
          case "o":
            Z = X;
          case "O":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[2]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[3]],
                [nt[6], it[1]],
              ],
              [
                [0, 1, 15, 8],
                [1, 2, 14, 15],
                [2, 3, 13, 14],
                [3, 4, 12, 13],
                [4, 5, 11, 12],
                [5, 6, 10, 11],
                [6, 7, 9, 10],
                [7, 0, 8, 9],
              ],
              [7, 15]
            );
            break;
          case "p":
            Z = X;
          case "P":
            at(
              [
                [nt[0], it[0]],
                [nt[1], it[0]],
                [nt[1], it[6]],
                [nt[7], it[6]],
                [nt[9], it[9]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[0], it[14]],
                [nt[1], it[8]],
                [nt[1], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[8], it[10]],
                [nt[6], it[8]],
              ],
              [
                [0, 1, 9, 7],
                [2, 3, 13, 8],
                [3, 4, 12, 13],
                [4, 5, 11, 12],
                [5, 6, 10, 11],
                [6, 7, 9, 10],
              ],
              [7, 13]
            );
            break;
          case "q":
            Z = X;
          case "Q":
            (e = 0.1 * $),
              at(
                [
                  [nt[2], it[0]],
                  [nt[9], it[0]],
                  [Math.max(nt[9] - e, nt[9] - nt[10]), it[1]],
                  [nt[9] - e, it[1]],
                  [nt[9] - e, it[12]],
                  [nt[7] - e, it[14]],
                  [nt[2], it[14]],
                  [nt[0], it[12]],
                  [nt[0], it[2]],
                  [nt[3], it[1]],
                  [nt[1], it[3]],
                  [nt[1], it[11]],
                  [nt[3], it[13]],
                  [nt[6] - e, it[13]],
                  [nt[8] - e, it[11]],
                  [nt[8] - e, it[1]],
                ],
                [
                  [0, 1, 2, 9],
                  [3, 4, 14, 15],
                  [4, 5, 13, 14],
                  [5, 6, 12, 13],
                  [6, 7, 11, 12],
                  [7, 8, 10, 11],
                  [8, 0, 9, 10],
                ],
                [8, 15]
              );
            break;
          case "r":
            Z = X;
          case "R":
            H = (0.5 - K) / ($ - (n = 0.6 * $ + K));
            (e = j / Math.sin(Math.atan(H))),
              (r = (0.5 - K) / H),
              nt[9] - e - r < nt[1] &&
                ((n = nt[1] + (e - j / (2 * H))), (r = nt[9] - e - nt[1])),
              at(
                [
                  [nt[0], it[0]],
                  [nt[1], it[0]],
                  [nt[1], it[6]],
                  [Math.max(nt[1], n - e), it[6]],
                  [Math.max(nt[1], nt[9] - e), it[0]],
                  [nt[9], it[0]],
                  [n > nt[7] ? nt[7] : n, it[6]],
                  [nt[7], it[6]],
                  [nt[9], it[9]],
                  [nt[9], it[12]],
                  [nt[7], it[14]],
                  [nt[0], it[14]],
                  [nt[1], it[8]],
                  [nt[1], it[13]],
                  [nt[6], it[13]],
                  [nt[8], it[11]],
                  [nt[8], it[10]],
                  [nt[6], it[8]],
                ],
                [
                  [0, 1, 13, 11],
                  [2, 7, 17, 12],
                  [3, 4, 5, 6],
                  [7, 8, 16, 17],
                  [8, 9, 15, 16],
                  [9, 10, 14, 15],
                  [10, 11, 13, 14],
                ],
                [11, 17]
              );
            break;
          case "s":
            Z = X;
          case "S":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[5]],
                [nt[7], it[8]],
                [nt[3], it[8]],
                [nt[1], it[10]],
                [nt[1], it[11]],
                [nt[3], it[13]],
                [nt[6], it[13]],
                [nt[8], it[11]],
                [nt[9], it[11]],
                [nt[9], it[12]],
                [nt[7], it[14]],
                [nt[2], it[14]],
                [nt[0], it[12]],
                [nt[0], it[9]],
                [nt[2], it[6]],
                [nt[6], it[6]],
                [nt[8], it[4]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[0], it[3]],
                [nt[0], it[2]],
              ],
              [
                [0, 1, 21, 22],
                [1, 2, 20, 21],
                [2, 3, 19, 20],
                [3, 4, 18, 19],
                [4, 5, 17, 18],
                [5, 6, 16, 17],
                [6, 7, 15, 16],
                [7, 8, 14, 15],
                [8, 9, 13, 14],
                [9, 10, 12, 13],
                [10, 11, 12],
                [22, 23, 25, 0],
                [23, 24, 25],
              ],
              [25]
            );
            break;
          case "t":
            Z = X;
          case "T":
            at(
              [
                [nt[4], it[0]],
                [nt[5], it[0]],
                [nt[5], it[13]],
                [nt[9], it[13]],
                [nt[9], it[14]],
                [nt[0], it[14]],
                [nt[0], it[13]],
                [nt[4], it[13]],
              ],
              [
                [0, 1, 2, 7],
                [4, 5, 6, 3],
              ],
              [7]
            );
            break;
          case "u":
            Z = X;
          case "U":
            at(
              [
                [nt[2], it[0]],
                [nt[7], it[0]],
                [nt[9], it[2]],
                [nt[9], it[14]],
                [nt[8], it[14] - nt[10]],
                [nt[8], it[3]],
                [nt[6], it[1]],
                [nt[3], it[1]],
                [nt[1], it[3]],
                [nt[1], it[14] - nt[10]],
                [nt[0], it[14]],
                [nt[0], it[2]],
              ],
              [
                [0, 1, 6, 7],
                [1, 2, 5, 6],
                [2, 3, 4, 5],
                [7, 8, 11, 0],
                [8, 9, 10, 11],
              ],
              [11]
            );
            break;
          case "v":
            Z = X;
          case "V":
            n = 0.5 * $;
            m = Math.atan(n);
            (e = Math.min(n, j / Math.cos(m))),
              (r = Math.min(it[13], j / Math.sin(m))),
              at(
                [
                  [n, it[0]],
                  [nt[9], it[14]],
                  [nt[9] - e, it[14]],
                  [n, it[0] + r],
                  [nt[0] + e, it[14]],
                  [nt[0], it[14]],
                ],
                [
                  [0, 1, 2, 3],
                  [0, 3, 4, 5],
                ],
                [5]
              );
            break;
          case "w":
            Z = X;
          case "W":
            (n = 0.5 * $), (e = Math.atan((n - j) / (0.5 - K)));
            var q = (r = pd.constrainTo(j / Math.sin(e), 0, 0.75)) * Q;
            at(
              [
                [nt[0] + Q, it[0]],
                [Math.min(n, nt[1] + Q), it[0]],
                [n, it[8] > r ? it[6] : it[14] - r],
                [Math.max(n, nt[8] - Q), it[0]],
                [nt[9] - Q, it[0]],
                [nt[9], it[14]],
                [nt[8], it[14]],
                [Math.max(n, nt[8] - Q) + q, it[0] + r],
                [n, it[8] > r ? it[6] + r : it[14]],
                [Math.min(n, nt[1] + Q) - q, it[0] + r],
                [nt[1], it[14]],
                [nt[0], it[14]],
              ],
              [
                [0, 1, 9],
                [0, 9, 11],
                [9, 10, 11],
                [1, 2, 8, 9],
                [2, 3, 7, 8],
                [3, 4, 7],
                [4, 7, 5],
                [5, 6, 7],
              ],
              [11]
            );
            break;
          case "x":
            Z = X;
          case "X":
            (n = 0.5 * $),
              (r = (e = K / Math.sin(Math.atan(1 / $))) / $),
              at(
                [
                  [nt[0], it[0]],
                  [nt[0] + e, it[0]],
                  [n, it[7] - r],
                  [nt[9] - e, it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[0] + r],
                  [n + e, it[7]],
                  [nt[9], it[14] - r],
                  [nt[9], it[14]],
                  [nt[9] - e, it[14]],
                  [n, it[7] + r],
                  [nt[0] + e, it[14]],
                  [nt[0], it[14]],
                  [nt[0], it[14] - r],
                  [n - e, it[7]],
                  [nt[0], it[0] + r],
                ],
                [
                  [0, 1, 15],
                  [1, 2, 14, 15],
                  [2, 3, 5, 6],
                  [3, 4, 5],
                  [6, 7, 9, 10],
                  [7, 8, 9],
                  [10, 11, 13, 14],
                  [11, 12, 13],
                  [2, 6, 10, 14],
                ],
                [15]
              );
            break;
          case "y":
            Z = X;
          case "Y":
            n = 0.5 * $;
            var G = (1 / $) * (nt[4] - nt[0]);
            (r = (e = K / Math.sin(Math.atan(1 / $))) / $),
              at(
                [
                  [nt[4], it[0]],
                  [nt[5], it[0]],
                  [nt[5], it[14] - G - r],
                  [nt[9], it[14] - r],
                  [nt[9], it[14]],
                  [nt[9] - e, it[14]],
                  [n, it[7] + r],
                  [nt[0] + e, it[14]],
                  [nt[0], it[14]],
                  [nt[0], it[14] - r],
                  [nt[4], it[14] - G - r],
                ],
                [
                  [2, 6, 10],
                  [0, 1, 2, 10],
                  [2, 3, 5, 6],
                  [3, 4, 5],
                  [6, 7, 9, 10],
                  [7, 8, 9],
                ],
                [10]
              );
            break;
          case "z":
            Z = X;
          case "Z":
            (e = Math.atan(1 / $)),
              (r = j / Math.sin(e)),
              at(
                [
                  [nt[0], it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[1]],
                  [nt[0] + r, it[1]],
                  [nt[9], it[13]],
                  [nt[9], it[14]],
                  [nt[0], it[14]],
                  [nt[0], it[13]],
                  [nt[9] - r, it[13]],
                  [nt[0], it[1]],
                ],
                [
                  [0, 1, 2, 9],
                  [3, 4, 8, 9],
                  [5, 6, 7, 4],
                ],
                [9]
              );
            break;
          case "\\":
            (r = (e = K / Math.sin(Math.atan(1 / $))) / $),
              at(
                [
                  [nt[9] - e, it[0] - 0.2],
                  [nt[9], it[0] - 0.2],
                  [nt[9], it[0] - 0.2 + r],
                  [nt[0] + e, it[14] + 0.2],
                  [nt[0], it[14] + 0.2],
                  [nt[0], it[14] + 0.2 - r],
                ],
                [
                  [0, 1, 2],
                  [2, 3, 5, 0],
                  [3, 4, 5],
                ],
                [5]
              );
            break;
          case "[":
            (e = (r = 0.2) * $),
              at(
                [
                  [nt[0], it[0] - r],
                  [nt[1] + e, it[0] - r],
                  [nt[1] + e, it[1] - r],
                  [nt[1], it[1] - r],
                  [nt[1], it[13] + r],
                  [nt[1] + e, it[13] + r],
                  [nt[1] + e, it[14] + r],
                  [nt[0], it[14] + r],
                ],
                [
                  [0, 1, 2, 3],
                  [3, 4, 7, 0],
                  [4, 5, 6, 7],
                ],
                [7]
              ),
              (i = j / $ + 0.2);
            break;
          case "]":
            (r = 0.2),
              (e = nt[1] - nt[0]),
              (n = nt[1] + 0.2 * $),
              at(
                [
                  [nt[0], it[0] - r],
                  [n, it[0] - r],
                  [n, it[14] + r],
                  [nt[0], it[14] + r],
                  [nt[0], it[13] + r],
                  [n - e, it[13] + r],
                  [n - e, it[1] - r],
                  [nt[0], it[1] - r],
                ],
                [
                  [0, 1, 6, 7],
                  [1, 2, 5, 6],
                  [2, 3, 4, 5],
                ],
                [7]
              ),
              (i = j / $ + 0.2);
            break;
          case "^":
            n = 0.5 * $;
            m = Math.atan($);
            (e = j / Math.cos(m)),
              (r = j / Math.sin(m)),
              at(
                [
                  [nt[0], it[7]],
                  [nt[0] + e, it[7]],
                  [n, Math.max(it[7], it[14] - r)],
                  [nt[9] - e, it[7]],
                  [nt[9], it[7]],
                  [n, it[14]],
                ],
                [
                  [1, 2, 5, 0],
                  [2, 3, 4, 5],
                ],
                [5]
              );
            break;
          case "_":
            (n = 0.25 * $),
              (r = it[0] - K),
              at(
                [
                  [nt[0], it[0]],
                  [nt[9], it[0]],
                  [nt[9], it[1]],
                  [nt[0], it[1]],
                ],
                [[0, 1, 2, 3]],
                [3]
              );
            break;
          case "°":
          case "°":
          case "`":
            n = 0.25 * $;
            (I = Math.min(0.15, j)),
              (E = pd.mapAndConstrainTo(j, 0, 0.2, 0.05, 0.15));
            (r = it[14] - 1.5 * E),
              at(
                [
                  [n - (e = 1.5 * E), r - e],
                  [n + e, r - e],
                  [n + e, r + e],
                  [n - e, r + e],
                  [n - (e -= I), r - e],
                  [n - e, r + e],
                  [n + e, r + e],
                  [n + e, r - e],
                ],
                [
                  [0, 1, 7, 4],
                  [1, 2, 6, 7],
                  [2, 3, 5, 6],
                  [3, 0, 4, 5],
                ],
                [3, 7]
              ),
              (i = 0.5);
            break;
          case "{":
            (r = 0.2),
              (e = pd.mapAndConstrainTo($, 0, 5, 0.25 * $, 0.1 * $)),
              (e = j + Math.max(0.1 / $, e)),
              (n = 0.25 * $ - 0.5 * e + 0.5 * Math.max(0.1, j)),
              at(
                [
                  [n + e, it[0] - r],
                  [n + j, it[2]],
                  [n + j, it[5]],
                  [n - Math.max(0.1, j) + j, it[7]],
                  [n + j, it[9]],
                  [n + j, it[12]],
                  [n + e, it[14] + r],
                  [n, it[12]],
                  [n, it[10]],
                  [n - Math.max(0.1, j), it[7]],
                  [n, it[4]],
                  [n, it[2]],
                ],
                [
                  [0, 1, 11],
                  [1, 2, 10, 11],
                  [2, 3, 9, 10],
                  [3, 4, 8, 9],
                  [4, 5, 7, 8],
                  [5, 6, 7],
                ],
                [11]
              ),
              (i = 0.5);
            break;
          case "|":
            (r = 0.2),
              at(
                [
                  [(n = 0.25 * $) - K, it[0] - r],
                  [n + K, it[0] - r],
                  [n + K, it[14] + r],
                  [n - K, it[14] + r],
                ],
                [[0, 1, 2, 3]],
                [3]
              ),
              (i = 0.5);
            break;
          case "}":
            (r = 0.2),
              (e = pd.mapAndConstrainTo($, 0, 5, 0.25 * $, 0.1 * $)),
              (e = j + Math.max(0.1 / $, e)),
              (n = 0.25 * $ + 0.5 * e - 0.5 * Math.max(0.1, j)),
              at(
                [
                  [n - e, it[0] - r],
                  [n, it[2]],
                  [n, it[4]],
                  [n + Math.max(0.1, j), it[7]],
                  [n, it[10]],
                  [n, it[12]],
                  [n - e, it[14] + r],
                  [n - j, it[12]],
                  [n - j, it[9]],
                  [n + Math.max(0.1, j) - j, it[7]],
                  [n - j, it[5]],
                  [n - j, it[2]],
                ],
                [
                  [0, 1, 11],
                  [1, 2, 10, 11],
                  [2, 3, 9, 10],
                  [3, 4, 8, 9],
                  [4, 5, 7, 8],
                  [5, 6, 7],
                ],
                [11]
              ),
              (i = 0.5);
            break;
          case "~":
            e = pd.mapAndConstrainTo($, 0, 5, 0, 0.2 * $);
            var W = 0.333333333 * (nt[9] - nt[0] - e - e);
            (S = nt[0] + e + W), (k = nt[9] - e - W);
            at(
              [
                [nt[0] + e, 0.25],
                [S, 0.6 - K],
                [k, 0.4 - K],
                [nt[9] - e, 0.75],
                [k, 0.4 + K],
                [S, 0.6 + K],
              ],
              [
                [0, 1, 5],
                [1, 2, 4, 5],
                [2, 3, 4],
              ],
              [5]
            );
        }
        (ot += i * $ * Z), (ot += l ? rt * X : rt * Z);
      }
      (J = h), (tt = u);
    }
    pd3D.Font = new pd3D.FontInstance();
  })();
var pdDOM = pdDOM || {};
!(function () {
  (pdDOM.mobileOS = ""),
    (pdDOM.isMobile = !1),
    (pdDOM.devicePixelRatio = window.devicePixelRatio || 1),
    (pdDOM.pageScale = 1),
    (function () {
      var t,
        e,
        r,
        n = navigator.userAgent || navigator.vendor || window.opera;
      if (
        ((pdDOM.mobileOS =
          n.match(/(iPhone|iPod|iPad|Android|BlackBerry)/) || []),
        (pdDOM.isMobile = 0 < pdDOM.mobileOS.length),
        pdDOM.isMobile)
      ) {
        if (/windows phone/i.test(n)) return (pdDOM.isWindowsPhone = !0);
        if (/android/i.test(n)) return (pdDOM.isAndroid = !0);
        if (/iPad|iPhone|iPod/.test(n) && !window.MSStream)
          (pdDOM.isiOS = !0), /iPhone/.test(n) && (pdDOM.isiPhone = !0);
      } else {
        var i = n.toLowerCase();
        if (
          (0 <= i.indexOf("macintosh") && (pdDOM.isMacintosh = !0),
          navigator.vendor &&
            0 <= navigator.vendor.indexOf("Apple") &&
            navigator.userAgent &&
            !navigator.userAgent.match("CriOS"))
        ) {
          var a =
              ((r =
                (t = i).match(
                  /(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i
                ) || []),
              /trident/i.test(r[1])
                ? {
                    name: "IE",
                    version: (e = /\brv[ :]+(\d+)/g.exec(t) || [])[1] || "",
                  }
                : "Chrome" === r[1] &&
                  null != (e = t.match(/\b(OPR|Edge)\/(\d+)/))
                ? { name: e[1].replace("OPR", "Opera"), version: e[2] }
                : ((r = r[2]
                    ? [r[1], r[2]]
                    : [navigator.appName, navigator.appVersion, "-?"]),
                  null != (e = t.match(/version\/(\d+)/i)) &&
                    r.splice(1, 1, e[1]),
                  { name: r[0], version: r[1] })),
            o = parseFloat(a.version);
          return (pdDOM.isSafariOldVersion = o < 11), (pdDOM.isSafari = !0);
        }
        if (0 <= i.indexOf("firefox")) return (pdDOM.isFirefox = !0);
        if (0 <= i.indexOf("windows"))
          (pdDOM.isWindows10 = 0 <= i.indexOf("10.")), (pdDOM.isWindows = !0);
      }
    })();
  var n = !0,
    i = null;
  (pdDOM.checkForSafariCanvasFix = function (t, e, r) {
    return (
      pdDOM.isSafariOldVersion &&
        1.5 < window.devicePixelRatio &&
        (1441 < t || 901 < e
          ? (n &&
              r &&
              (null == i
                ? (i = r({
                    content:
                      "<strong>WARNING</strong>: WebGL canvas resolution reduced as Safari really struggles<br />on a scaled Retina display when sized greater than 1440x900 pixels.",
                    style: "primary",
                    timeout: 12e3,
                  }))
                : i.hasClass("snackbar-opened") || i.snackbar("show")),
            (pdDOM.devicePixelRatio = 1),
            (n = !1))
          : (r && i && i.hasClass("snackbar-opened") && i.snackbar("hide"),
            (pdDOM.devicePixelRatio = window.devicePixelRatio),
            (n = !0))),
      pdDOM
    );
  }),
    (pdDOM.getClientWidth = function () {
      var t = window.innerWidth,
        e = document.documentElement.clientWidth;
      return e < t ? t : e;
    }),
    (pdDOM.getClientHeight = function () {
      var t = window.innerHeight,
        e = document.documentElement.clientHeight;
      return e < t ? t : e;
    }),
    (pdDOM.setFullSizeCanvasByDevice = function (t, e, r, n) {
      return (
        pdDOM.checkForSafariCanvasFix(e, r, n),
        t &&
          t.canvas &&
          ((t.canvas.width = e * pdDOM.devicePixelRatio),
          (t.canvas.height = r * pdDOM.devicePixelRatio),
          (t.canvas.style.height = r),
          (t.canvas.style.width = e),
          t.viewport(0, 0, t.canvas.width, t.canvas.height)),
        pdDOM
      );
    }),
    (pdDOM.applyFirefoxPageScaleFix = function (t, e, r, n) {
      return (
        t &&
          pdDOM.isFirefox &&
          (t.css({
            "-moz-transform": "scale(" + n + ")",
            "-moz-transform-origin": "0 0",
          }),
          n < 1
            ? t.css({
                width: e * pdDOM.pageScale + "px",
                height: r * pdDOM.pageScale + "px",
              })
            : t.css({ width: "100%", height: "100%" })),
        pdDOM
      );
    }),
    (pdDOM.getParamString = function (t, e, r) {
      var n = [];
      for (var i in t)
        n.push(
          encodeURIComponent(r ? i.toUpperCase() : i) +
            "=" +
            encodeURIComponent(t[i])
        );
      return (e && -1 !== e.indexOf("?") ? "&" : "?") + n.join("&");
    }),
    (pdDOM.getUrlParams = function (t) {
      var n = {};
      return (
        (t = t || window.location.search).replace(
          /[?&]+([^=&]+)=([^&]*)/gi,
          function (t, e, r) {
            n[e] = r;
          }
        ),
        n
      );
    }),
    (pdDOM.hasClass = function (t, e) {
      var r = new RegExp("(\\s|^)" + e + "(\\s|$)");
      if (t instanceof SVGElement) {
        var n = t.getAttribute("class");
        return !!n && !!n.match(r);
      }
      return !!t.className.match(r);
    }),
    (pdDOM.addClass = function (e, t, r) {
      (r = pd.toBoolean(r, !1)),
        pd.isArray(t) &&
          t.forEach(function (t) {
            pdDOM.addClass(e, t, r);
          });
      var n = e.getAttribute("class"),
        i = new RegExp("(\\s|^)" + t + "(\\s|$)");
      return (
        (n && n.match(i)) ||
          (e instanceof SVGElement
            ? ((n = r
                ? 0 < n.length
                  ? t + " " + n
                  : t
                : 0 < n.length
                ? n + " " + t
                : t),
              e.setAttribute("class", n))
            : (e.className = r
                ? 0 < e.className.length
                  ? t + " " + e.className
                  : t
                : 0 < e.className.length
                ? e.className + " " + t
                : t)),
        pdDOM
      );
    }),
    (pdDOM.removeClass = function (e, t) {
      pd.isArray(t) &&
        t.forEach(function (t) {
          pdDOM.removeClass(e, t);
        });
      var r = e.getAttribute("class"),
        n = new RegExp("(\\s|^)" + t + "(\\s|$)");
      return (
        r &&
          r.match(n) &&
          (e instanceof SVGElement
            ? ((r = r.replace(n, " ").trim()), e.setAttribute("class", r))
            : (e.className = e.className.replace(n, " ").trim())),
        pdDOM
      );
    }),
    (pdDOM.toggleClass = function (e, t, r) {
      pd.isArray(t) &&
        t.forEach(function (t) {
          pdDOM.toggleClass(e, t, r);
        });
      var n = pdDOM.hasClass(e, t);
      return (
        (r = pd.toBoolean(r, !n)) && !n
          ? pdDOM.addClass(e, t)
          : !r && n && pdDOM.removeClass(e, t),
        pdDOM
      );
    }),
    (pdDOM.getComputedElementStyle = function (t, e) {
      var r = "";
      if (window.getComputedStyle) r = getComputedStyle(t).getPropertyValue(e);
      else if (t.currentStyle)
        try {
          r = t.currentStyle[e];
        } catch (t) {}
      return r;
    }),
    (pdDOM.getElementFontSizeInPixels = function (t) {
      return parseFloat(
        pdDOM.getComputedElementStyle(
          t || document.documentElement,
          "font-size"
        )
      );
    }),
    (pdDOM.convertEmToPixels = function (t, e) {
      return parseFloat(t) * pdDOM.getElementFontSizeInPixels(e);
    }),
    (pdDOM.convertToInlineStyles = function (t, e) {
      if (((e = e || {}), t)) {
        e.recursive &&
          Array.prototype.forEach.call(t.children, function (t) {
            pdDOM.convertToInlineStyles(t, e);
          });
        for (var r = getComputedStyle(t), n = 0; n < r.length; ++n) {
          var i = r.item(n);
          if (!e.properties || 0 <= e.properties.indexOf(i)) {
            var a = r.getPropertyValue(i);
            t.style[i] = a;
          }
        }
      }
    });
  var a = "http://www.w3.org/2000/svg";
  function o(t, e, r) {
    for (; t.hasChildNodes(); ) t.removeChild(t.lastChild);
    if (e && pd.isString(e)) {
      var n,
        i = pd.toNumber(r.x, 0),
        a = pd.toNumber(r.lineHeight, 1.1),
        o = pd.toNumber(r.dy, 0),
        s = e.match(/[^\r\n]+/g);
      if (pd.isArray(s) && 1 < s.length)
        for (var d = 0, l = s.length; d < l; ++d)
          (n = pdDOM.svgElem("tspan", {
            x: i,
            dy: (0 < d ? a : o) + "em",
          })).appendChild(document.createTextNode(s[d].trim())),
            t.appendChild(n);
      else t.appendChild(document.createTextNode(e.trim()));
    } else t.appendChild(document.createTextNode(""));
    return t;
  }
  (pdDOM.svgElem = function (t, e) {
    e = e || {};
    var r = document.createElementNS(a, t);
    for (var n in e) r.setAttributeNS(null, n, e[n]);
    return r;
  }),
    (pdDOM.svgText = function (t, e) {
      var r = pdDOM.svgElem("text", e);
      return r.appendChild(document.createTextNode(t)), r;
    }),
    (pdDOM.svgTextMultiLine = function (t, e) {
      var r = pdDOM.svgElem("text", e);
      return o(r, t, e), r;
    }),
    (pdDOM.svgAttr = function (t, e) {
      if (t && pd.isObject(e))
        for (var r in e)
          null == e[r]
            ? t.removeAttributeNS(a, r)
            : t.setAttributeNS(null, r, e[r]);
      return pdDOM;
    }),
    (pdDOM.svgSetText = function (t, e, r) {
      if (t) {
        if (pd.isObject(r)) for (var n in r) t.setAttributeNS(null, n, r[n]);
        t.firstChild && (t.firstChild.nodeValue = e);
      }
      return pdDOM;
    }),
    (pdDOM.svgSetTextMultiLine = function (t, e, r) {
      if (t && pd.isObject(r)) for (var n in r) t.setAttributeNS(null, n, r[n]);
      return o(t, e, r), pdDOM;
    }),
    (pdDOM.svgHide = function (t) {
      return t.setAttributeNS(null, "display", "none"), pdDOM;
    }),
    (pdDOM.svgShow = function (t) {
      return t.setAttributeNS(null, "display", "inline"), pdDOM;
    }),
    (pdDOM.copyToClipboard = function (t) {
      var e = !1;
      if (t) {
        var r = document.createElement("textarea"),
          n = window.pageYOffset || document.documentElement.scrollTop;
        (r.style.fontSize = "12pt"),
          (r.style.border = "0"),
          (r.style.padding = "0"),
          (r.style.margin = "0"),
          (r.style.position = "absolute"),
          (r.style.left = "-9999px"),
          (r.style.top = n + "px"),
          r.setAttribute("readonly", ""),
          (r.value = t.toString()),
          document.body.appendChild(r),
          r.focus(),
          r.select();
        try {
          e = document.execCommand("copy");
        } catch (t) {
          e = !1;
        }
        setTimeout(function () {
          document.body.removeChild(r), (r = null);
        }, 500);
      }
      return e;
    }),
    (pdDOM.enableDragDrop = function (t, e) {
      function r(t) {
        ((t = t || window.event).dataTransfer.dropEffect = "copy"),
          t.stopPropagation(),
          t.preventDefault();
      }
      return (
        !(!window.FileReader || !t || "function" != typeof e) &&
        (t.addEventListener("dragenter", r),
        t.addEventListener("dragleave", r),
        t.addEventListener("dragover", r),
        t.addEventListener("drop", function (t) {
          return (
            (t = t || window.event).stopPropagation(),
            t.preventDefault(),
            e(t.dataTransfer.files, t),
            !1
          );
        }),
        !0)
      );
    }),
    (pdDOM.getKbdIncrement = function (t, e) {
      switch (t.which) {
        case 37:
          return e ? 1 : 0;
        case 38:
          return 1;
        case 39:
          return e ? -1 : 0;
        case 40:
          return -1;
        case 33:
          return 10;
        case 34:
          return -10;
      }
      return 0;
    }),
    (pdDOM.getScrollIncrement = function (t) {
      var e = t.originalEvent || t;
      if (e) {
        if (e.deltaY) return e.deltaY < 0 ? 1 : -1;
        if (e.deltaX) return e.deltaX < 0 ? 1 : -1;
        if (void 0 !== e.wheelDeltaY) return e.wheelDeltaY < 0 ? 1 : -1;
        if (void 0 !== e.wheelDeltaX) return e.wheelDeltaX < 0 ? 1 : -1;
        if (e.wheelDelta) return e.wheelDelta < 0 ? 1 : -1;
        if (e.detail) return e.detail < 0 ? 1 : -1;
      }
      return 0;
    }),
    (pdDOM.hiResTimeStamp = (function () {
      if (window.performance) {
        var t = window.performance;
        if (t.now)
          return function () {
            return t.now();
          };
        if (t.webkitNow)
          return function () {
            return t.webkitNow();
          };
        if (t.mozNow)
          return function () {
            return t.mozNow();
          };
        if (t.oNow)
          return function () {
            return t.oNow();
          };
      }
      return function () {
        return Date.now();
      };
    })()),
    (pdDOM.ThrottledUpdate = function (e, r, n) {
      var i = this,
        a = null;
      if ("function" != typeof e)
        throw new TypeError("ERROR: Callback must be a function.");
      function o() {
        i.cancel(), e(n);
      }
      return (
        (r = pd.isNumeric(r) ? parseFloat(r) : 50),
        (this.trigger = function () {
          return a || (a = setTimeout(o, r)), i;
        }),
        (this.restart = function (t) {
          return (
            a && clearTimeout(a),
            (r = pd.toNumber(t, r)),
            (a = setTimeout(o, r)),
            i
          );
        }),
        (this.timeout = function (t) {
          return i.cancel(), e((t = t || n)), i;
        }),
        (this.cancel = function () {
          return a && clearTimeout(a), (a = null), i;
        }),
        this
      );
    }),
    (pdDOM.throttledCalculation = function (r) {
      if (
        "object" != typeof (r = r || {}).iterator ||
        "function" != typeof r.iterator.next
      )
        throw new Error("ERROR: Calculation requires a valid iterator object.");
      if ("function" != typeof r.callbackCalculate)
        throw new Error("ERROR: Calculation callback must be a function.");
      var n = r.iterator,
        i = r.callbackCalculate;
      return (
        (r.iterations = r.iterations || 1e6),
        (r.timeout = r.timeout || 100),
        pdDOM
          .getGlobalAnimationQueue()
          .addOrReplace(function () {
            var t = 0,
              e = pdDOM.hiResTimeStamp() + r.timeout;
            if (n)
              for (
                ;
                null != (n = n.next()) &&
                (i(n), !(++t >= r.iterations || pdDOM.hiResTimeStamp() > e));

              );
            return !n || n.cancelled
              ? (r.callbackOnComplete && r.callbackOnComplete(r), !0)
              : (r.callbackOnTimeout && r.callbackOnTimeout(n, r), !1);
          })
          .start(),
        !0
      );
    });
  var s = ["webkit", "moz", "MS", "o", ""];
  pdDOM.cssAnimation = function (r, n, i, a) {
    pdDOM.addClass(r, n),
      (function (t, e, r) {
        for (var n = 0; n < s.length; ++n)
          s[n] || (e = e.toLowerCase()), t.addEventListener(s[n] + e, r, !1);
      })(r, "AnimationEnd", function t(e) {
        !(function (t, e, r) {
          for (var n = 0; n < s.length; ++n)
            s[n] || (e = e.toLowerCase()), t.removeEventListener(s[n] + e, r);
        })(r, "AnimationEnd", t),
          pdDOM.removeClass(r, n),
          "function" == typeof i && i(e, a);
      });
  };
  var t = null;
  function c(t) {
    return 0.206893034 < t ? t * t * t : (t - 4 / 29) / 7.787037;
  }
  function d(t) {
    return 0.008856 < t ? Math.pow(t, 1 / 3) : 7.787037 * t + 4 / 29;
  }
  function p(t) {
    return Math.round(
      255 * (t <= 0.00304 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055)
    );
  }
  function l(t) {
    return (t /= 255) <= 0.04045
      ? t / 12.92
      : Math.pow((t + 0.055) / 1.055, 2.4);
  }
  function f(t) {
    var e = l(255 * t[0]),
      r = l(255 * t[1]),
      n = l(255 * t[2]),
      i = d((0.4124564 * e + 0.3575761 * r + 0.1804375 * n) / 0.95047),
      a = d(0.2126729 * e + 0.7151522 * r + 0.072175 * n);
    return [
      116 * a - 16,
      500 * (i - a),
      200 * (a - d((0.0193339 * e + 0.119192 * r + 0.9503041 * n) / 1.08883)),
    ];
  }
  function h(t, e, r, n) {
    var i,
      a,
      o,
      s,
      d = 1 - r,
      l = f(t),
      h = f(e),
      u =
        ((i = [d * l[0] + r * h[0], d * l[1] + r * h[1], d * l[2] + r * h[2]]),
        (a = (i[0] + 16) / 116),
        (o = a + i[1] / 500),
        (s = a - i[2] / 200),
        [
          p(
            3.2404542 * (o = 0.95047 * c(o)) -
              1.5371385 * (a = c(a)) -
              0.4985314 * (s = 1.08883 * c(s))
          ) / 255,
          p(-0.969266 * o + 1.8760108 * a + 0.041556 * s) / 255,
          p(0.0556434 * o - 0.2040259 * a + 1.0572252 * s) / 255,
        ]);
    return (
      ((n = n || [])[0] = pd.constrainTo(u[0], 0, 1)),
      (n[1] = pd.constrainTo(u[1], 0, 1)),
      (n[2] = pd.constrainTo(u[2], 0, 1)),
      (n[3] = d * t[3] + r * e[3]),
      n
    );
  }
  function u(e, r) {
    var n = [];
    (e = e || []),
      pd.isArray(e) &&
        ((e[0] = +e[0] || 0),
        (e[1] = +e[1] || 0),
        (e[2] = +e[2] || 0),
        (e[3] = pd.toNumber(e[3], 1))),
      (r = r || []),
      pd.isArray(e) &&
        ((r[0] = +r[0] || 0),
        (r[1] = +r[1] || 0),
        (r[2] = +r[2] || 0),
        (r[3] = pd.toNumber(r[3], 1))),
      (this.interpolate = function (t) {
        return 1 === t ? r : h(e, r, t, n);
      });
  }
  function m(d, l) {
    var h = [];
    (d = d || []),
      pd.isArray(d) &&
        ((d[0] = +d[0] || 0), (d[1] = +d[1] || 0), (d[2] = +d[2] || 0)),
      (l = l || []),
      pd.isArray(d) &&
        ((l[0] = +l[0] || 0), (l[1] = +l[1] || 0), (l[2] = +l[2] || 0)),
      (this.interpolate = function (t) {
        return 1 === t
          ? l
          : ((r = l),
            (i = h),
            (a = 1 - (n = t)),
            (o = [+(e = d)[0] || 0, +e[1] || 0, +e[2] || 0]),
            (s = [+r[0] || 0, +r[1] || 0, +r[2] || 0]),
            ((i = i || [])[0] = a * o[0] + n * s[0]),
            (i[1] = a * o[1] + n * s[1]),
            (i[2] = a * o[2] + n * s[2]),
            i);
        var e, r, n, i, a, o, s;
      });
  }
  function g(e, r) {
    (r = pd.toNumber(r, 1)),
      (e = pd.toNumber(e, 0)),
      (this.interpolate = function (t) {
        return (1 - t) * e + t * r;
      });
  }
  (pdDOM.getGlobalAnimationQueue = function () {
    return t || (t = new pdDOM.AnimationQueue()), t;
  }),
    (pdDOM.AnimationQueue = function () {
      var e =
          window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          function (t) {
            setTimeout(t, 1e3 / 60);
          },
        n = [],
        r = [],
        i = [],
        a = !1,
        o = 0,
        s = 0,
        d = 0;
      function l(t) {
        n.indexOf(t) < 0 && n.push(t);
      }
      function h(t, e) {
        t((d - s) / 1e3, o, t._payload) && r.push(e);
      }
      function u() {
        if (a) {
          if (
            (0 < i.length && (i.forEach(l), (i.length = 0)),
            (d = new Date().getTime()),
            n.forEach(h),
            o++,
            0 < r.length)
          ) {
            r.sort(function (t, e) {
              return e - t;
            });
            for (var t = r.length - 1; 0 <= t; t--) n.splice(r[t], 1);
            r.length = 0;
          }
          e(u), (s = d);
        }
      }
      return (
        (this.frameCount = function () {
          return o;
        }),
        (this.add = function (t, e) {
          return (
            t &&
              "function" == typeof t &&
              (e && (t._payload = e), a ? i.push(t) : l(t)),
            this
          );
        }),
        (this.addOrReplace = function (t, e) {
          if (t && "function" == typeof t) {
            var r = n.indexOf(t);
            e && (t._payload = e), 0 <= r ? (n[r] = t) : a ? i.push(t) : l(t);
          }
          return this;
        }),
        (this.contains = function (t) {
          return 0 <= n.indexOf(t);
        }),
        (this.remove = function (t) {
          if (t && "function" == typeof t) {
            var e = n.indexOf(t);
            0 <= e && (a ? r.push(e) : n.splice(e, 1));
          }
          return this;
        }),
        (this.start = function () {
          return a || ((a = !0), (s = new Date().getTime()), u()), this;
        }),
        (this.stop = function () {
          return (a = !1), this;
        }),
        t || (t = this),
        this
      );
    }),
    (pdDOM.Animation = function (t, e) {
      var r = this;
      return (
        (this._queue = []),
        e && this._queue.push(e),
        (e = e || {}),
        (this.active = !1),
        (this.delay = pd.constrainTo(pd.toNumber(e.delay, 0), 0, 3600)),
        (this.duration = pd.constrainTo(
          pd.toNumber(e.duration, 1),
          0.001,
          3600
        )),
        (this.easing = e.easing || pd.Easing.inOutSine),
        (this.fromValue = pd.toNumber(e.fromValue, 0)),
        (this.toValue = pd.toNumber(e.toValue, 1)),
        (this.getter = e.getter || null),
        (this.callback = t || null),
        (this.onStart = e.onStart || null),
        (this.onComplete = e.onComplete || null),
        (this.progress = 0),
        (this.speed = 1 / this.duration),
        (this.update = function (t) {
          return r._handleUpdate(t);
        }),
        (this._delayValue = 0),
        (t = e = null),
        this
      );
    }),
    (pdDOM.Animation.prototype._handleUpdate = function (t) {
      if (0.999 < this.progress)
        return (
          (this.active = !1),
          (this.progress = 1),
          this.callback && this.callback(this.toValue, this),
          (!this.onComplete || !1 !== this.onComplete(this)) &&
            (!(0 < this._queue.length) || (this.start(this._queue.shift()), !1))
        );
      if (1e-6 < this._delayValue) {
        if (((this._delayValue -= t), !(this._delayValue < 0))) return !1;
        this._delayValue = 0;
      }
      if (this.callback) {
        var e = this.easing ? this.easing(this.progress) : this.progress;
        this.callback((1 - e) * this.fromValue + e * this.toValue, this);
      }
      return 1 <= (this.progress += this.speed * t) && (this.progress = 1), !1;
    }),
    (pdDOM.Animation.prototype._handleStart = function (t) {
      t || (t = 0 < this._queue.length ? this._queue.shift() : {}),
        void 0 !== t.delay && (this.delay = pd.toNumber(t.delay, 0)),
        void 0 !== t.duration && (this.duration = pd.toNumber(t.duration, 1)),
        void 0 !== t.easing && (this.easing = t.easing),
        void 0 !== t.getter && (this.getter = t.getter),
        void 0 !== t.onStart && (this.onStart = t.onStart),
        void 0 !== t.onComplete && (this.onComplete = t.onComplete),
        t.callback &&
          "function" == typeof t.callback &&
          (this.callback = t.callback);
      var e = pd.toNumber(t.toValue, this.toValue),
        r = pd.toNumber(t.fromValue, this.fromValue);
      return (
        this.getter && (r = pd.toNumber(this.getter(), r)),
        (this.duration = pd.constrainTo(
          pd.toNumber(this.duration, 1),
          0.001,
          3600
        )),
        (this.speed = 1 / this.duration),
        (this.delay = pd.constrainTo(this.delay, 0, 3600)),
        (this._delayValue = this.delay),
        (pd.closeTo(r, e) && pd.closeTo(e, this.toValue)) ||
          (this.active
            ? ((this.progress = Math.min(0.5, this.progress)),
              (this.fromValue = r - this.progress * (e - r)),
              (this.toValue = e))
            : ((this.progress = 0),
              (this.fromValue = r),
              (this.toValue = e),
              pdDOM.getGlobalAnimationQueue().addOrReplace(this.update).start(),
              (this.active = !0),
              this.onStart && this.onStart(this))),
        this
      );
    }),
    (pdDOM.Animation.prototype.then = function (t) {
      return t && this._queue.push(t), this;
    }),
    (pdDOM.Animation.prototype.start = function (t) {
      return this._handleStart(t), this;
    }),
    (pdDOM.Animation.prototype.cancel = function () {
      return (
        (this.active = !1),
        pdDOM.getGlobalAnimationQueue().remove(this.update),
        this.onComplete && this.onComplete(this),
        this
      );
    }),
    (pdDOM.Transition = function (t) {
      return (
        (t = t || {}),
        (this.target = t.target),
        (this.property = t.property || ""),
        (this.type = pd.toInteger(t.type, -1)),
        (this.easing =
          t.easing && "function" == typeof t.easing ? t.easing : null),
        (this.mapping = pd.isArray(t.mapping) ? t.mapping : null),
        (this.interpolator = t.interpolator || null),
        (this.isMethod =
          this.target && "function" == typeof this.target[this.property]),
        (this._cachedTransform = [0, 0, 0, 0, 0, 0, 0, 0, 0]),
        (this._cachedTransform.active = !1),
        this.interpolator || this.determineType(this.type, t.from, t.to),
        (t = null),
        this
      );
    });
  var v = pdDOM.Transition;
  (pdDOM.Transition.VALUE = 0),
    (pdDOM.Transition.VECTOR = 1),
    (pdDOM.Transition.COLOR = 2),
    (pdDOM.Transition.prototype.determineType = function (t, e, r) {
      if (t < 0 && pd.isArray(r)) {
        if (!pd.isArray(e))
          throw new Error(
            "From and to values must be of the same type and length."
          );
        3 < r.length && 3 < e.length
          ? (t = v.COLOR)
          : 2 < r.length && 2 < e.length && (t = v.VECTOR);
      }
      switch (t) {
        default:
        case v.VALUE:
          (this.interpolator = new g(e, r)), (this.type = v.VALUE);
          break;
        case v.VECTOR:
          (this.interpolator = new m(e, r)), (this.type = t);
          break;
        case v.COLOR:
          (this.interpolator = new u(e, r)), (this.type = t);
      }
      return this;
    }),
    (pdDOM.Transition.prototype.update = function (t) {
      var e = this.interpolator;
      return (
        !!e &&
        (this.easing && (t = this.easing(t)),
        this.mapping &&
          (t = pd.mapTo(t, 0, 1, this.mapping[0], this.mapping[1])),
        this.isMethod
          ? this.target[this.property](e.interpolate(t))
          : (this.target[this.property] = e.interpolate(t)),
        !0)
      );
    }),
    (pdDOM.AnimationSequence = function (t) {
      ((t = t || {}).easing = t.easing || pd.Easing.linear),
        pdDOM.Animation.call(this, null, t),
        (this.host = t.host || null),
        (this.processOnDraw = pd.toBoolean(t.processOnDraw, !1)),
        (this.transitionSequence = t.transitions || []),
        (this.activeStep = null),
        (this._onFullyComplete = this.onComplete),
        (this.onComplete = null);
    }),
    (pdDOM.AnimationSequence.prototype = Object.create(
      pdDOM.Animation.prototype
    )),
    (pdDOM.AnimationSequence.prototype.constructor = pdDOM.AnimationSequence),
    (pdDOM.AnimationSequence.prototype._nextStep = function () {
      var t = null;
      return (
        0 < this.transitionSequence.length &&
          (t = this.transitionSequence.shift()).duration < 0 &&
          (t.callback && t.callback(this, this.host), (t = this._nextStep())),
        t
      );
    }),
    (pdDOM.AnimationSequence.prototype._processPropertyChanges = function (
      t,
      e
    ) {
      var r = !1;
      if (t && t instanceof Object && e && e instanceof Object)
        for (var n in e)
          t.hasOwnProperty(n) &&
            e.hasOwnProperty(n) &&
            ((t[n] = e[n]), (r = !0));
      return r;
    }),
    (pdDOM.AnimationSequence.prototype._handleProgress = function (t, e) {
      e.activeStep &&
        !e.activeStep.paused &&
        (e.processOnDraw || e.process(), gl.update());
    }),
    (pdDOM.AnimationSequence.prototype._handleComplete = function (t) {
      if (
        ((t.checkNextStep = !0),
        !t.processOnDraw || (t.activeStep && t.activeStep.paused))
      ) {
        if (
          ((t.activeStep = t._nextStep()),
          (t.active = t.checkNextStep = !1),
          !t.activeStep)
        )
          return t._onFullyComplete && t._onFullyComplete(t), !0;
        t._handleStart({
          duration: t.activeStep.duration,
          fromValue: 0,
          toValue: 1,
        });
      } else t.active = 0 < t.transitionSequence.length;
      return !t.active;
    }),
    (pdDOM.AnimationSequence.prototype.addTransition = function (t, e) {
      var r = [];
      if (((t = Math.max(0.017, pd.toNumber(t, 1))), 1 < arguments.length))
        for (var n = 1; n < arguments.length; ++n)
          if (((e = arguments[n]), pd.isArray(e)))
            for (var i = 0; i < e.length; ++i)
              e[i].update &&
                (e[i].target || (e[i].target = this.host), r.push(e[i]));
          else e.update && (e.target || (e.target = this.host), r.push(e));
      return (
        this.transitionSequence.push({ transitions: r, duration: t }), this
      );
    }),
    (pdDOM.AnimationSequence.prototype.addCallback = function (t) {
      return (
        t && this.transitionSequence.push({ callback: t, duration: -1 }), this
      );
    }),
    (pdDOM.AnimationSequence.prototype.addPause = function (t) {
      return (
        0 < (t = pd.toNumber(t, 1)) &&
          this.transitionSequence.push({
            transitions: [],
            duration: t,
            paused: !0,
          }),
        this
      );
    }),
    (pdDOM.AnimationSequence.prototype.addChanges = function (t, e) {
      var r = this;
      return (
        1 == arguments.length && ((e = t), (t = this.host)),
        t &&
          t instanceof Object &&
          e &&
          e instanceof Object &&
          this.addCallback(function () {
            r._processPropertyChanges(t, e) && gl.update();
          }),
        this
      );
    }),
    (pdDOM.AnimationSequence.prototype.process = function () {
      if (
        this.activeStep &&
        !this.activeStep.paused &&
        0 < this.activeStep.duration
      ) {
        var t = this.progress;
        this.easing && (t = this.easing(t));
        for (
          var e = this.activeStep.transitions, r = 0, n = e.length;
          r < n;
          ++r
        )
          e[r].update(t);
      }
      return (
        this.checkNextStep &&
          ((this.activeStep = this._nextStep()),
          (this.active = this.checkNextStep = !1),
          this.activeStep
            ? this._handleStart({
                duration: this.activeStep.duration,
                fromValue: 0,
                toValue: 1,
              })
            : this.cancel()),
        this
      );
    }),
    (pdDOM.AnimationSequence.prototype.start = function () {
      return (
        0 < this.transitionSequence.length &&
          (!this.activeStep || 0.999 <= this.progress) &&
          (this.activeStep = this._nextStep()),
        this.activeStep &&
          0 < this.activeStep.duration &&
          ((this.checkNextStep = !1),
          this._handleStart({
            callback: this._handleProgress,
            onComplete: this._handleComplete,
            duration: this.activeStep.duration,
            easing: pd.Easing.linear,
            fromValue: 0,
            toValue: 1,
          })),
        this
      );
    }),
    (pdDOM.AnimateNode = function (t) {
      if (!(t instanceof pd3D.Node))
        throw new TypeError("Can only animate a pd3D.Node object.");
      (this.node = t),
        (this.transform = t.transformMatrix = new pd3D.Transform()),
        (this.animation = new pdDOM.AnimationSequence({ host: this }));
      var r = [0, 0, 0],
        n = [0, 0, 0],
        i = [1, 1, 1];
      Object.defineProperty(this, "translation", {
        get: function () {
          return r;
        },
        set: function (t) {
          if (pd.isArray(t)) {
            var e = gl.animationQueue.frameCount();
            r.frameIndex != e &&
              ((r.frameIndex = e), (r[0] = 0), (r[1] = 0), (r[2] = 0)),
              (r[0] += +t[0] || 0),
              (r[1] += +t[1] || 0),
              (r[2] += +t[2] || 0);
          }
        },
      }),
        Object.defineProperty(this, "rotation", {
          get: function () {
            return n;
          },
          set: function (t) {
            if (pd.isArray(t)) {
              var e = gl.animationQueue.frameCount();
              n.frameIndex != e &&
                ((n.frameIndex = e), (n[0] = 0), (n[1] = 0), (n[2] = 0)),
                (n[0] += +t[0] || 0),
                (n[1] += +t[1] || 0),
                (n[2] += +t[2] || 0);
            }
          },
        }),
        Object.defineProperty(this, "scale", {
          get: function () {
            return i;
          },
          set: function (t) {
            if (pd.isArray(t)) {
              var e = gl.animationQueue.frameCount();
              i.frameIndex != e &&
                ((i.frameIndex = e), (i[0] = 1), (i[1] = 1), (i[2] = 1)),
                (i[0] *= +t[0] || 0),
                (i[1] *= +t[1] || 0),
                (i[2] *= +t[2] || 0);
            }
          },
        }),
        (this.clearDynamicTransform = function () {
          return (
            (r[0] = r[1] = r[2] = 0),
            (n[0] = n[1] = n[2] = 0),
            (i[0] = i[1] = i[2] = 1),
            this
          );
        }),
        (t.callbackOnDraw = function () {
          this.animation && this.animation.active && this.animation.process(),
            this.transform.addTranslation(this.translation),
            this.transform.addRotation(this.rotation),
            this.transform.addScale(this.scale);
        }),
        (this.remove = function () {
          (this.node.transformMatrix = null), (this.node.callbackOnDraw = null);
        });
    }),
    (pdDOM.localStorage = null);
  try {
    pdDOM.localStorage = window.localStorage;
  } catch (t) {}
  pdDOM.localStorage ||
    ((pdDOM.localStorage = {
      getItem: function (t) {
        return t && this.hasOwnProperty(t)
          ? unescape(
              document.cookie.replace(
                new RegExp(
                  "(?:^|.*;\\s*)" +
                    escape(t).replace(/[\-\.\+\*]/g, "\\$&") +
                    "\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*"
                ),
                "$1"
              )
            )
          : null;
      },
      key: function (t) {
        return unescape(
          document.cookie
            .replace(/\s*\=(?:.(?!;))*$/, "")
            .split(/\s*\=(?:[^;](?!;))*[^;]?;\s*/)[t]
        );
      },
      setItem: function (t, e) {
        t &&
          ((document.cookie =
            escape(t) +
            "=" +
            escape(e) +
            "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/"),
          (this.length = document.cookie.match(/\=/g).length));
      },
      length: 0,
      removeItem: function (t) {
        t &&
          this.hasOwnProperty(t) &&
          ((document.cookie =
            escape(t) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"),
          this.length--);
      },
      hasOwnProperty: function (t) {
        return new RegExp(
          "(?:^|;\\s*)" + escape(t).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\="
        ).test(document.cookie);
      },
    }),
    (pdDOM.localStorage.length = (
      document.cookie.match(/\=/g) || pdDOM.localStorage
    ).length));
  var y = !0;
  (pdDOM.setLocalStorageItem = function (t, e) {
    var r = pdDOM.localStorage;
    if (r && t && t.length)
      try {
        r.setItem(t, e);
      } catch (t) {
        y && (alert("ERROR - Unable to store value:\n" + t), (y = !1));
      }
  }),
    (pdDOM.getLocalStorageItem = function (t) {
      return t && t.length ? pdDOM.localStorage.getItem(t) : null;
    }),
    (pdDOM.removeLocalStorageItems = function (t) {
      if (pd.isArray(t)) {
        for (var e = pdDOM.localStorage, r = 0, n = t.length; r < n; ++r)
          e.removeItem(t[r]);
        return !0;
      }
      return !1;
    }),
    (pdDOM.fromXML = function (t) {
      var e,
        r,
        n,
        i,
        a = {};
      if (1 == t.nodeType) {
        if (0 < t.attributes.length) {
          a["@attributes"] = {};
          for (var o = 0; o < t.attributes.length; ++o) {
            var s = t.attributes.item(o);
            a["@attributes"][s.nodeName] = s.nodeValue;
          }
        }
      } else 3 == t.nodeType && (a = t.nodeValue.trim());
      if (t.hasChildNodes())
        if (1 === t.childNodes.length && 3 === t.childNodes[0].nodeType)
          a = t.childNodes[0].nodeValue.trim();
        else
          for (var d = 0; d < t.childNodes.length; ++d)
            void 0 === a[(i = (n = t.childNodes.item(d)).nodeName)]
              ? "" !== (e = pdDOM.fromXML(n)) && (a[i] = e)
              : (void 0 === a[i].push &&
                  ((r = a[i]), (a[i] = []), a[i].push(r)),
                "" !== (e = pdDOM.fromXML(n)) && a[i].push(e));
      if (!pd.isArray(a) && "object" == typeof a) {
        var l = Object.keys(a);
        if (1 == l.length && "#text" == l[0]) return a["#text"];
        if (0 === l.length) return null;
      }
      return a;
    }),
    (pdDOM.toXML = function (t, e) {
      var d = document.implementation.createDocument("", "", null);
      d ||
        (d = new DOMParser().parseFromString(
          "<dummy />",
          "text/xml"
        )).removeChild(d.documentElement),
        (e = e || "jsonXML");
      var r = d.createElement(e);
      return (
        (function t(e, r) {
          var n, i;
          if (
            r.constructor === String ||
            r.constructor === Number ||
            r.constructor === Boolean
          ) {
            if (
              (e.appendChild(d.createTextNode(r.toString())), r === r.valueOf())
            )
              return;
          } else
            r.constructor === Date &&
              e.appendChild(d.createTextNode(r.toGMTString()));
          for (var a in r)
            if (!isFinite(a))
              if (((n = r[a]), "keyValue" === a))
                null !== n &&
                  !0 !== n &&
                  e.appendChild(
                    d.createTextNode(
                      n.constructor === Date ? n.toGMTString() : String(n)
                    )
                  );
              else if ("@attributes" === a)
                for (var o in n) e.setAttribute(o, n[o]);
              else if ("@" === a.charAt(0)) e.setAttribute(a.slice(1), n);
              else if (n.constructor === Array)
                for (var s = 0; s < n.length; ++s)
                  t((i = d.createElement(a)), n[s]), e.appendChild(i);
              else
                (i = d.createElement(a)),
                  n instanceof Object
                    ? t(i, n)
                    : null !== n &&
                      !0 !== n &&
                      i.appendChild(d.createTextNode(n.toString())),
                  e.appendChild(i);
        })(r, t),
        d.appendChild(r),
        d
      );
    });
})(),
  (function () {
    var h = {
      true: !0,
      false: !(pdDOM.jsonToURI = function t(e) {
        function r(t) {
          return /[^\w-.]/.test(t)
            ? t.replace(/[^\w-.]/g, function (t) {
                return "$" === t
                  ? "!"
                  : (t = t.charCodeAt(0)) < 256
                  ? "*" + ("00" + t.toString(16)).slice(-2)
                  : "**" + ("0000" + t.toString(16)).slice(-4);
              })
            : t;
        }
        var n;
        switch (typeof e) {
          case "number":
            return isFinite(e)
              ? "~" + pd.toStringWithPrecisionRange(e, 0, 6)
              : "~null";
          case "boolean":
            return "~" + e;
          case "string":
            return "~'" + r(e);
          case "object":
            if (!e) return "~null";
            if (((n = []), pd.isArray(e))) {
              for (var i = 0; i < e.length; ++i) n[i] = t(e[i]) || "~null";
              return "~(" + (n.join("") || "~") + ")";
            }
            for (var a in e)
              if (e.hasOwnProperty(a)) {
                var o = t(e[a]);
                o && n.push(r(a) + o);
              }
            return "~(" + n.join("~") + ")";
          default:
            return;
        }
      }),
      null: null,
    };
    pdDOM.uriToJSON = function (a) {
      if (!a) return a;
      a = a.replace(/%27/g, "'");
      var o = 0,
        s = a.length;
      function d(t) {
        if (a.charAt(o) !== t)
          throw new Error(
            "bad JSURL syntax: expected " + t + ", got " + (a && a.charAt(o))
          );
        o++;
      }
      function l() {
        for (
          var t, e = o, r = "";
          o < s && "~" !== (t = a.charAt(o)) && ")" !== t;

        )
          switch (t) {
            case "*":
              e < o && (r += a.substring(e, o)),
                "*" === a.charAt(o + 1)
                  ? ((r += String.fromCharCode(
                      parseInt(a.substring(o + 2, o + 6), 16)
                    )),
                    (e = o += 6))
                  : ((r += String.fromCharCode(
                      parseInt(a.substring(o + 1, o + 3), 16)
                    )),
                    (e = o += 3));
              break;
            case "!":
              e < o && (r += a.substring(e, o)), (r += "$"), (e = ++o);
              break;
            default:
              o++;
          }
        return r + a.substring(e, o);
      }
      return (function t() {
        var e, r, n;
        switch ((d("~"), (r = a.charAt(o)))) {
          case "(":
            if ((o++, "~" === a.charAt(o)))
              if (((e = []), ")" === a.charAt(o + 1))) o++;
              else for (; e.push(t()), "~" === a.charAt(o); );
            else if (((e = {}), ")" !== a.charAt(o)))
              do {
                e[l()] = t();
              } while ("~" === a.charAt(o) && ++o);
            d(")");
            break;
          case "'":
            o++, (e = l());
            break;
          default:
            for (n = o++; o < s && /[^)~]/.test(a.charAt(o)); ) o++;
            var i = a.substring(n, o);
            if (/[\d\-]/.test(r)) e = parseFloat(i);
            else if (void 0 === (e = h[i]))
              throw new Error("bad value keyword: " + i);
        }
        return e;
      })();
    };
  })(),
  (pdDOM.Interaction = pdDOM.Interaction || {}),
  (function () {
    var k = !1,
      N = !1,
      I = null,
      E = null,
      _ = 0,
      P = 0,
      e = 3e3,
      w = { x: 0, y: 0 },
      A = 0,
      O = 0,
      V = 0,
      L = {},
      R = -1,
      F = -1,
      C = { x: 0, y: 0 },
      S = { x: 0, y: 0 },
      z = { x: 0, y: 0 },
      B = 1250;
    function o(t) {
      var e = null;
      return (
        t.target ? (e = t.target) : t.srcElement && (e = t.srcElement),
        e && 3 == e.nodeType && (e = e.parentNode),
        e
      );
    }
    function Y(t) {
      var e = pd.toNumber(t.pageX, 0),
        r = pd.toNumber(t.pageY, 0),
        n = o(t);
      if (n && n.getBoundingClientRect) {
        var i = 1 / pdDOM.pageScale,
          a = n.getBoundingClientRect();
        (e -= a.left * i), (r -= a.top * i);
      }
      return {
        target: n,
        button: pd.toInteger(t.button, 0),
        identifier: pd.toNumber(t.identifier, t.pointerId),
        pageX: t.pageX,
        pageY: t.pageY,
        x: e,
        y: r,
      };
    }
    function U() {
      for (var t in ((P = _ = 0), (E = null), (F = R = -1), L))
        L.hasOwnProperty(t) && delete L[t];
    }
    function t(t) {
      "touch" == t.pointerType.toLowerCase() &&
        ((_ = Math.max(0, _ - 1)), (P = t.timeStamp), _ <= 0 && U());
    }
    function H(t) {
      return (
        (t = pd.toNumber(t, 0)) < 0.001
          ? (t = 3 + 3 * pdDOM.devicePixelRatio)
          : t <= 0.999 && (t *= 3 + 3 * pdDOM.devicePixelRatio),
        z.x > t || z.y > t
      );
    }
    window.PointerEvent &&
      ((k = !0),
      document.addEventListener("pointerdown", function (t) {
        "touch" == t.pointerType.toLowerCase() &&
          (t.isPrimary && t.timeStamp - P > e && U(),
          (_ = Math.min(10, _ + 1)),
          (P = t.timeStamp));
      }),
      document.addEventListener("pointercancel", t),
      document.addEventListener("pointerup", t)),
      ("ontouchstart" in window ||
        "ontouchstart" in document.documentElement ||
        (window.DocumentTouch && document instanceof DocumentTouch)) &&
        (N = !0),
      (pdDOM.Interaction.hasMoved = H),
      (pdDOM.Interaction.activeTouchList = L),
      Object.defineProperty(pdDOM.Interaction, "hasPointerEvents", {
        get: function () {
          return k;
        },
      }),
      Object.defineProperty(pdDOM.Interaction, "hasTouchEvents", {
        get: function () {
          return N;
        },
      }),
      Object.defineProperty(pdDOM.Interaction, "activeTouchCount", {
        get: function () {
          return _;
        },
      }),
      Object.defineProperty(pdDOM.Interaction, "activeTouchTimeStamp", {
        get: function () {
          return P;
        },
        set: function (t) {
          P = +t;
        },
      }),
      Object.defineProperty(pdDOM.Interaction, "activeTouchTimeOutInMS", {
        get: function () {
          return e;
        },
        set: function (t) {
          e = Math.max(500, +t);
        },
      }),
      Object.defineProperty(pdDOM.Interaction, "activeTouchElement", {
        get: function () {
          return E;
        },
      }),
      (pdDOM.InteractionEvent = function (t) {
        (this.event = t),
          (this.isTouchEvent = !1),
          (this.touchCount = _),
          (this.timeStamp = t.timeStamp),
          (this.button = t.button),
          (this.ctrlKey = t.ctrlKey),
          (this.shiftKey = t.shiftKey),
          (this.metaKey = t.metaKey),
          (this.altKey = t.altKey),
          (this.scale = 1),
          (this.rotation = 0),
          (this.dragX = 0),
          (this.dragY = 0),
          (this.x = pd.toNumber(t.pageX, 0)),
          (this.y = pd.toNumber(t.pageY, 0)),
          (this.primaryX = this.x),
          (this.primaryY = this.y);
      }),
      (pdDOM.InteractionEvent.prototype.hasMoved = H),
      (pdDOM.InteractionEvent.prototype.getDragStartPosX = function () {
        return C.x;
      }),
      (pdDOM.InteractionEvent.prototype.getDragStartPosY = function () {
        return C.x;
      }),
      (pdDOM.InteractionEvent.prototype.getDragDistanceX = function () {
        return S.x;
      }),
      (pdDOM.InteractionEvent.prototype.getDragDistanceY = function () {
        return S.y;
      }),
      (pdDOM.InteractionEvent.prototype.preventDefault = function () {
        this.event && this.event.preventDefault && this.event.preventDefault();
      }),
      (pdDOM.InteractionEvent.prototype.stopPropagation = function () {
        this.event &&
          this.event.stopPropagation &&
          this.event.stopPropagation();
      }),
      (pdDOM.InteractionEvent.prototype.stopImmediatePropagation = function () {
        this.event &&
          this.event.stopImmediatePropagation &&
          this.event.stopImmediatePropagation();
      }),
      (pdDOM.Interaction.createEvent = function (t, e) {
        var r = !1,
          n = !1,
          i = !1,
          a = I,
          o = 0,
          s = 0,
          d = new pdDOM.InteractionEvent(t);
        if (t.type && 0 < t.type.length)
          if (k && "p" == t.type.charAt(0)) {
            if ((r = t.pointerType && "touch" == t.pointerType)) {
              var l = 0;
              for (var h in ((d.isTouchEvent = !0),
              L[t.pointerId] && (a = L[t.pointerId]),
              L)) {
                if (L.hasOwnProperty(h))
                  (f = L[h]) && ((o += f.pageX), (s += f.pageY), l++);
              }
              if (0 < l)
                if (((i = !0), (o /= l), (s /= l), 0 <= R))
                  if ((m = L[R]))
                    if (
                      ((d.primaryX = m.pageX),
                      (d.primaryY = m.pageY),
                      1 < l && 0 < F)
                    )
                      if ((g = L[F])) {
                        var u = g.pageX - m.pageX,
                          c = g.pageY - m.pageY;
                        (A = Math.sqrt(u * u + c * c)),
                          (d.rotation = -Math.atan2(c, u) * pd.Const.RAD2DEG),
                          (n = !0);
                      }
            }
          } else if (N && "t" == t.type.charAt(0)) {
            r = d.isTouchEvent = !0;
            var p = t.touches || t.targetTouches;
            if (
              ((!p || p.length < 1) &&
                ((p = t.changedTouches || t.originalEvent.changedTouches),
                _ < 1 && (_ = p.length)),
              (_ = p ? p.length : 0),
              (d.touchCount = _),
              (d.button = _ - 1),
              p && 0 < p.length)
            ) {
              for (
                var f, m, g, v = -1, y = -1, b = ((l = 0), 0), D = p.length;
                b < D;
                ++b
              )
                (f = p[b]),
                  R === f.identifier && (v = b),
                  F === f.identifier && (y = b),
                  (o += f.pageX),
                  (s += f.pageY),
                  l++;
              if (0 < l)
                if (
                  ((i = !0),
                  (o /= l),
                  (s /= l),
                  d.button < 0 && (d.button = p.length - 1),
                  0 <= v)
                )
                  if ((m = p[v]))
                    if (
                      ((d.primaryX = m.pageX), (d.primaryY = m.pageY), 0 <= y)
                    )
                      if ((g = p[y])) {
                        (u = g.pageX - m.pageX), (c = g.pageY - m.pageY);
                        (A = Math.sqrt(u * u + c * c)),
                          (d.rotation = -Math.atan2(c, u) * pd.Const.RAD2DEG),
                          (n = !0);
                      }
              (f = p[Math.max(0, v)]), (d.x = f.pageX), (d.y = f.pageY);
            }
          }
        if (e && e.getBoundingClientRect) {
          var M = 1 / pdDOM.pageScale,
            x = e.getBoundingClientRect();
          x.left &&
            ((o -= x.left * M),
            (d.primaryX -= x.left * M),
            (d.x -= x.left * M)),
            x.top &&
              ((s -= x.top * M), (d.primaryY -= x.top * M), (d.y -= x.top * M));
        }
        switch (t.type.toLowerCase()) {
          case "pointerdown":
            if (!r) {
              (C.x = d.x),
                (C.y = d.y),
                (S.x = 0),
                (S.y = 0),
                (z.x = 0),
                (z.y = 0);
              break;
            }
            d.button = _;
          case "mousedown":
          case "touchstart":
            (z.x = 0),
              (z.y = 0),
              (S.x = 0),
              (S.y = 0),
              (C.x = d.x),
              (C.y = d.y),
              n && ((O = A), (V = d.rotation), (d.rotation = 0));
            break;
          case "pointermove":
            r
              ? (d.button = _ - 1)
              : d.button < 0 &&
                t.button < 0 &&
                (0 < t.buttons
                  ? 1 & t.buttons
                    ? (d.button = 0)
                    : 4 & t.buttons
                    ? (d.button = 1)
                    : 2 & t.buttons
                    ? (d.button = 2)
                    : 8 & t.buttons
                    ? (d.button = 3)
                    : 16 & t.buttons
                    ? (d.button = 4)
                    : 32 & t.buttons && (d.button = 5)
                  : a && (d.button = a.button));
          case "touchmove":
          case "mousemove":
            if (r) {
              if (
                ((P = t.timeStamp),
                0 <= d.button && i
                  ? ((d.dragX = o - w.x), (d.dragY = s - w.y))
                  : a && ((d.dragX = d.x - a.x), (d.dragY = d.y - a.y)),
                0 < d.button && n)
              ) {
                var T = d.rotation;
                (d.scale = 0 < O ? A / O : 1),
                  (O = A),
                  (d.rotation -= V),
                  (V = T);
              }
              t.preventDefault();
            } else a && ((d.dragX = d.x - a.x), (d.dragY = d.y - a.y));
            (!r || (Math.abs(d.dragX) < 50 && Math.abs(d.dragY) < 50)) &&
              ((z.x += Math.abs(d.dragX)),
              (z.y += Math.abs(d.dragY)),
              (S.x += d.dragX),
              (S.y += d.dragY));
            break;
          case "touchend":
          case "touchcancel":
          case "pointerup":
          case "pointercancel":
            r && d.button < 0 && (d.button = Math.max(0, _ - 1));
            break;
          case "mouseup":
            0 <= d.button && (_ = 0);
            break;
          case "wheel":
          case "mousewheel":
          case "dommousescroll":
            d.delta = pd.sign(pdDOM.getScrollIncrement(t));
            break;
          case "keydown":
            (d.delta = pdDOM.getKbdIncrement(t)),
              0 != d.delta && (d.delta = pd.sign(d.delta));
        }
        return (
          r && i && ((w.x = o), (w.y = s)), a && ((a.x = d.x), (a.y = d.y)), d
        );
      }),
      (pdDOM.Interaction.makeInteractive = function (l, h) {
        (h = h || {}),
          (l.style.touchAction = "none"),
          l.classList.add("no-select", "no-touch");
        var o = 0,
          s = 0,
          d = 0,
          n = 0,
          u = 0,
          c = 0,
          p = h.dragElement || document,
          e = null,
          f = null;
        function r() {
          (f = null), h.onlongpress && h.onlongpress(e);
        }
        function m(t) {
          f && (clearTimeout(f), (f = null)), (f = setTimeout(r, B)), (e = t);
        }
        function g() {
          f && (clearTimeout(f), (f = null));
        }
        function v(t, e) {
          setTimeout(function () {
            t(e);
          }, 25);
        }
        function i(t) {
          if (!I && h.onmove) {
            t.preventDefault();
            var e = pdDOM.Interaction.createEvent(t, l);
            h.onmove(e);
          }
        }
        function t(t) {
          var e,
            r = !1;
          (t.preventDefault(),
          t.timeStamp || (t.timeStamp = Date.now()),
          (o = Date.now()),
          null == E &&
            ((E = l),
            (P = t.timeStamp),
            h.onmove && l.removeEventListener("pointermove", i),
            l.addEventListener("pointermove", b),
            l.addEventListener("pointercancel", T),
            l.addEventListener("pointerup", T),
            (r = !0)),
          t.pointerType && "touch" == t.pointerType
            ? ((L[t.pointerId] = Y(t)),
              R < 0 && (R = +t.pointerId),
              R != t.pointerId && (F < 0 || F == R) && (F = +t.pointerId))
            : (I = Y(t)),
          r) &&
            (h.onpress &&
              ((e = pdDOM.Interaction.createEvent(t, l)), h.onpress(e)),
            h.onlongpress && m((e = e || pdDOM.Interaction.createEvent(t, l))),
            l.setPointerCapture && l.setPointerCapture(t.pointerId));
        }
        function a(t) {
          var e;
          t.preventDefault(),
            t.timeStamp || (t.timeStamp = Date.now()),
            (d = Date.now()),
            h.onmove && l.removeEventListener("mousemove", i),
            p.addEventListener("mousemove", D),
            p.addEventListener("mouseup", w),
            (I = Y(t)),
            h.onpress &&
              ((e = pdDOM.Interaction.createEvent(t, l)), h.onpress(e)),
            h.onlongpress && m((e = e || pdDOM.Interaction.createEvent(t, l)));
        }
        function y(t) {
          var e = !1;
          h.allowDefaultOnTouch ||
            ("boolean" == typeof t.cancelable && !t.cancelable) ||
            t.preventDefault(),
            t.timeStamp || (t.timeStamp = Date.now()),
            (u = Date.now()),
            null == E &&
              ((E = l),
              p.addEventListener("touchmove", M),
              p.addEventListener("touchcancel", A),
              p.addEventListener("touchend", A),
              (e = !0));
          var r = t.touches || t.targetTouches;
          (_ = r ? r.length : Math.min(10, _ + 1)), (P = t.timeStamp);
          var n,
            i = t.changedTouches;
          if (i && 0 < i.length)
            for (var a = 0, o = i.length; a < o; ++a)
              L[i[a].identifier] = Y(i[a]);
          if (R < 0 || F < 0) {
            var s = (function (t, e, r) {
              (e = pd.toNumber(e, -1)), (r = pd.toNumber(r, -1));
              var n = t.touches || t.targetTouches;
              return (
                n &&
                  0 < n.length &&
                  (1 < n.length && e == (r = n[1].identifier) && (e = -1),
                  e < 0 && (e = n[0].identifier)),
                [e, r]
              );
            })(t, R, F);
            (R = s[0]), (F = s[1]);
          }
          e &&
            (h.onpress &&
              ((n = pdDOM.Interaction.createEvent(t, l)), h.onpress(n)),
            h.onlongpress && m((n = n || pdDOM.Interaction.createEvent(t, l))));
        }
        function b(t) {
          t.preventDefault();
          var e = L[t.pointerId];
          if (
            (e && ((e.pageX = t.pageX), (e.pageY = t.pageY)),
            H() && ((o = d = 0), f && g()),
            h.ondrag)
          ) {
            var r = pdDOM.Interaction.createEvent(t, l);
            Math.abs(r.dragX) < 50 && Math.abs(r.dragY) < 50 && h.ondrag(r);
          }
        }
        function D(t) {
          if ((t.preventDefault(), h.ondrag)) {
            var e = pdDOM.Interaction.createEvent(t, l);
            h.ondrag(e);
          }
          H() && ((d = 0), f && g());
        }
        function M(t) {
          if (
            (h.allowDefaultOnTouch ||
              ("boolean" == typeof t.cancelable && !t.cancelable) ||
              t.preventDefault(),
            H() && ((u = 0), f && g()),
            h.ondrag)
          ) {
            var e = pdDOM.Interaction.createEvent(t, l);
            Math.abs(e.dragX) < 50 && Math.abs(e.dragY) < 50 && h.ondrag(e);
          }
        }
        function x() {
          l.removeEventListener("pointermove", b),
            l.removeEventListener("pointercancel", T),
            l.removeEventListener("pointerup", T),
            h.onmove && l.addEventListener("pointermove", i);
        }
        function T(t) {
          var e,
            r = !1,
            n = Date.now();
          if (
            (t.preventDefault(),
            t.timeStamp || (t.timeStamp = n),
            l.releasePointerCapture && l.releasePointerCapture(t.pointerId),
            f && g(),
            (e = pdDOM.Interaction.createEvent(t, l)),
            0 < o && B < n - o && (e.longPress = !0),
            t.pointerType && "touch" == t.pointerType)
          ) {
            delete L[t.pointerId],
              R == t.pointerId ? (R = F = -1) : F == t.pointerId && (F = -1);
            var i = 0;
            for (var a in L) L.hasOwnProperty(a) && i++;
            i <= 0 && (x(), (r = !0));
          } else (I = null), x(), U(), (r = !0);
          r &&
            (h.onrelease && h.onrelease(e),
            h.onlongclick && e.longPress
              ? v(h.onlongclick, e)
              : h.ondoubletap &&
                0 < o &&
                o - s < 400 &&
                (e.isTouchEvent || 0 < e.button) &&
                v(h.ondoubletap, e),
            (s = o),
            0 < d && (d = 0),
            (o = 0));
        }
        function w(t) {
          var e,
            r = Date.now();
          t.preventDefault(),
            t.timeStamp || (t.timeStamp = r),
            f && g(),
            (e = pdDOM.Interaction.createEvent(t, l)),
            0 < d && B < r - d && (e.longPress = !0),
            p.removeEventListener("mousemove", D),
            p.removeEventListener("mouseup", w),
            h.onmove && l.addEventListener("mousemove", i),
            h.onrelease && h.onrelease(e),
            h.onlongclick && e.longPress
              ? v(h.onlongclick, e)
              : h.ondoubletap &&
                0 < d &&
                d - n < 400 &&
                0 < e.button &&
                v(h.ondoubletap, e),
            (n = d),
            (d = 0),
            (I = null);
        }
        function A(t) {
          var e,
            r = !1,
            n = Date.now();
          h.allowDefaultOnTouch ||
            ("boolean" == typeof t.cancelable && !t.cancelable) ||
            t.preventDefault(),
            t.timeStamp || (t.timeStamp = n),
            f && g(),
            (e = pdDOM.Interaction.createEvent(t, l)),
            0 < u && B < n - u && (e.longPress = !0);
          var i = t.touches || t.targetTouches;
          (_ = i ? i.length : 0), (P = t.timeStamp);
          var a = t.changedTouches;
          if (a && 0 < a.length)
            for (var o = 0, s = a.length; o < s; ++o) {
              var d = a[o].identifier;
              delete L[d], R == d ? (R = F = -1) : F == d && (F = -1);
            }
          _ <= 0 &&
            (p.removeEventListener("touchmove", M),
            p.removeEventListener("touchcancel", A),
            p.removeEventListener("touchend", A),
            (r = !0),
            U()),
            r &&
              (0 < u && B < n - u && (e.longPress = !0),
              h.onrelease && h.onrelease(e),
              e.longPress && h.onlongclick
                ? v(h.onlongclick, e)
                : h.ondoubletap && 0 < u && u - c < 400 && v(h.ondoubletap, e),
              (c = u),
              (u = 0));
        }
        function O(t) {
          if (h.ondoubletap) {
            t.preventDefault();
            var e = pdDOM.Interaction.createEvent(t, l);
            h.ondoubletap(e);
          }
        }
        function V(t) {
          if (h.onscroll) {
            var e = pdDOM.Interaction.createEvent(t, l);
            e.delta && (h.onscroll(e), t.preventDefault());
          }
        }
        function C(t) {
          h.onkeydown ? h.onkeydown(t) : V(t);
        }
        function S(t) {
          h.onkeyup && h.onkeyup(t);
        }
        return (
          k && !h.simple
            ? (l.addEventListener("pointerdown", t),
              h.onmove && l.addEventListener("pointermove", i))
            : (l.addEventListener("mousedown", a),
              h.onmove && l.addEventListener("mousemove", i),
              N && l.addEventListener("touchstart", y)),
          h.ondoubletap && l.addEventListener("dblclick", O),
          h.onscroll &&
            (l.addEventListener("DOMMouseScroll", V),
            l.addEventListener("mousewheel", V),
            l.addEventListener("wheel", V)),
          (h.onkeydown || h.onscroll) && l.addEventListener("keydown", C),
          h.onkeyup && l.addEventListener("keyup", S),
          (this.setCallback = function (t, e) {
            if (!h[t])
              switch (t) {
                case "onmove":
                  l.addEventListener("pointermove", i),
                    l.addEventListener("mousemove", i);
                  break;
                case "ondoubletap":
                  l.addEventListener("dblclick", O);
                  break;
                case "onscroll":
                  l.addEventListener("DOMMouseScroll", V),
                    l.addEventListener("mousewheel", V),
                    l.addEventListener("wheel", V),
                    h.onkeydown || l.addEventListener("keydown", C);
                  break;
                case "keydown":
                  h.onscroll || l.addEventListener("keydown", C);
                  break;
                case "keyup":
                  l.addEventListener("keyup", S);
              }
            h[t] = e;
          }),
          (this.dispose = function () {
            k && !h.simple
              ? (l.removeEventListener("pointerdown", t),
                h.onmove && l.removeEventListener("pointermove", i))
              : (l.removeEventListener("mousedown", a),
                h.onmove && l.addEventListener("mousemove", i)),
              N && l.removeEventListener("touchstart", y),
              h.ondoubletap && l.addEventListener("dblclick", O),
              h.onscroll &&
                (l.removeEventListener("DOMMouseScroll", V),
                l.removeEventListener("mousewheel", V),
                l.removeEventListener("wheel", V)),
              (h.onkeydown || h.onscroll) &&
                l.removeEventListener("keydown", C),
              h.onkeyup && l.removeEventListener("keyup", S);
          }),
          this
        );
      });
  })(),
  (function () {
    function T(t) {
      return ko.isObservable(t) ? +t() : +t;
    }
    function w(t, e) {
      var r = ko.isObservable(t) ? t() : t;
      return pd.isNumeric(r) ? +r : e;
    }
    function A(t) {
      return ko.isObservable(t) ? t() : t;
    }
    function O(t, e, r, n, i, a, o, s, d) {
      if (e && t && i < a) {
        t.shiftKey
          ? (o = pd.toNumber(d, 50 * o))
          : t.ctrlKey || t.metaKey || (o = pd.toNumber(s, 5 * o));
        var l = pd.constrainTo(parseFloat(n()) + e * o, i, a);
        n(pd.snapTo(l, e * o));
      }
    }
    (ko.loadExternalTemplates = function (r) {
      var n = 'script[src][type="text/html"]:not([loaded])',
        t = $(n);
      ko.utils.arrayForEach(t, function (t) {
        var e = $(t);
        e.load(
          e.attr("src"),
          function () {
            this.attr("loaded", !0), $(n).length || r();
          }.bind(e)
        );
      });
    }),
      (ko.observableArray.fn.refresh = function (t) {
        var e = this.indexOf(t);
        0 <= e && (this.splice(e, 1), this.splice(e, 0, t));
      }),
      (ko.extenders.paged = function (o, t) {
        var s = ko.observable(1),
          d = ko.observable(pd.toInteger(t, 5)),
          l = ko.observable(!1),
          h = ko.observable(!1),
          u = ko.observable(1),
          e = ko.computed(function () {
            var t = s(),
              e = o().length,
              r = Math.max(1, d()),
              n = Math.max(1, Math.ceil(e / r)),
              i = pd.constrainTo((t - 1) * r, 0, e - r),
              a = pd.constrainTo(i + r, 0, e);
            return u(n), l(i < e - r), h(0 < i), n < t && s(n), o().slice(i, a);
          });
        return (
          (e.totalPages = u),
          (e.currentPage = s),
          (e.itemsPerPage = d),
          (e.nextEnabled = l),
          (e.prevEnabled = h),
          (e.next = function () {
            l() && (l(!1), s(s() + 1));
          }),
          (e.prev = function () {
            h() && (h(!1), s(s() - 1));
          }),
          e
        );
      }),
      (ko.extenders.fixedPrecision = function (i, a) {
        var t = ko
          .pureComputed({
            read: i,
            write: function (t) {
              var e = i(),
                r = isNaN(t) ? 0 : parseFloat(t),
                n = pd.toStringWithPrecision(r, a);
              n !== e ? i(n) : t !== e && i.notifySubscribers(n);
            },
          })
          .extend({ notify: "always" });
        return t(i()), t;
      }),
      (ko.bindingHandlers.href = {
        update: function (t, e) {
          ko.bindingHandlers.attr.update(t, function () {
            return { href: e() };
          });
        },
      }),
      (ko.bindingHandlers.src = {
        update: function (t, e) {
          ko.bindingHandlers.attr.update(t, function () {
            return { src: e() };
          });
        },
      }),
      (ko.bindingHandlers.booleanValue = {
        init: function (t, e) {
          var r = e(),
            n = ko.computed({
              read: function () {
                return r().toString();
              },
              write: function (t) {
                r("true" === t);
              },
            });
          ko.applyBindingsToNode(t, { value: n });
        },
      }),
      (ko.bindingHandlers.hidden = {
        update: function (t, e) {
          var r = ko.utils.unwrapObservable(e());
          ko.bindingHandlers.visible.update(t, function () {
            return !r;
          });
        },
      }),
      (ko.bindingHandlers.numeric = {
        init: function (t, e, r, n, i) {
          var a = e();
          if (!ko.isWriteableObservable(a))
            throw "You must pass a Knockout observable or writeable computed";
          var o = r.get("precisionMax") || 0,
            s = r.get("precision") || 0,
            d = ko.computed({
              disposeWhenNodeIsRemoved: t,
              read: function () {
                var t = +a(),
                  e = T(o),
                  r = T(s);
                return r < e
                  ? pd.toStringWithPrecisionRange(t, r, e)
                  : 0 <= r
                  ? t.toFixed(r)
                  : t.toString();
              },
              write: function (t) {
                a(parseFloat(t));
              },
            });
          "SELECT" == t.nodeName || "INPUT" == t.nodeName
            ? ko.applyBindingsToNode(t, { value: d }, i)
            : ko.applyBindingsToNode(t, { text: d }, i);
        },
      }),
      (ko.bindingHandlers.currencyValue = {
        init: function (t, e) {
          var r = e() || {},
            n = ko.isObservable(r.value) ? r.value : ko.observable(0),
            i = ko.unwrap(r.symbol) || "£",
            a = ko.pureComputed({
              read: function () {
                return i + parseFloat(n()).toFixed(2);
              },
              write: function (t) {
                var e = n(),
                  r = parseFloat(t.replace(i, ""));
                r !== e ? n(r) : t !== e.toString() && n.valueHasMutated();
              },
            });
          ko.applyBindingsToNode(t, { value: a });
        },
      }),
      (ko.bindingHandlers.angleValue = {
        init: function (t, e) {
          var n = e(),
            r = ko.pureComputed({
              read: function () {
                return pd.toStringWithPrecisionRange(n(), 2, 9) + "°";
              },
              write: function (t) {
                var e = n(),
                  r = parseFloat(t);
                r !== e ? n(r) : t !== e.toString() && n.valueHasMutated();
              },
            });
          ko.applyBindingsToNode(t, { value: r });
        },
      }),
      (ko.bindingHandlers.angleText = {
        init: function (t, e) {
          var r = e(),
            n = ko.pureComputed(function () {
              var t = r();
              return isNaN(t)
                ? "-"
                : pd.toStringWithPrecisionRange(t, 2, 9) + "°";
            });
          ko.applyBindingsToNode(t, { text: n });
        },
      }),
      (ko.bindingHandlers.timeText = {
        init: function (t, e) {
          var r = e(),
            n = ko.pureComputed(function () {
              return pd.DateTime.formatTime(r());
            });
          ko.applyBindingsToNode(t, { text: n });
        },
      }),
      (ko.bindingHandlers.toFixed = {
        init: function (t, e, r) {
          var n = e(),
            i = r.get("precision");
          if (!ko.isObservable(n)) {
            var a = e() || {};
            (n = ko.isObservable(a.value) ? a.value : ko.observable(0)),
              (i = a.precision);
          }
          null == i && (i = 2);
          var o = ko.pureComputed(function () {
            var t = Math.round(T(i));
            return (+n() || 0).toFixed(t);
          });
          ko.applyBindingsToNode(t, { text: o });
        },
      }),
      (ko.bindingHandlers.fixedPrecision = {
        init: function (t, e, r) {
          var n = e(),
            i = r.get("precision");
          if (!ko.isObservable(n)) {
            var a = e() || {};
            (n = ko.isObservable(a.value) ? a.value : ko.observable(0)),
              (i = a.precision);
          }
          null == i && (i = 2);
          var o = ko.pureComputed(function () {
            var t = Math.round(T(i));
            return parseFloat(+n() || 0).toFixed(t);
          });
          ko.applyBindingsToNode(t, { text: o });
        },
      }),
      (ko.bindingHandlers.contentEditable = {
        init: function (t, e) {
          var r = e();
          ko.applyBindingsToNode(t, { text: r }),
            t.addEventListener("blur", function () {
              ko.isWriteableObservable(r) && r(this.textContent.trim());
            }),
            (t.contentEditable = !0);
        },
      }),
      (ko.bindingHandlers.clickWithoutFocus = {
        init: function (t, e, r, n, i) {
          var a = $(t);
          ko.utils.registerEventHandler(
            a,
            window.PointerEvent ? "pointerdown" : "mousedown touchstart",
            function (t) {
              ((void 0 !== t.button && t.button <= 0) || 0 == t.which) &&
                t.type &&
                "touchstart" == t.type &&
                a.click(),
                t.preventDefault();
            }
          ),
            ko.bindingHandlers.click.init(t, e, r, n, i);
        },
      }),
      (ko.bindingHandlers.repeatButton = {
        init: function (t, e, r, n, i) {
          var a = $(t),
            o = r.get("interval") || 100,
            s = r.get("delay") || 400,
            d = null,
            l = null;
          ko.utils.registerEventHandler(
            t,
            window.PointerEvent ? "pointerdown" : "mousedown touchstart",
            function (t) {
              ((void 0 !== t.button && t.button <= 0) || 0 == t.which) &&
                (t.type && "touchstart" == t.type && a.click(),
                (l = setTimeout(function () {
                  d = setInterval(function () {
                    a.click();
                  }, T(o));
                }, T(s)))),
                t.preventDefault();
            }
          ),
            ko.utils.registerEventHandler(
              t,
              "mouseup mouseout touchend touchcancel touchleave pointerup pointerleave",
              function () {
                d && (clearInterval(d), (d = null)),
                  l && (clearTimeout(l), (l = null));
              }
            ),
            ko.bindingHandlers.click.init(t, e, r, n, i);
        },
      }),
      (ko.bindingHandlers.radioButton = {
        init: function (t, e, r) {
          var n,
            i,
            a = e();
          if (!ko.isWriteableObservable(a))
            throw "You must pass a Knockout observable or writeable computed";
          (n = (i = $(t)).hasClass("btn") ? i : $(".btn", i)),
            (a.shiftKey = !1);
          var o = r();
          n.each(function () {
            var e = $(this),
              r =
                void 0 !== o.radioValue
                  ? o.radioValue
                  : void 0 !== e.attr("data-value")
                  ? e.attr("data-value")
                  : void 0 !== e.attr("value")
                  ? e.attr("value")
                  : e.text();
            return (
              e.on("click", function (t) {
                (a.shiftKey = t.shiftKey),
                  a(ko.utils.unwrapObservable(r)),
                  e.blur();
              }),
              e.blur(),
              ko.computed({
                disposeWhenNodeIsRemoved: this,
                read: function () {
                  var t = a() === ko.utils.unwrapObservable(r);
                  e.toggleClass("btn-info", t).toggleClass("active", t);
                },
              })
            );
          });
        },
      }),
      (ko.bindingHandlers.checkButton = {
        init: function (t, e) {
          var r = e();
          if (!ko.isWriteableObservable(r))
            throw "You must pass a Knockout observable or writeable computed";
          var n = $(t);
          function i() {
            var t = !!r();
            n.toggleClass("active", t),
              n.hasClass("btn") && n.toggleClass("btn-info", t);
          }
          i(),
            r.subscribe(i),
            n.on("click", function () {
              r(!n.hasClass("active")), n.blur();
            });
        },
      }),
      (ko.bindingHandlers.radioMenuItem = {
        init: function (t, e, r) {
          var n,
            i,
            a = e();
          if (!ko.isWriteableObservable(a))
            throw "You must pass a Knockout observable or writeable computed";
          n =
            "menuitem" == (i = $(t)).attr("role")
              ? i
              : $("a[role=menuitem]", i);
          var o = r();
          n.each(function () {
            var e = $(this),
              r =
                void 0 !== o.radioValue
                  ? o.radioValue
                  : void 0 !== e.attr("data-value")
                  ? e.attr("data-value")
                  : void 0 !== e.attr("value")
                  ? e.attr("value")
                  : e.text();
            return (
              e.on("click", function () {
                a(ko.utils.unwrapObservable(r)), e.blur();
              }),
              e.blur(),
              ko.computed({
                disposeWhenNodeIsRemoved: this,
                read: function () {
                  var t = a() === ko.utils.unwrapObservable(r);
                  e.toggleClass("active", t),
                    e
                      .find(".icon")
                      .toggleClass("icon-radio-unchecked", !t)
                      .toggleClass("icon-radio-checked", t);
                },
              })
            );
          });
        },
      }),
      (ko.bindingHandlers.checkMenuItem = {
        init: function (t, e) {
          var r = e();
          if (!ko.isWriteableObservable(r))
            throw "You must pass a Knockout observable or writeable computed";
          var n = $(t);
          function i() {
            var t = !!r();
            n.toggleClass("active", t),
              n
                .find(".icon")
                .toggleClass("icon-unchecked", !t)
                .toggleClass("icon-checked", t);
          }
          i(),
            r.subscribe(i),
            n.on("click", function () {
              r(!n.hasClass("active")), n.blur();
            });
        },
      }),
      (ko.bindingHandlers.table = {
        init: function () {
          return { controlsDescendantBindings: !0 };
        },
        update: function (t, e) {
          var r = ko.utils.unwrapObservable(e()) || [],
            n = pd.isArray(r) ? { data: r } : r,
            i = ko.utils.unwrapObservable(n.data),
            a = ko.utils.unwrapObservable(n.dataClass),
            o = ko.utils.unwrapObservable(n.header),
            s = ko.utils.unwrapObservable(n.headerClass),
            d = [],
            l = 0,
            h = 0,
            u = "",
            c = "<table>";
          if (o && o.length) {
            c += "<thead>";
            for (var p = 0; p < o.length; ++p) {
              var f = o[p];
              if (f && f.length) {
                c += '<tr class="top' + p + '">';
                for (var m = 0; m < f.length; ++m) {
                  var g = f[m];
                  (c += "<th"),
                    (d = []),
                    (h = l = 0),
                    pd.isObject(g)
                      ? (g.itemClass && d.push(g.itemClass.toString()),
                        g.colspan && (l = pd.toNumber(g.colspan)),
                        g.rowspan && (h = pd.toNumber(g.rowspan)),
                        (u = g.value ? g.value.toString() : ""))
                      : (u = g ? g.toString() : ""),
                    s && d.push(s),
                    d.length && (c += ' class="' + d.join(" ") + '"'),
                    0 < l && (c += ' colspan="' + Math.round(l) + '"'),
                    0 < h && (c += ' rowspan="' + Math.round(h) + '"'),
                    (c += ">" + u + "</th>");
                }
                c += "</tr>";
              }
            }
            c += "</thead>";
          }
          if (i && i.length) {
            (c += "<tbody>"),
              a && (a = ' class="' + a.toString() + '"'),
              (d = []);
            for (p = h = l = 0; p < i.length; ++p) {
              var v = i[p];
              if (v && v.length) {
                c += "<tr>";
                for (m = 0; m < v.length; ++m) {
                  c += "<td";
                  var y = v[m];
                  a && (c += a),
                    (c += ">" + (u = y ? y.toString() : "") + "</td>");
                }
                c += "</tr>";
              }
            }
            c += "</tbody>";
          }
          for (c += "</table>"; t.firstChild; ) ko.removeNode(t.firstChild);
          var b = t.ownerDocument.createElement("div");
          b.innerHTML = c;
          for (var D = b.firstChild; D.firstChild; )
            t.appendChild(D.firstChild);
        },
      }),
      (ko.bindingHandlers.editableDimension = {
        init: function (r, t, e, n, i) {
          var a = t(),
            o = e().numericOptions || {},
            s = e.get("step") || 0,
            d = o.formatter || a.formatter;
          (d && ko.isObservable(d)) ||
            (d = ko.pureComputed({
              read: function () {
                return pd.Dimension.formatDimension(
                  +a(),
                  pd.Dimension.type,
                  -1,
                  !0
                );
              },
              write: function (t) {
                a(pd.Dimension.parseDimension(t));
              },
              owner: this,
            }));
          var l = o.incrementor || a.incrementor;
          (l && "function" == typeof l) ||
            (l = function (t, e) {
              if (t && e) {
                var r = T(s);
                r < 1e-6 && (r = pd.Dimension.getDefaultStep());
                var n = pd.Dimension.incrementDimension(t, e, a(), r);
                a(n);
              }
            }),
            ko.utils.registerEventHandler(
              r,
              "wheel mousewheel DOMMouseScroll",
              function (t) {
                var e = pdDOM.getScrollIncrement(t);
                e && (l(t, e, a), t.preventDefault());
              }
            ),
            ko.utils.registerEventHandler(r, "keydown", function (t) {
              if (13 == t.which)
                return d($(r).val()), void $(r).focus().select();
              if (l) {
                var e = pdDOM.getKbdIncrement(t);
                e && l(t, e, a);
              }
            }),
            ko.utils.registerEventHandler(r, "blur", function () {
              d($(r).val());
            });
          var h = e.get("dblclick") || null;
          h &&
            ko.utils.registerEventHandler(r, "dblclick", function (t) {
              h(t, $(r), a);
            }),
            "SELECT" == r.nodeName || "INPUT" == r.nodeName
              ? ko.applyBindingsToNode(r, { value: d }, i)
              : ko.applyBindingsToNode(r, { text: d }, i);
        },
      }),
      (ko.setValueWithoutUndo = function (t, e) {
        t && ((t.undoIgnore = !0), t(e), (t.undoIgnore = !1));
      }),
      (ko.UndoRedoQueue = function () {
        var o = ko.observableArray([]),
          s = ko.observableArray([]),
          d = !1,
          a = !1;
        function r(t) {
          return { value: ko.utils.unwrapObservable(t()), item: t };
        }
        (this.isWorking = function () {
          return d;
        }),
          (this.canUndo = ko.pureComputed(function () {
            return 256 < o().length && o().shift(), 0 < o().length;
          })),
          (this.canRedo = ko.pureComputed(function () {
            return 0 < s().length;
          })),
          (this.undo = function () {
            if (0 < o().length) {
              var t,
                e,
                r = [],
                n = o.pop();
              d = !0;
              for (var i = 0, a = n.length; i < a; i++)
                (e = n[i].item),
                  (t =
                    "state" in n[i]
                      ? n[i].state
                      : ko.utils.unwrapObservable(e())),
                  e(n[i].value),
                  e.onUndo &&
                    "function" == typeof e.onUndo &&
                    e.onUndo(n[i].value),
                  "state" in n[i] && (n[i].state = n[i].value),
                  (n[i].value = t),
                  r.push(n[i]);
              0 < r.length && s.push(r), (d = !1);
            }
            return this;
          }),
          (this.redo = function () {
            if (0 < s().length) {
              var t,
                e,
                r = [],
                n = s.pop();
              d = !0;
              for (var i = 0, a = n.length; i < a; i++)
                (e = n[i].item),
                  (t =
                    "state" in n[i]
                      ? n[i].state
                      : ko.utils.unwrapObservable(e())),
                  e(n[i].value),
                  e.onUndo &&
                    "function" == typeof e.onUndo &&
                    e.onUndo(n[i].value),
                  "state" in n[i] && (n[i].state = n[i].value),
                  (n[i].value = t),
                  r.push(n[i]);
              0 < r.length && o.push(r), (d = !1);
            }
            return this;
          }),
          (this.reset = function () {
            return o([]), s([]), this;
          });
        var n = [];
        (this.storeValues = function () {
          for (var t = (n.length = 0), e = arguments.length; t < e; t++)
            ko.isObservable(arguments[t]) && n.push(r(arguments[t]));
          return this;
        }),
          (this.checkForChanges = function () {
            if (0 < n.length) {
              for (var t = [], e = n.length, r = 0; r < e; r++)
                n[r].value != ko.utils.unwrapObservable(n[r].item()) &&
                  t.push(n[r]);
              0 < t.length && (o.push(t), s([])), (n.length = 0);
            }
            return this;
          });
        var i = [],
          l = [],
          h = 20,
          u = 2500,
          c = -1,
          p = 0;
        function f() {
          if (!d && !a && !this.undoIgnore && 0 <= this.undoIndex) {
            var t = new Date().getTime(),
              e = +this.undoIdleThreshold || u;
            this.undoIndex != c
              ? t - p < h && 0 < o().length
                ? o()[o().length - 1].push(r(this))
                : (o.push([r(this)]), s([]))
              : (this.undoNoCollation || t - this.undoTime > e) &&
                (o.push([r(this)]), s([])),
              (c = this.undoIndex),
              (this.undoTime = t),
              (p = t);
          }
        }
        (this.addUndoEntry = function (t, e, r) {
          if (!d && !a && ko.isObservable(t) && !t.undoIgnore) {
            var n = new Date().getTime(),
              i = { state: r, value: e, item: t };
            n - p < h && 0 < o().length
              ? o()[o().length - 1].push(i)
              : (o.push([i]), s([])),
              (c = -1),
              (this.undoTime = n),
              (p = n);
          }
          return this;
        }),
          (this.add = function () {
            for (var t = 0, e = arguments.length; t < e; t++)
              ko.isObservable(arguments[t]) &&
                (i.push({
                  item: arguments[t],
                  value: ko.utils.unwrapObservable(arguments[t]()),
                }),
                l.push(arguments[t].subscribe(f, arguments[t], "beforeChange")),
                (arguments[t].undoIndex = i.length - 1),
                (arguments[t].undoIgnore = !1),
                (arguments[t].undoTime = 0));
            return this;
          }),
          (this.addPostMonitor = function () {
            for (var t = 0, e = arguments.length; t < e; t++)
              ko.isObservable(arguments[t]) &&
                (i.push({
                  item: arguments[t],
                  value: ko.utils.unwrapObservable(arguments[t]()),
                }),
                l.push(arguments[t].subscribe(f, arguments[t])),
                (arguments[t].undoIndex = i.length - 1),
                (arguments[t].undoIgnore = !1),
                (arguments[t].undoTime = 0));
            return this;
          }),
          (this.clear = function () {
            for (var t = 0, e = l.length; t < e; t++) l.dispose();
            return (l.length = 0), (i.length = 0), (a = !1), this;
          });
        var m = [];
        return (
          (this.pause = function () {
            if (!d && !a) {
              (m.length = 0), (a = !0);
              for (var t = 0, e = i.length; t < e; t++) m.push(r(i[t].item));
            }
            return this;
          }),
          (this.resume = function () {
            if (!d) {
              if (a && 0 < m.length) {
                for (var t = [], e = 0, r = m.length; e < r; e++)
                  m[e].value != ko.utils.unwrapObservable(m[e].item()) &&
                    t.push(m[e]);
                0 < t.length && (o.push(t), s([])), (m.length = 0);
              }
              a = !1;
            }
            return this;
          }),
          (this.stop = function () {
            return (d = !0), this;
          }),
          (this.start = function () {
            return (d = !1), a && this.resume(), this;
          }),
          this
        );
      }),
      (ko.undoableObservable = function (t) {
        var r = ko.observable(t),
          n = ko.observableArray([]),
          i = ko.observableArray([]),
          e = ko.computed({
            read: function () {
              return r();
            },
            write: function (t) {
              var e = r();
              void 0 !== e && n.push(e), r(t), i([]);
            },
          });
        return (
          (e.undoable = ko.pureComputed(function () {
            return 0 < n().length;
          })),
          (e.redoable = ko.pureComputed(function () {
            return 0 < i().length;
          })),
          (e.undo = function () {
            if (0 < n().length) {
              var t = n.pop();
              i.push(r()),
                r(t),
                e.onUndo && "function" == typeof e.onUndo && e.onUndo(t);
            }
          }),
          (e.redo = function () {
            if (0 < i().length) {
              var t = i.pop();
              n.push(r()),
                r(t),
                e.onUndo && "function" == typeof e.onUndo && e.onUndo(t);
            }
          }),
          (e.reset = function () {
            n([]), i([]);
          }),
          (e.getUndoStack = function () {
            return n();
          }),
          (e.getRedoStack = function () {
            return i();
          }),
          e
        );
      }),
      (ko.bindingHandlers.valueSlider = {
        init: function (t, e, r) {
          var h = e();
          if (!ko.isWriteableObservable(h))
            throw "You must pass a Knockout observable or writeable computed";
          var s = $(t),
            u = r.get("min") || 0,
            c = r.get("max") || 100,
            p = r.get("step") || 0.1,
            f = r.get("minor") || null,
            m = r.get("major") || null,
            n = r.get("enable") || !0,
            i = r.get("dblclick") || null,
            a = r.get("tapclick") || null,
            o = r.get("height") || "4px",
            g = r.get("wrap") || !1,
            v = T(n);
          function d() {
            var t = T(u),
              e = T(c),
              r = pd.safeDivide(parseFloat(h()) - t, e - t),
              n = A(o).toString();
            s.css("background-size", 1 + 99 * r + "% " + n);
          }
          var y = pd.toInteger(r.get("width"), 1);
          function l(t) {
            s.css("opacity", t ? "1.0" : "0.35"), (v = !!t);
          }
          s.toggleClass("value-slider", !0),
            h.subscribe(d),
            d(),
            ko.isObservable(n) && (n.subscribe(l), v || l(!1));
          var b = 0,
            D = r.get("incrementor") || h.incrementor;
          function M(t, e) {
            if (v && e) {
              var r = T(u),
                n = T(c),
                i = T(p),
                a = w(f, 5 * i),
                o = w(m, 50 * i);
              e(t, s, h, r, n, i, a, o), t.preventDefault();
            }
          }
          function x(t) {
            v && i && M(t, i);
          }
          D || "function" == typeof D || (D = O),
            pdDOM.Interaction.makeInteractive(t, {
              onpress: function (t) {
                v &&
                  0 <= t.button &&
                  t.button < 2 &&
                  ((y = Math.max(s.width(), 1)), (b = parseFloat(h())));
              },
              ondrag: function (t) {
                if (v && 0 <= t.button && t.button < 2) {
                  var e,
                    r = t.dragX * pdDOM.pageScale,
                    n = T(u),
                    i = T(c),
                    a = T(p),
                    o = w(f, 5 * a),
                    s = w(m, 50 * a),
                    d = A(g),
                    l = 0;
                  0 == t.button
                    ? (l = (r / y) * (i - n))
                    : 1 == t.button &&
                      ((l =
                        0.25 *
                        pd.sign(r) *
                        pd.interpolate(
                          a,
                          s,
                          Math.min(1, (Math.abs(r) - 1) / 20)
                        )),
                      (t.metaKey = !0)),
                    (b = d
                      ? pd.wrapAt(b + l, n, i)
                      : pd.constrainTo(b + l, n, i)),
                    (e = t.shiftKey
                      ? s
                      : 1 == t.button || t.ctrlKey || t.metaKey
                      ? a
                      : o),
                    h(pd.snapTo(b, e));
                }
              },
              onrelease: function (t) {
                a &&
                  v &&
                  0 <= t.button &&
                  t.button < 2 &&
                  !t.hasMoved() &&
                  M(t, a);
              },
              onscroll: function (t) {
                if (v && t.delta) {
                  var e = T(u),
                    r = T(c),
                    n = T(p),
                    i = w(f, 5 * n),
                    a = w(m, 50 * n);
                  D(t, t.delta, s, h, e, r, n, i, a), t.preventDefault();
                }
              },
              ondoubletap: x,
              onlongclick: x,
              simple: !0,
            });
        },
      }),
      (ko.bindingHandlers.numericSlider = {
        init: function (t, e, r, n, i) {
          var a = $(t),
            o = e(),
            s = r().numericOptions || {};
          ko.isObservable(o) &&
            ko.utils.registerEventHandler(t, "input change", function () {
              o(parseFloat(a.val()));
            });
          var d = s.incrementor || o.incrementor;
          return (
            d && "function" == typeof d
              ? (ko.utils.registerEventHandler(
                  t,
                  "wheel mousewheel DOMMouseScroll",
                  function (t) {
                    var e = pdDOM.getScrollIncrement(t);
                    e && (d(t, e), t.preventDefault());
                  }
                ),
                ko.utils.registerEventHandler(t, "keydown", function (t) {
                  var e = pdDOM.getKbdIncrement(t);
                  e && d(t, e);
                }))
              : (ko.utils.registerEventHandler(
                  t,
                  "wheel mousewheel DOMMouseScroll",
                  function (t) {
                    var e = pd.toNumber(a.attr("step"), 0.1);
                    O(
                      t,
                      pdDOM.getScrollIncrement(t),
                      0,
                      o,
                      pd.toNumber(a.attr("min"), 0),
                      pd.toNumber(a.attr("max"), 100),
                      e,
                      pd.toNumber(a.attr("minor"), 5 * e),
                      pd.toNumber(a.attr("major"), 50 * e)
                    ),
                      t.preventDefault();
                  }
                ),
                ko.utils.registerEventHandler(t, "keydown", function (t) {
                  var e = pd.toNumber(a.attr("step"), 0.1);
                  O(
                    t,
                    pdDOM.getKbdIncrement(t),
                    0,
                    o,
                    pd.toNumber(a.attr("min"), 0),
                    pd.toNumber(a.attr("max"), 100),
                    e,
                    pd.toNumber(a.attr("minor"), 5 * e),
                    pd.toNumber(a.attr("major"), 50 * e)
                  );
                })),
            ko.bindingHandlers.value.init(t, e, r, n, i)
          );
        },
        update: function (t, e, r, n, i) {
          ko.bindingHandlers.value.update(t, e, r, n, i);
        },
      }),
      (ko.bindingHandlers.numericInput = {
        init: function (r, t, e, n, i) {
          var a = t(),
            o = e().numericOptions || {},
            s = o.formatter || a.formatter;
          (s && ko.isObservable(s)) || (s = a);
          var d = o.incrementor || a.incrementor;
          return (
            d &&
              "function" == typeof d &&
              ko.utils.registerEventHandler(
                r,
                "wheel mousewheel DOMMouseScroll",
                function (t) {
                  var e = pdDOM.getScrollIncrement(t);
                  e && (d(t, e, a), t.preventDefault());
                }
              ),
            ko.utils.registerEventHandler(r, "keydown", function (t) {
              if (13 == t.which)
                return s($(r).val()), void $(r).focus().select();
              if (d) {
                var e = pdDOM.getKbdIncrement(t);
                e && d(t, e, a);
              }
            }),
            ko.utils.registerEventHandler(r, "blur", function () {
              s($(r).val());
            }),
            ko.bindingHandlers.value.init(r, s, e, n, i)
          );
        },
      });
    ko.components.register("numeric-slider", {
      viewModel: function (t) {
        var d = this;
        (this.min = t.min || 0),
          (this.max = t.max || 100),
          (this.step = t.step || 1),
          (this.value = t.value || ko.observable(parseFloat(ko.unwrap(t.min)))),
          (this.title = t.title || "No Title"),
          (this.units = t.units || ""),
          (this.suffix = t.suffix || null),
          (this.noLimits = t.noLimits || !1),
          t.formatter && ko.isObservable(t.formatter)
            ? (this.formatter = t.formatter)
            : this.value.formatter && ko.isObservable(this.value.formatter)
            ? (this.formatter = this.value.formatter)
            : ((this.decimals = pd.isNumeric(t.decimals)
                ? parseInt(t.decimals, 10)
                : t.decimals || 2),
              (this.formatter = ko.pureComputed({
                read: function () {
                  var t,
                    e = A(d.suffix),
                    r = pd.toInteger(T(d.decimals), 2);
                  return (
                    (t =
                      r <= 0
                        ? parseInt(d.value(), 10).toString()
                        : pd.toStringWithPrecisionRange(+d.value(), r, 9)),
                    e && (t += e),
                    t
                  );
                },
                write: function (t) {
                  var e = pd.parseEqn(t);
                  if (
                    (pd.toInteger(T(d.decimals), 2) <= 0 && (e = Math.round(e)),
                    !T(d.noLimits))
                  ) {
                    var r = T(d.min),
                      n = T(d.max);
                    e = pd.constrainTo(e, r, n);
                  }
                  d.value(e);
                },
                owner: this,
              }))),
          t.incrementor && "function" == typeof t.incrementor
            ? (this.incrementor = t.incrementor)
            : this.value.incrementor &&
              "function" == typeof this.value.incrementor
            ? (this.incrementor = this.value.incrementor)
            : ((this.largeIncrement = t.largeIncrement || 100),
              (this.smallIncrement = t.smallIncrement || 10),
              (this.incrementor = function (t, e) {
                if ((e = parseFloat(e))) {
                  var r = T(d.largeIncrement),
                    n = T(d.smallIncrement),
                    i = T(d.step);
                  (e = t.shiftKey
                    ? 5 < Math.abs(e)
                      ? 10 * pd.sign(e) * r
                      : pd.sign(e) * r
                    : t.ctrlKey || t.metaKey
                    ? 5 < Math.abs(e)
                      ? pd.sign(e) * n
                      : pd.sign(e)
                    : 5 < Math.abs(e)
                    ? r * pd.sign(e)
                    : n * pd.sign(e)),
                    (e *= i);
                  var a = pd.incrementBy(+d.value(), e);
                  if (!T(d.noLimits)) {
                    var o = T(d.min),
                      s = T(d.max);
                    a = pd.constrainTo(a, o, s);
                  }
                  d.formatter(a);
                }
              })),
          (this.incrementValue = function (t, e, r) {
            this.incrementor(r, t);
          });
      },
      template:
        '        <table class="numeric-slider">            <tr>                <td colspan="3">                    <h4>                        <span data-bind="html: title"></span>                        <small class=\'pull-right\' data-bind="html: units"></small>                    </h4>                </td>            </tr>            <tr>                <td>                    <div class="btn-group" role="group">                        <button type="button" class="btn btn-default btn-increment no-touch" data-bind="repeatButton: $data.incrementValue.bind($data, -10)"><span class="glyphicon glyphicon-chevron-left"></span></button>                        <button type="button" class="btn btn-default btn-increment no-touch" data-bind="repeatButton: $data.incrementValue.bind($data, -1)"><small><span class="glyphicon glyphicon-chevron-left"></span></small></button>                    </div>                </td>                <td class="pad-sides-4px">                    <input type="text" data-bind="numericInput: $data.value, numericOptions: { formatter: $data.formatter, incrementor: $data.incrementor }" class="form-control text-center text-dark" />                </td>                <td>                    <div class="btn-group" role="group">                        <button type="button" class="btn btn-default btn-increment no-touch" data-bind="repeatButton: $data.incrementValue.bind($data, 1)"><small><span class="glyphicon glyphicon-chevron-right"></span></small></button>                        <button type="button" class="btn btn-default btn-increment no-touch" data-bind="repeatButton: $data.incrementValue.bind($data, 10)"><span class="glyphicon glyphicon-chevron-right"></span></button>                    </div>                </td>            </tr>            <tr>                <td colspan="3">                    <input type="range" class="numeric" data-bind="attr: { min: $data.min, max: $data.max, step: $data.step }, numericSlider: $data.value, numericOptions: { incrementor: $data.incrementor }"/>                </td>            </tr>        </table>',
    });
  })();
var pdKO = pdKO || {};
!(function () {
  function c(t, e) {
    t && ((t.undoIgnore = !0), t(e), (t.undoIgnore = !1));
  }
  function d(t, e, r) {
    return function () {
      t.callback(e, r);
    };
  }
  function r(t, e) {
    var o = this,
      r = !1,
      n = (e = e || {}).sliderid || "#slider-edit",
      i = e.id || "#popover-edit",
      s = !0,
      d = null;
    function l(t, e) {
      var r = o.getTextInput()[0];
      if (r) {
        (t = pd.toInteger(t, 0)), (e = pd.toInteger(e, t));
        var n = d.val().length;
        n < e && (e = n),
          e < t && (t = e),
          t < 0 && (t = 0),
          r.setSelectionRange
            ? r.setSelectionRange(t, e)
            : r.selectionStart &&
              ((r.selectionStart = t), (r.selectionEnd = e));
      }
    }
    (this.title = ko.observable(e.title || "Edit Numeric Value")),
      (this.min = ko.observable(pd.toNumber(e.min, 0))),
      (this.max = ko.observable(pd.toNumber(e.max, 100))),
      (this.step = ko.observable(pd.toNumber(e.step, 0.1))),
      (this.major = ko.observable(pd.toNumber(e.major, 10))),
      (this.minor = ko.observable(pd.toNumber(e.minor, 1))),
      (this.decimals = ko.observable(pd.toInteger(e.decimals, 2))),
      (this.value = ko.observable(pd.toNumber(e.value, 0))),
      this.value.subscribe(function () {
        s = !0;
      }),
      (this.units = pd.UnitType.NONE),
      (this.constrainToMin = ko.observable(pd.toBoolean(e.constrainToMin, !0))),
      (this.constrainToMax = ko.observable(pd.toBoolean(e.constrainToMax, !0))),
      (this.action = ko.observable(e.action || null)),
      (this.payload = ko.observable(e.payload || null)),
      (this.getTextInput = function () {
        return (
          d ||
            ((d = $(n).find("input[type=text]")) &&
              d.on("click", function () {
                d.prop("readonly", !1);
              })),
          d
        );
      }),
      (this.selectAndFocus = function () {
        return (
          this.getTextInput().focus().select(),
          o.emit("editor:focus", o.payload()),
          o
        );
      }),
      (this.openAt = function (t, e, r) {
        return pdKO.showPopoverAtPoint($(i), t, e, { placement: r }), o;
      }),
      (this.open = function (t, e) {
        return (
          null == t
            ? $(i).popoverX("show")
            : pdKO.showPopoverOnElement($(i), t, { placement: e }),
          o
        );
      }),
      (this.close = function () {
        return $(i).popoverX("hide"), o;
      }),
      (this.isPopupVisible = function () {
        return r;
      }),
      (this.symbols = ko.observable(!1)),
      (this.calcButton = function (t) {
        var e;
        d || (d = o.getTextInput());
        var r,
          n = d.val(),
          i = d.prop("selectionStart"),
          a = d.prop("selectionEnd");
        switch ((pd.isNumeric(t) && (t = String.fromCharCode(t)), t)) {
          case "<":
            i < a
              ? ((r = n.substring(0, i) + n.substring(a, n.length)),
                d.val(r),
                l(i))
              : i == a && 0 < i && i < n.length - 1
              ? ((r = n.substring(0, i - 1) + n.substring(a, n.length)),
                d.val(r),
                l(i - 1))
              : s
              ? d.val("")
              : (d.val(n.substring(0, n.length - 1)), l(9999));
            break;
          case "$":
            return void o.symbols(!o.symbols());
          case "@":
            switch (
              ((pdDOM.isMobile || pdDOM.isWindows10) && d.prop("readonly", !0),
              o.units)
            ) {
              case pd.UnitType.LENGTH:
                e = pd.Dimension.parseDimension(d.val());
                break;
              case pd.UnitType.TIME_HRS:
                e = pd.DateTime.parseTimeToDecimalHours(d.val());
                break;
              default:
                e = pd.parseEqn(d.val());
            }
            isNaN(e) ||
              (o.value(e),
              pdDOM.isMobile || pdDOM.isWindows10
                ? l(9999)
                : (d.focus().select(), d.focus().select()),
              (s = !0));
            break;
          default:
            i < a
              ? ((r = n.substring(0, i) + t + n.substring(a, n.length)),
                d.val(r),
                l(i + 1))
              : i == a && 0 < i && i < n.length - 1
              ? ((r = n.substring(0, i) + t + n.substring(a, n.length)),
                d.val(r),
                l(i + 1))
              : (s ? d.val(t) : d.val(n + t), l(9999)),
              (s = !1);
        }
        o.symbols() && o.symbols(!1);
      }),
      (this.handlePopoverShow = function () {
        s = r = !0;
        var t = o.getTextInput();
        o.emit("editor:show", o.payload()),
          pdDOM.isMobile || pdDOM.isWindows10
            ? (t.prop("readonly", !0), l(9999))
            : (setTimeout(function () {
                o.selectAndFocus();
              }, 250),
              t.prop("readonly", !1));
      }),
      (this.handlePopoverHide = function () {
        (r = !1), o.emit("editor:hide", o.payload()), o.action(null);
      }),
      pd.addSimpleEventHandling(o),
      (this.set = function (t) {
        return pdKO.setWritableObservables(t, o), this;
      });
  }
  (pdKO.setWritableObservables = function (t, e) {
    var r = 0;
    if (t && e)
      for (var n in t)
        t.hasOwnProperty(n) &&
          ko.isWritableObservable(e[n]) &&
          (e[n](t[n]), ++r);
    return r;
  }),
    (pdKO.SaveAsViewModel = function (t, e) {
      var n = this,
        r = (e = e || {}).id || "#modal-save";
      (this.title = ko.observable(e.title || "Save File")),
        (this.filename = ko.observable(e.filename || "[No Name]")),
        (this.extension = ko.observable(e.extension || ".json")),
        (this.message = ko.observable(
          e.message || "Enter the filename to save your data as:"
        )),
        (this.action = ko.observable(e.action || null)),
        (this.selectAndFocus = function () {
          return $(r).find("input[type=text]").focus().select(), this;
        }),
        (this.open = function () {
          return $(r).modal("show"), this;
        }),
        (this.close = function () {
          return $(r).modal("hide"), this;
        }),
        (this.handlePopoverShow = function () {
          pdDOM.isMobile ||
            pdDOM.isWindows10 ||
            setTimeout(function () {
              n.selectAndFocus();
            }, 250);
        }),
        (this.submitFile = function () {
          var t = n.filename().toString();
          if (t && 0 < t.length) {
            var e = n.extension();
            if (!pd.endsWith(t, e))
              return n.filename(t + e), void n.selectAndFocus();
            var r = n.action() || null;
            if (r && r(t)) return void n.close();
          }
          return n.selectAndFocus(), this;
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, n), this;
        }),
        (e = null);
    }),
    (pdKO.confirmExecuteScript = function () {
      var t = localStorage.getItem("allowScripts"),
        e = new Date(t).getTime(),
        r = new Date(),
        n = r.getTime();
      if (e < n || n + 864e5 < e) {
        if (
          !confirm(
            "This will execute the JavaScript commands in this file.\n\nEverything is fully sandboxed so it can't go too wrong, worst case you may need to reload the page. However you should always check scripts for any malicious content before you run them.\n\nAllow drag/drop scripts for the rest of today?"
          )
        )
          return !1;
        r.setHours(24, 0, 0, 0),
          localStorage.setItem("allowScripts", r.toString());
      }
      return !0;
    }),
    (pdKO.executeScript = function (t) {
      return (
        !!(
          t &&
          (t instanceof window.FileReader && (t = t.result),
          "string" == typeof t || t instanceof String || (t = t.toString()),
          t.length && pdKO.confirmExecuteScript())
        ) && (window.eval("(function() {\n\n" + t + "\n})();\n"), !0)
      );
    }),
    (pdKO.importFiles = function (t, e) {
      if (
        ((e = e || {}),
        window.FileReader &&
          null != t &&
          0 < t.length &&
          (!e.model ||
            !(function (e, r) {
              var t = !1,
                n = -1,
                i = [],
                a = null,
                o = {},
                s = new FileReader(),
                d = 0,
                l = 0,
                h = { materials: o, node: null };
              if (!r) return !1;
              function u() {
                if (l == d)
                  0 <= n
                    ? ((s.onload = c), (a = e[n]), s.readAsText(a))
                    : r(h.node);
                else if (l < d) {
                  var t = i[l];
                  switch (((a = e[t.index]), t.type)) {
                    case "mtl":
                      (s.onload = p), s.readAsText(a);
                      break;
                    case "stl":
                      (s.onload = f), s.readAsText(a);
                      break;
                    case "ply":
                      (s.onload = m), s.readAsText(a);
                      break;
                    case "mod":
                      (s.onload = g), s.readAsText(a);
                  }
                }
                l++;
              }
              function c() {
                (h.node = pd3D.parseOBJ(s, h)), r(h.node);
              }
              function p() {
                var t = a.name.split("/").pop();
                (o[t] = pd3D.parseMTL(s)), u();
              }
              function f() {
                (h.node = pd3D.parseSTL(s, h)), u();
              }
              function m() {
                (h.node = pd3D.parsePLY(s, h)), u();
              }
              function g() {
                (h.node = pd3D.parseMOD(s, h)), u();
              }
              for (var v = 0, y = e.length; v < y; ++v)
                pd.endsWith(e[v].name, ".obj")
                  ? (n < 0 && (n = v), (t = !0))
                  : pd.endsWith(e[v].name, ".mtl")
                  ? (i.push({ index: v, type: "mtl" }), (t = !0))
                  : pd.endsWith(e[v].name, ".stl")
                  ? (i.push({ index: v, type: "stl" }), (t = !0))
                  : pd.endsWith(e[v].name, ".ply")
                  ? (i.push({ index: v, type: "ply" }), (t = !0))
                  : pd.endsWith(e[v].name, ".mod") &&
                    (i.push({ index: v, type: "mod" }), (t = !0));
              return !!t && ((d = i.length), setTimeout(u, 50), !0);
            })(t, e.model)))
      ) {
        var r = !1,
          n = new FileReader(),
          i = t[0];
        if (pd.isArray(e.extra))
          for (var a = 0, o = e.extra.length; a < o; ++a) {
            var s = e.extra[a];
            "function" != typeof s.callback ||
              (s.match &&
                !pd.endsWith(i.name.toLowerCase(), s.match.toLowerCase()) &&
                i.type !== s.match) ||
              ((n.onload = d(s, n, i)), n.readAsText(i), (r = !0));
          }
        r ||
          "function" != typeof e.json ||
          (i.type && !/text|json/i.test(i.type)) ||
          !pd.endsWith(i.name, ".json") ||
          ((n.onload = function () {
            e.json(n, i);
          }),
          n.readAsText(i),
          (r = !0)),
          r ||
            (i.type && !/text|javascript/i.test(i.type)) ||
            !pd.endsWith(i.name, ".js") ||
            (pdKO.confirmExecuteScript() &&
              ((n.onload = function () {
                pdKO.executeScript(n),
                  "function" == typeof e.script && e.script();
              }),
              n.readAsText(i),
              (r = !0))),
          r ||
            ("function" == typeof e.error
              ? e.error(i)
              : window.alert(
                  "ERROR: File does not contain a recognisable data format."
                ));
      }
    }),
    (pdKO.ModelViewModel = function (t, i, a) {
      var o = this;
      (this.units = ko.observable(pd.toInteger(i.units, 0))),
        this.units.subscribe(function (t) {
          var e = pd.Dimension.type,
            r = parseInt(t, 10);
          if (
            (r == pd.DimensionType.IMPERIAL &&
              e != pd.DimensionType.IMPERIAL) ||
            (r != pd.DimensionType.IMPERIAL && e == pd.DimensionType.IMPERIAL)
          ) {
            var n = r == pd.DimensionType.IMPERIAL ? 6.35 : 5;
            o.snapGrid(pd.snapTo(o.snapGrid(), n)), o.snapStep(n);
          }
          (pd.Dimension.type = i.units = r),
            a &&
              (a.setModelSnap(a.preferredModelSnap),
              a.environment._groundMesh && a.environment.updateGroundPlane(a)),
            o.snapGrid.valueHasMutated();
        }),
        (this.shadowsShow = ko.observable(i.shadowsShow || !1)),
        this.shadowsShow.subscribe(function (t) {
          (i.shadowsShow = !!t),
            a &&
              window.gl &&
              (i.shadowsShow
                ? (a.updateBoundingBox(!0),
                  a.environment.hasOwnShadowMap ||
                    a.createShadowMap(2048, window.gl.RGB))
                : a.environment.hasOwnShadowMap && a.clearShadowMap(),
              window.gl.update());
        }),
        (this.onShowDimensionsChange = null),
        (this.onDimensionSizeChange = null);
      var e = new pdDOM.ThrottledUpdate(function () {
        o.onDimensionSizeChange && o.onDimensionSizeChange(o),
          window.gl && window.gl.update();
      }, 50);
      (this.dimensionsShow = ko.observable(i.dimensionsShow || !1)),
        this.dimensionsShow.subscribe(function (t) {
          (i.dimensionsShow = !!t),
            o.onShowDimensionsChange && o.onShowDimensionsChange(o),
            window.gl && window.gl.update();
        }),
        (this.dimensionSize = ko.observable(
          pd.toNumber(i.dimensionSize, 0.65)
        )),
        this.dimensionSize.subscribe(function (t) {
          (i.dimensionSize = pd.constrainTo(parseFloat(t), 0.05, 2)),
            i.dimensionsShow && e.trigger();
        }),
        (this.modelSize = ko.observable(1e4)),
        (this.snapStep = ko.observable(
          pd.Dimension.type == pd.DimensionType.IMPERIAL ? 6.35 : 5
        )),
        (this.snapMax = ko.computed(function () {
          return pd.snapTo(0.1 * o.modelSize(), o.snapStep());
        }, this)),
        (this.snapActive = ko.observable(i.snapActive || !1)),
        this.snapActive.subscribe(function (t) {
          (i.snapActive = !!t),
            (gl.orbitalView.snapGrid = i.snapActive ? i.snapGrid : 0);
        }),
        (this.snapAlignBounds = ko.observable(i.snapAlignBounds || !1)),
        this.snapAlignBounds.subscribe(function (t) {
          i.snapAlignBounds = !!t;
        }),
        (this.snapAlignCenter = ko.observable(i.snapAlignCenter || !1)),
        this.snapAlignCenter.subscribe(function (t) {
          i.snapAlignCenter = !!t;
        }),
        (this.snapAlignGrid = ko.observable(i.snapAlignGrid || !1)),
        this.snapAlignGrid.subscribe(function (t) {
          (i.snapAlignGrid = !!t),
            o.snapActive() && i.snapAlignGrid
              ? (a && a.setModelSnap(i.snapGrid),
                (gl.orbitalView.snapGrid = i.snapGrid))
              : (gl.orbitalView.snapGrid = 1);
        }),
        (this.snapToAdjacent = ko.observable(i.snapToAdjacent || !1)),
        this.snapToAdjacent.subscribe(function (t) {
          i.snapToAdjacent = !!t;
        }),
        (this.snapToSelected = ko.observable(i.snapToSelected || !1)),
        this.snapToSelected.subscribe(function (t) {
          i.snapToSelected = !!t;
        }),
        (this.snapToAll = ko.observable(i.snapToAll || !1)),
        this.snapToAll.subscribe(function (t) {
          i.snapToAll = !!t;
        }),
        (this.snapGrid = ko.observable(pd.toNumber(i.snapGrid, 25))),
        this.snapGrid.subscribe(function (t) {
          (i.snapGrid = parseFloat(t)),
            o.snapActive() &&
              o.snapAlignGrid() &&
              (a && a.setModelSnap(i.snapGrid),
              (gl.orbitalView.snapGrid = i.snapGrid));
        }),
        (this.snapGrid.incrementor = function (t, e) {
          if (t && e) {
            var r = pd.Dimension.incrementDimension(
              t,
              e,
              o.snapGrid(),
              o.snapStep()
            );
            o.snapGrid(Math.max(0, r));
          }
        }),
        (this.snapGrid.formatter = ko.pureComputed({
          read: function () {
            return pd.Dimension.formatDimension(
              +o.snapGrid(),
              pd.Dimension.type,
              -1,
              !0
            );
          },
          write: function (t) {
            o.snapGrid(pd.Dimension.parseDimension(t));
          },
          owner: this,
        })),
        (this.extentsMax = ko.computed(function () {
          return pd.snapTo(o.modelSize(), o.snapGrid());
        }, this)),
        (this.extentsMin = ko.computed(function () {
          return -o.extentsMax();
        }, this)),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, o), this;
        });
    }),
    (pdKO.showPopoverOn = function (t) {
      var e = pd.isString(t) ? $(t) : t,
        r = e.attr("data-placement") || "top",
        n = $(e.attr("data-target"));
      n && (n.popoverX({ $target: e, placement: r }), n.popoverX("show"));
    }),
    (pdKO.showPopoverAtPoint = function (t, e, r, n) {
      var i = (n = n || {}).$target || $("#overlay-popover-pos");
      if (t && 0 < i.length) {
        var a = n.placement || "bottom",
          o = e - 4,
          s = r - 4,
          d = 0.5 * t.width() + 5,
          l = t.height() + 5;
        return (
          o < d
            ? (a = a = "right")
            : o > window.innerWidth - d
            ? (a = "left")
            : s > window.innerHeight - l
            ? (a = "top")
            : s < l && (a = "bottom"),
          (o += pd.toNumber(n.offsetX, 0)),
          (s += pd.toNumber(n.offsetY, 0)),
          (o *= pdDOM.pageScale),
          (s *= pdDOM.pageScale),
          i.show().css({ left: o + "px", top: s + "px" }),
          t.popoverX({ $target: i, placement: a }),
          t.popoverX("show"),
          i != n.$target && i.hide(),
          !0
        );
      }
      return !1;
    }),
    (pdKO.showPopoverOnElement = function (t, e, r) {
      if (t && 0 < t.length && e && 0 < e.length) {
        var n = (r = r || {}).placement || "bottom",
          i = r.$target || $("#overlay-popover-pos");
        if (0 < i.length && i[0] != e[0]) {
          var a = e.offset(),
            o = e.outerWidth(),
            s = e.outerHeight(),
            d = pd.toNumber(r.offsetX, 0),
            l = pd.toNumber(r.offsetY, 0);
          0 <= n.indexOf("left")
            ? (d += 0)
            : 0 <= n.indexOf("right")
            ? (d += Math.round(o) - 8)
            : (d += Math.round(0.5 * o) - 4),
            0 <= n.indexOf("top")
              ? (l += 0)
              : 0 <= n.indexOf("bot")
              ? (l += Math.round(s) - 8)
              : (l += Math.round(0.5 * s) - 4);
          var h = 5,
            u = t.width() + h,
            c = t.height() + h,
            p = a.left + d,
            f = a.top + l;
          switch (
            (pdDOM.isFirefox &&
              ((p *= pdDOM.pageScale), (f *= pdDOM.pageScale)),
            n)
          ) {
            case "left":
              p <= u &&
                ((d = pd.toNumber(r.offsetX, 0)),
                (d += Math.round(o) - 8),
                (p = a.left + d),
                (n = "right"));
              break;
            case "right":
              p > window.innerWidth - u &&
                ((d = pd.toNumber(r.offsetX, 0)),
                (p = a.left + d),
                (n = "left"));
              break;
            case "top":
              f <= c &&
                ((l = pd.toNumber(r.offsetY, 0)),
                (l += Math.round(s) - 8),
                (f = a.top + l),
                (n = "bottom"));
              break;
            case "bottom":
              f >= window.innerHeight - c &&
                ((l = pd.toNumber(r.offsetY, 0)), (f = a.top + l), (n = "top"));
          }
          switch (n) {
            case "left":
            case "right":
              f < 0.5 * c
                ? ((n += " " + n + "-top"), (f -= Math.round(0.1 * c) - 4))
                : f > window.innerHeight - 0.5 * c &&
                  ((n += " " + n + "-bottom"), (f += Math.round(0.1 * c) - 4));
              break;
            case "top":
            case "bottom":
              p < 0.5 * u
                ? ((n += " " + n + "-left"), (p -= Math.round(0.1 * u) - 4))
                : p > window.innerWidth - 0.5 * u &&
                  ((n += " " + n + "-right"), (p += Math.round(0.1 * u) - 4));
          }
          i.show().css({ left: p + "px", top: f + "px" }),
            t.popoverX({ $target: i, placement: n }),
            t.popoverX("show"),
            i != r.$target && i.hide();
        } else {
          (a = e.offset()), (o = e.outerWidth()), (s = e.outerHeight());
          (a.right = a.left + o), (a.bottom = a.top + o);
          (h = 5), (c = t.height() + h), (u = t.width() + h);
          switch (n) {
            case "left":
              a.left <= u && (n = "right");
              break;
            case "right":
              a.right > window.innerWidth - u && (n = "left");
              break;
            case "top":
              a.top <= c && (n = "bottom");
              break;
            case "bottom":
              a.bottom >= window.innerHeight - c && (n = "top");
          }
          switch (n) {
            case "left":
            case "right":
              a.top < 0.5 * c
                ? (n += " " + n + "-top")
                : a.bottom > window.innerHeight - 0.5 * c &&
                  (n += " " + n + "-bottom");
              break;
            case "top":
            case "bottom":
              a.left < 0.5 * u
                ? (n += " " + n + "-left")
                : a.right > window.innerWidth - 0.5 * u &&
                  (n += " " + n + "-right");
          }
          t.popoverX({ $target: e, placement: n }), t.popoverX("show");
        }
        return !0;
      }
      return !1;
    }),
    (pdKO.NumericEditViewModel = function (t, e) {
      var o = this;
      ((e = e || {}).id = e.id || "#popover-editnum"),
        (e.sliderid = e.sliderid || "#slider-editnum"),
        (e.title = e.title || "Edit Numeric Value"),
        r.call(this, t, e),
        this.value.subscribe(function (t) {
          if ((t = pd.toNumber(t, 0)) < o.min()) o.value(o.min());
          else if (t > o.max()) o.value(o.max());
          else if (!o.value.undoIgnore) {
            var e = o.action() || null;
            e && e(t, o.payload());
          }
        }),
        (this.value.incrementor = function (t, e) {
          if (t && e) {
            var r = o.min(),
              n = o.max(),
              i = o.step();
            if (r < n) {
              t.shiftKey
                ? (i = o.major())
                : t.ctrlKey || t.metaKey || (i = o.minor());
              var a = pd.constrainTo(parseFloat(o.value()) + e * i, r, n);
              o.value(pd.snapTo(a, e * i));
            }
          }
        }),
        (this.value.formatter = ko.pureComputed({
          read: function () {
            var t = o.value();
            switch (o.units) {
              case pd.UnitType.LENGTH:
                return pd.Dimension.formatDimension(
                  t,
                  pd.Dimension.type,
                  -1,
                  !0
                );
              case pd.UnitType.TIME_HRS:
                return pd.DateTime.formatTime(parseFloat(t));
              default:
                var e = pd.toInteger(o.decimals(), 2);
                return 0 < e
                  ? pd.toStringWithPrecisionRange(t, e, 9)
                  : parseInt(t, 10).toString();
            }
          },
          write: function (t) {
            var e = 0;
            switch (o.units) {
              case pd.UnitType.LENGTH:
                e = pd.Dimension.parseDimension(t);
                break;
              case pd.UnitType.TIME_HRS:
                e = pd.DateTime.parseTimeToDecimalHours(t);
                break;
              default:
                (e = pd.parseEqn(t)),
                  pd.toInteger(o.decimals(), 2) <= 0 && (e = Math.round(e));
            }
            var r = o.min(),
              n = o.max();
            (e = pd.constrainTo(e, r, n)), o.value(e);
          },
          owner: this,
        }));
    }),
    (pdKO.NumericEditViewModel.prototype = Object.create(r.prototype)),
    (pdKO.NumericEditViewModel.prototype.constructor =
      pdKO.NumericEditViewModel),
    (pdKO.DimensionEditViewModel = function (t, e) {
      var n = this;
      ((e = e || {}).id = e.id || "#popover-editdim"),
        (e.sliderid = e.sliderid || "#slider-editdim"),
        (e.title = e.title || "Edit Dimension"),
        r.call(this, t, e),
        (this.showAbout = ko.observable(pd.toBoolean(e.showAbout, !0))),
        (this.about = ko.observable(pd.toInteger(e.about, 1))),
        (this.units = pd.UnitType.LENGTH),
        this.value.subscribe(function (t) {
          if (((t = pd.toNumber(t, 0)), n.constrainToMin() && t < n.min()))
            return n.value(n.min()), void n.value.valueHasMutated();
          if (n.constrainToMax() && t > n.max())
            return n.value(n.max()), void n.value.valueHasMutated();
          if (!n.value.undoIgnore) {
            var e = n.action() || null;
            e && e(t, n.payload());
          }
        }),
        (this.value.incrementor = function (t, e) {
          if (t && e) {
            var r = pd.Dimension.incrementDimension(t, e, n.value(), n.step());
            n.constrainToMin() && (r = Math.max(n.min(), r)),
              n.constrainToMax() && (r = Math.min(n.max(), r)),
              n.value(r);
          }
        }),
        (this.value.formatter = ko.pureComputed({
          read: function () {
            return pd.Dimension.formatDimension(
              +n.value(),
              pd.Dimension.type,
              -1,
              !0
            );
          },
          write: function (t) {
            n.value(pd.Dimension.parseDimension(t));
          },
          owner: this,
        }));
    }),
    (pdKO.DimensionEditViewModel.prototype = Object.create(r.prototype)),
    (pdKO.DimensionEditViewModel.prototype.constructor =
      pdKO.DimensionEditViewModel),
    (pdKO.CameraViewModel = function (i, a) {
      var o = this,
        t = !1;
      (this.viewAzimuth = ko.observable(60).extend({ fixedPrecision: 2 })),
        this.viewAzimuth.subscribe(function (t) {
          o.viewAzimuth.undoIgnore ||
            ((gl.orbitalView.cameraAzi = pd.wrapAt(t, -180, 180)),
            o.updateViewTypeFromCamera(),
            gl.update());
        }),
        (this.viewAltitude = ko.observable(30).extend({ fixedPrecision: 2 })),
        this.viewAltitude.subscribe(function (t) {
          o.viewAltitude.undoIgnore ||
            ((gl.orbitalView.cameraAlt = pd.wrapAt(t, -180, 180)),
            o.updateViewTypeFromCamera(),
            gl.update());
        }),
        (this.viewAngle = ko.observable(45).extend({ fixedPrecision: 2 })),
        this.viewAngle.subscribe(function (t) {
          o.viewAngle.undoIgnore ||
            ((gl.orbitalView.cameraFOV = pd.constrainTo(t, 0, 160)),
            (gl.orbitalView.hasChanged = gl.PROJECTION),
            o.updateViewTypeFromCamera(),
            gl.update());
        }),
        (this.incrementZoom = function (t, e, r) {
          (t = parseFloat(t)) &&
            (r &&
              (r.ctrlKey || r.metaKey ? (t /= 10) : r.shiftKey && (t *= 10)),
            (gl.orbitalView.hasChanged = gl.PROJECTION),
            gl.orbitalView.zoom(0.025 * t),
            c(o.viewZoom, gl.orbitalView.zoomFactor));
        }),
        (this._setZoom = function (t) {
          (t = pd.constrainTo(pd.toNumber(t, 0), -1, 1)),
            1e-4 < Math.abs(t)
              ? gl.orbitalView.zoom(t)
              : ((gl.orbitalView.hasChanged = gl.PROJECTION),
                gl.orbitalView.center()),
            c(o.viewZoom, gl.orbitalView.zoomFactor);
        }),
        (this.setZoom = this._setZoom),
        (this.viewZoom = ko.observable(1).extend({ fixedPrecision: 3 })),
        this.viewZoom.subscribe(function (t) {
          o.viewZoom.undoIgnore ||
            ((t = pd.constrainTo(
              pd.toNumber(t, 0),
              gl.orbitalView._zoomFactorMin,
              3
            )),
            gl.orbitalView.setZoomFactor(t));
        }),
        (this.handlePopoverShow = function () {
          (t = !0),
            o.updateViewTypeFromCamera(),
            (pd.closeTo(o.viewAzimuth(), gl.orbitalView.cameraAzi, 0.001) &&
              pd.closeTo(o.viewAltitude(), gl.orbitalView.cameraAlt, 0.001) &&
              pd.closeTo(o.viewAngle(), gl.orbitalView.cameraFOV, 0.001)) ||
              o.updateCameraOnViewChange(),
            i.UndoManager &&
              i.UndoManager.storeValues(
                o.viewAzimuth,
                o.viewAltitude,
                o.viewAngle
              );
        }),
        (this.handlePopoverHide = function () {
          i.UndoManager && i.UndoManager.checkForChanges(), (t = !1);
        }),
        (this.isPopupVisible = function () {
          return t;
        }),
        (this.updateCameraOnViewChange = function (t, e) {
          c(o.viewAzimuth, gl.orbitalView.cameraAzi),
            c(o.viewAltitude, gl.orbitalView.cameraAlt),
            c(o.viewAngle, gl.orbitalView.cameraFOV),
            0.99 < e &&
              null != a &&
              5 == o.viewType() &&
              i.Animation &&
              i.Animation.pause(!1);
        }),
        (this.updateViewTypeFromCamera = function () {
          if (0.5 < gl.orbitalView.cameraFOV)
            0 != o.viewType() && o.setViewType(0, !0);
          else {
            var t = !1;
            null != a &&
              (a.getSunAnglesArray(pdKO.sunPos),
              pd.closeTo(gl.orbitalView.cameraAlt, pdKO.sunPos[1], 0.1) &&
                pd.closeTo(
                  gl.orbitalView.cameraAzi,
                  pd.wrapAt(90 - (pdKO.sunPos[0] + a.northOffset()), -180, 180),
                  0.1
                ) &&
                (t = !0)),
              t
                ? o.setViewType(5, !0)
                : pd.closeTo(gl.orbitalView.cameraAlt, 90, 0.5)
                ? o.setViewType(2, !0)
                : pd.closeTo(gl.orbitalView.cameraAlt, 0, 0.5)
                ? pd.closeTo(gl.orbitalView.cameraAzi, 90, 0.5) ||
                  pd.closeTo(gl.orbitalView.cameraAzi, -90, 0.5)
                  ? o.setViewType(3, !0)
                  : pd.closeTo(gl.orbitalView.cameraAzi, 0, 0.5) ||
                    pd.closeTo(gl.orbitalView.cameraAzi, 180, 0.5)
                  ? o.setViewType(4, !0)
                  : o.setViewType(1, !0)
                : o.setViewType(1, !0);
          }
        }),
        (this.setViewType = function (t, e) {
          e ? c(o.viewType, t) : o.viewType(t);
        }),
        (this.viewType = ko.observable(0).extend({ notify: "always" })),
        this.viewType.subscribe(function (t) {
          if (!o.viewType.undoIgnore) {
            var e = {},
              r = o.viewType.shiftKey ? -90 : 130;
            switch (
              (gl.orbitalView.orbitMode ||
                ((e.target = gl.orbitalView.defaultTarget),
                (e.cameraDistance = gl.orbitalView.defaultDistance),
                (e.zoomFactor = 1)),
              (gl.orbitalView.orthoMode = 0),
              t)
            ) {
              case -1:
                var n =
                  2.5 < gl.orbitalView.cameraAlt &&
                  gl.orbitalView.cameraAlt < 87.5;
                (e.cameraAzi = n ? gl.orbitalView.cameraAzi : -45),
                  (e.cameraAlt = n ? gl.orbitalView.cameraAlt : 45),
                  (e.cameraFOV = 0);
                break;
              default:
              case 0:
                (e.cameraAzi = gl.orbitalView.cameraAzi),
                  (pd.closeTo(gl.orbitalView.cameraAlt, 45, 0.1) ||
                    gl.orbitalView.cameraAlt < 2.5 ||
                    87.5 < gl.orbitalView.cameraAlt) &&
                    (e.cameraAzi -= r),
                  (e.cameraAzi = pd.snapTo(e.cameraAzi + r, 90) - 45),
                  (e.cameraAlt = 30),
                  (e.cameraFOV = 45);
                break;
              case 1:
                (e.cameraAzi = gl.orbitalView.cameraAzi),
                  (0.5 < gl.orbitalView.cameraFOV ||
                    !pd.closeTo(gl.orbitalView.cameraAlt, 45, 0.1)) &&
                    (e.cameraAzi -= r),
                  (e.cameraAzi = pd.snapTo(e.cameraAzi + r, 90) - 45),
                  (e.cameraAlt = 45),
                  (e.cameraFOV = 0);
                break;
              case 2:
                (e.cameraAzi = gl.orbitalView.cameraAzi),
                  (0.5 < gl.orbitalView.cameraFOV ||
                    !pd.closeTo(gl.orbitalView.cameraAlt, 90, 0.1)) &&
                    (e.cameraAzi = -180),
                  (gl.orbitalView.orthoMode = 1),
                  (e.cameraAzi = pd.snapTo(e.cameraAzi + r, 90)),
                  (e.cameraAlt = 90),
                  (e.cameraFOV = 0);
                break;
              case 3:
                pd.closeTo(gl.orbitalView.cameraAlt, 0, 0.1) &&
                pd.closeTo(gl.orbitalView.cameraAzi, -90, 0.1)
                  ? (e.cameraAzi = 90)
                  : (e.cameraAzi = -90),
                  (gl.orbitalView.orthoMode = 2),
                  (e.cameraAlt = 0),
                  (e.cameraFOV = 0);
                break;
              case 4:
                pd.closeTo(gl.orbitalView.cameraAlt, 0, 0.1) &&
                pd.closeTo(gl.orbitalView.cameraAzi, 0, 0.1)
                  ? (e.cameraAzi = 180)
                  : (e.cameraAzi = 0),
                  (gl.orbitalView.orthoMode = 2),
                  (e.cameraAlt = 0),
                  (e.cameraFOV = 0);
                break;
              case 5:
                null != a &&
                  (a.getSunAnglesArray(pdKO.sunPos),
                  (e.cameraAzi = pd.wrapAt(
                    90 - (pdKO.sunPos[0] + a.northOffset()),
                    -180,
                    180
                  )),
                  (e.cameraAlt = pdKO.sunPos[1]),
                  (e.cameraFOV = 0),
                  i.Animation && i.Animation.pause(!0));
            }
            gl.orbitalView.animateTo(e, o.updateCameraOnViewChange);
          }
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, o), this;
        });
    }),
    (pdKO.DisplayViewModel = function (t, e, r) {
      var n = this;
      (this.surfaceOpacity = ko.observable(pd.toNumber(e.surfaceOpacity, 0.8))),
        this.surfaceOpacity.subscribe(function (t) {
          (e.surfaceOpacity = parseFloat(t)),
            r && (r.environment.surfaceOpacity = e.surfaceOpacity),
            gl.update();
        }),
        (this.outlineOpacity = ko.observable(
          pd.toNumber(e.outlineOpacity, 0.9)
        )),
        this.outlineOpacity.subscribe(function (t) {
          (e.outlineOpacity = parseFloat(t)),
            r && (r.environment.outlineOpacity = e.outlineOpacity),
            gl.update();
        }),
        (this.surfaceShininess = ko.observable(
          pd.toNumber(e.surfaceShininess, 75)
        )),
        this.surfaceShininess.subscribe(function (t) {
          (e.surfaceShininess = parseFloat(t)),
            r && (r.environment.surfaceShininess = e.surfaceShininess),
            gl.update();
        }),
        (this.ambientFactor = ko.observable(pd.toNumber(e.ambientFactor, 0.6))),
        this.ambientFactor.subscribe(function (t) {
          (e.ambientFactor = parseFloat(t)),
            r && (r.environment.ambientFactor = e.ambientFactor),
            gl.update();
        }),
        (this.handlePopoverShow = function () {
          t.UndoManager &&
            t.UndoManager.storeValues(
              n.surfaceOpacity,
              n.outlineOpacity,
              n.surfaceShininess,
              n.ambientFactor
            );
        }),
        (this.handlePopoverHide = function () {
          t.UndoManager && t.UndoManager.checkForChanges();
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, n), this;
        });
    }),
    (pdKO.sunPos = [0, 0]),
    (pdKO.DateTimeViewModel = function (a, i, o) {
      var s = this;
      function e(t) {
        return t.toFixed(2) + "°";
      }
      o.getSunAnglesArray(pdKO.sunPos), (this.onDateTimeChange = null);
      var d = !1,
        l = new pdDOM.ThrottledUpdate(function () {
          s.timeOfDay.azimuthAngle &&
            (s.timeOfDay.azimuthAngle(e(o.azimuthAngle())),
            s.timeOfDay.altitudeAngle(e(o.altitudeAngle()))),
            s.onDateTimeChange && s.onDateTimeChange(s, d),
            (d = !1);
        }, 50);
      function h(t) {
        var e = pdKO.sunPos[0],
          r = pdKO.sunPos[1],
          n = o.getSunAnglesArray(pdKO.sunPos);
        t &&
          (i &&
            ((i.dayOfMonth = o.dayOfMonth()),
            (i.monthOfYear = o.monthOfYear()),
            (i.year = o.year())),
          s.updateDawnDuskValues(),
          (d = !0)),
          (n[0] == e && n[1] == r) || l.trigger();
      }
      function r(r) {
        var n = 0,
          i = s.dayOfYear();
        r < i && (r += 365),
          pd.closeTo(i, r) ||
            (pdDOM
              .getGlobalAnimationQueue()
              .addOrReplace(function (t) {
                if (1 <= (n += 2 * t))
                  return (
                    s.setDayOfYear(r),
                    a && a.Animation && a.Animation.pause(!1),
                    !0
                  );
                var e = pd.Easing.inOutSine(n);
                return s.setDayOfYear((1 - e) * i + e * r), !1;
              })
              .start(),
            a && a.Animation && a.Animation.pause(!0));
      }
      function n(r) {
        var n = 0,
          i = s.timeOfDay();
        pd.closeTo(i, r) ||
          (pdDOM
            .getGlobalAnimationQueue()
            .addOrReplace(function (t) {
              if (1 <= (n += 2 * t))
                return (
                  s.setTimeOfDay(r),
                  a && a.Animation && a.Animation.pause(!1),
                  !0
                );
              var e = pd.Easing.inOutSine(n);
              return s.setTimeOfDay((1 - e) * i + e * r), !1;
            })
            .start(),
          a && a.Animation && a.Animation.pause(!0));
      }
      (this.dayOfYear = ko.observable(o.dayOfYear())),
        this.dayOfYear.subscribe(function (t) {
          o.setDayOfYear(t), h(!0);
        }),
        (this.dayOfYear.formatter = ko.pureComputed({
          read: function () {
            return o.formatAsDate(s.dayOfYear(), o.year());
          },
          write: function (t) {
            var e = Date.parse(t.toString());
            if (pd.isNumeric(e)) {
              var r = new Date();
              r.setTime(e);
              var n = o.calcDayOfYearIndex(
                  r.getDate(),
                  r.getMonth(),
                  r.getFullYear()
                ),
                i = o.year() != r.getFullYear();
              o.year(r.getFullYear()), s.dayOfYear(n), i && h(!0);
            } else s.dayOfYear.valueHasMutated();
          },
          owner: this,
        })),
        (this.dayOfYear.incrementor = function (t, e) {
          if ((e = parseFloat(e))) {
            var r = parseInt(s.dayOfYear(), 10);
            if (5 < Math.abs(e) || (t && t.shiftKey)) {
              var n = o.getDateObject(),
                i = n.getMonth() + (0 < e ? 1 : -1);
              n.setMonth(pd.wrapAt(i, 0, 12, !0)),
                (r = o.calcDayOfYearIndex(
                  n.getDate(),
                  n.getMonth(),
                  n.getFullYear()
                ));
            } else r += 0 < e ? 1 : -1;
            s.dayOfYear(pd.wrapAt(r, 0, o.isLeapYear() ? 366 : 365, !0));
          }
        }),
        (this.setDayOfYear = function (t) {
          this.dayOfYear(Math.round(pd.wrapAt(t, 0, 365)));
        }),
        (this.createSolarPositionObservables = function () {
          (s.timeOfDay.altitudeAngle = ko.observable(e(o.altitudeAngle()))),
            (s.timeOfDay.azimuthAngle = ko.observable(e(o.azimuthAngle())));
        }),
        (this.createTwilightObservables = function () {
          var t = o.getDuskDawnData();
          return (
            (s.dayOfYear.civilTwilight = ko.observable(
              o.formatAsTime(t.civilDawn) + " / " + o.formatAsTime(t.civilDusk)
            )),
            (s.dayOfYear.nauticalTwilight = ko.observable(
              o.formatAsTime(t.nauticalDawn) +
                " / " +
                o.formatAsTime(t.nauticalDusk)
            )),
            (s.dayOfYear.astronomicalTwilight = ko.observable(
              o.formatAsTime(t.astronomicalDawn) +
                " / " +
                o.formatAsTime(t.astronomicalDusk)
            )),
            s
          );
        }),
        (this.createSolarNoonAndDayLengthObservables = function () {
          return (
            (s.dayOfYear.dayLength = ko.observable(
              o.formatAsTime(o.sunsetTime() - o.sunriseTime())
            )),
            (s.dayOfYear.solarNoon = ko.observable(
              o.formatAsTime(o.solarNoon())
            )),
            s
          );
        }),
        (this.dayOfYear.sunriseTime = ko.observable(
          o.formatAsTime(o.sunriseTime())
        )),
        (this.dayOfYear.sunsetTime = ko.observable(
          o.formatAsTime(o.sunsetTime())
        )),
        (this.updateDawnDuskValues = function () {
          var t = o.getDuskDawnData();
          return (
            s.dayOfYear.sunriseTime(o.formatAsTime(t.sunrise)),
            s.dayOfYear.sunsetTime(o.formatAsTime(t.sunset)),
            s.timeOfDay.azimuthAngle &&
              (s.timeOfDay.azimuthAngle(e(o.azimuthAngle())),
              s.timeOfDay.altitudeAngle(e(o.altitudeAngle()))),
            s.dayOfYear.solarNoon &&
              (s.dayOfYear.solarNoon(o.formatAsTime(t.solarNoon)),
              s.dayOfYear.dayLength(o.formatAsTime(t.sunset - t.sunrise))),
            s.dayOfYear.civilTwilight &&
              (s.dayOfYear.civilTwilight(
                o.formatAsTime(t.civilDawn) +
                  " / " +
                  o.formatAsTime(t.civilDusk)
              ),
              s.dayOfYear.nauticalTwilight(
                o.formatAsTime(t.nauticalDawn) +
                  " / " +
                  o.formatAsTime(t.nauticalDusk)
              ),
              s.dayOfYear.astronomicalTwilight(
                o.formatAsTime(t.astronomicalDawn) +
                  " / " +
                  o.formatAsTime(t.astronomicalDusk)
              )),
            s
          );
        }),
        (this.setUsefulDate = function (t) {
          switch (t) {
            case 0:
              r(
                o.latitude() < 0
                  ? o.getSolsticeDec().dayOfYear
                  : o.getSolsticeJun().dayOfYear
              );
              break;
            case 1:
              r(
                o.latitude() < 0
                  ? o.getEquinoxMar().dayOfYear
                  : o.getEquinoxSep().dayOfYear
              );
              break;
            case 2:
              r(
                o.latitude() < 0
                  ? o.getSolsticeJun().dayOfYear
                  : o.getSolsticeDec().dayOfYear
              );
              break;
            case 3:
              r(
                o.latitude() < 0
                  ? o.getEquinoxSep().dayOfYear
                  : o.getEquinoxMar().dayOfYear
              );
          }
        }),
        (this.setNextUsefulDate = function () {
          var t = o.dayOfYear(),
            e = o.getEquinoxMar().dayOfYear,
            r = o.getSolsticeJun().dayOfYear,
            n = o.getEquinoxSep().dayOfYear,
            i = o.getSolsticeDec().dayOfYear;
          o.latitude() < 0
            ? t < e
              ? s.setUsefulDate(1)
              : t < r
              ? s.setUsefulDate(2)
              : t < n
              ? s.setUsefulDate(3)
              : t < i
              ? s.setUsefulDate(0)
              : s.setUsefulDate(1)
            : t < e
            ? s.setUsefulDate(3)
            : t < r
            ? s.setUsefulDate(0)
            : t < n
            ? s.setUsefulDate(1)
            : t < i
            ? s.setUsefulDate(2)
            : s.setUsefulDate(3);
        }),
        (this.timeOfDay = ko.observable(60 * o.clockTime())),
        this.timeOfDay.subscribe(function (t) {
          o.setTimeOfDay(t / 60), (i.clockTime = o.clockTime()), h(!1);
        }),
        (this.timeOfDay.formatter = ko.pureComputed({
          read: function () {
            return o.formatAsTime(s.timeOfDay() / 60);
          },
          write: function (t) {
            var e = pd.DateTime.parseTimeToDecimalHours(t);
            (e = pd.constrainTo(pd.isNumeric(e) ? e : 0, 0, 24)),
              s.timeOfDay(60 * e);
          },
          owner: this,
        })),
        (this.timeOfDay.incrementor = function (t, e) {
          if ((e = parseFloat(e))) {
            e = t.shiftKey
              ? Math.abs(e) < 5
                ? 30 * pd.sign(e)
                : Math.abs(e) < 10
                ? 15 * pd.sign(e)
                : 180 * pd.sign(e)
              : t.ctrlKey || t.metaKey
              ? Math.abs(e) < 10
                ? pd.sign(e)
                : 5 * pd.sign(e)
              : Math.abs(e) < 10
              ? 5 * pd.sign(e)
              : 30 * pd.sign(e);
            var r = pd.incrementBy(s.timeOfDay(), e);
            s.timeOfDay(pd.wrapAt(r, 0, 1440, !0));
          }
        }),
        (this.clockTime = ko.computed({
          read: function () {
            return s.timeOfDay() / 60;
          },
          write: function (t) {
            (t = pd.toNumber(t, o.clockTime())), s.timeOfDay(60 * t);
          },
          owner: s,
        })),
        (this.setTimeOfDay = function (t) {
          this.timeOfDay(Math.round(pd.wrapAt(t, 0, 1440)));
        }),
        (this.setUsefulTime = function (t) {
          switch (t) {
            case 0:
              n(60 * o.getDawnTime(o.twilight.ASTRONOMICAL));
              break;
            case 1:
              n(60 * o.getDawnTime(o.twilight.NAUTICAL));
              break;
            case 2:
              n(60 * o.getDawnTime(o.twilight.CIVIL));
              break;
            case 3:
              n(
                60 *
                  o.getDawnTime(o.twilight.SOLAR_DISK_TOP_WITH_ATM_REFRACTION)
              );
              break;
            case 4:
              n(720);
              break;
            case 5:
              n(60 * o.solarNoon());
              break;
            case 6:
              n(
                60 *
                  o.getDuskTime(o.twilight.SOLAR_DISK_TOP_WITH_ATM_REFRACTION)
              );
              break;
            case 7:
              n(60 * o.getDuskTime(o.twilight.CIVIL));
              break;
            case 8:
              n(60 * o.getDuskTime(o.twilight.NAUTICAL));
              break;
            case 9:
              n(60 * o.getDuskTime(o.twilight.ASTRONOMICAL));
          }
        }),
        (this.setNextUsefulTime = function () {
          var t = o.clockTime() + 1 / 120,
            e = o.getDuskDawnData(),
            r = 12,
            n = 4,
            i = e.solarNoon,
            a = 5;
          e.solarNoon < 12 && ((r = e.solarNoon), (n = 5), (i = 12), (a = 4)),
            t < e.astronomicalDawn
              ? s.setUsefulTime(0)
              : t < e.nauticalDawn
              ? s.setUsefulTime(1)
              : t < e.civilDawn
              ? s.setUsefulTime(2)
              : t < e.sunrise
              ? s.setUsefulTime(3)
              : t < r
              ? s.setUsefulTime(n)
              : t < i
              ? s.setUsefulTime(a)
              : t < e.sunset
              ? s.setUsefulTime(6)
              : t < e.civilDusk
              ? s.setUsefulTime(7)
              : t < e.nauticalDusk
              ? s.setUsefulTime(8)
              : t < e.astronomicalDusk
              ? s.setUsefulTime(9)
              : s.setUsefulTime(0);
        }),
        (this.datetime = ko.computed({
          read: function () {
            return [s.dayOfYear(), s.timeOfDay()];
          },
          write: function (t) {
            2 == t.length &&
              (s.dayOfYear(parseInt(t[0], 10)), s.timeOfDay(parseFloat(t[1])));
          },
          owner: s,
        })),
        (this.handlePopoverShow = function () {
          a.UndoManager &&
            ((s.datetime.undoIgnore = !0),
            a.UndoManager.storeValues(s.dayOfYear, s.timeOfDay));
        }),
        (this.handlePopoverHide = function () {
          a.UndoManager &&
            ((s.datetime.undoIgnore = !1), a.UndoManager.checkForChanges());
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, s), this;
        });
    }),
    (pdKO.LocationViewModel = function (t, e, r, n) {
      var o = this;
      (n = pd.toNumber(n, 50)),
        (this.onLocationChange = null),
        (this.onNorthOffsetChange = null);
      var i = new pdDOM.ThrottledUpdate(function () {
          r.getSunAnglesArray(pdKO.sunPos),
            e &&
              ((e.latitude = r.latitude()),
              (e.longitude = r.longitude()),
              (e.timezone = r.timezone())),
            o.onLocationChange && o.onLocationChange(o);
        }, 50),
        a = null;
      function s(t) {
        if ($ && $.snackbar) {
          if (null == a)
            return void (
              t &&
              (a = $.snackbar({
                id: "snackbar-time-zone",
                content:
                  "<p><strong>WARNING: Invalid Timezone</strong><br />The selected timezone must be within ±4hrs of the current longitude,<br />where each hour equates to 15 degrees <var>(ref = longitude / 15)</var>.</p>",
                htmlAllowed: !0,
                style: "warning",
                timeout: 8e3,
              }))
            );
          t && !a.hasClass("snackbar-opened")
            ? a.snackbar("show")
            : !t && a.hasClass("snackbar-opened") && a.snackbar("hide");
        }
      }
      (this.latitude = ko.observable(r.latitude())),
        this.latitude.subscribe(function (t) {
          r.latitude(t), i.trigger();
        }),
        (this.longitude = ko.observable(r.longitude())),
        this.longitude.subscribe(function (t) {
          r.longitude(t).calculate(), o.timezone(r.timezone()), i.trigger();
        }),
        (this.timezone = ko.observable(r.timezone())),
        this.timezone.subscribe(function (t) {
          var e = Math.round(r.longitude() / 15);
          Math.abs(t - e) < 4.01
            ? (r.timezone(t), i.trigger(), a && !o.timezone.ignore && s(!1))
            : ((o.timezone.ignore = !0),
              o.timezone(r.timezone()),
              s(!(o.timezone.ignore = !1)));
        }),
        (this.timezone.formatter = ko.pureComputed(function () {
          return (
            "GMT" +
            (0 <= o.timezone() ? "+" : "-") +
            r.formatAsTime(Math.abs(o.timezone()))
          );
        })),
        (this.timezone.incrementor = function (t, e) {
          if ((e = parseFloat(e))) {
            e = pd.sign(e);
            for (
              var r,
                n = document.getElementById("input-timezone"),
                i = parseFloat(n.options[n.selectedIndex].value),
                a = n.selectedIndex + e;
              0 <= a && a < n.length;

            ) {
              if (
                ((r = parseFloat(n.options[a].value)), !pd.closeTo(i, r, 0.1))
              ) {
                i = r;
                break;
              }
              a += e;
            }
            o.timezone(i);
          }
        }),
        (this.northOffset = ko.observable(r.northOffset())),
        n < 1e-6
          ? this.northOffset.extend({ deferred: !0 })
          : this.northOffset.extend({ rateLimit: n }),
        this.northOffset.subscribe(function (t) {
          r.northOffset(pd.constrainTo(parseFloat(t), -180, 180)),
            e && (e.northOffset = r.northOffset()),
            o.onNorthOffsetChange && o.onNorthOffsetChange(o);
        }),
        (this.elevation = ko.observable(
          pd.toNumber(e ? e.elevation : null, 150)
        )),
        this.elevation.subscribe(function (t) {
          e && (e.elevation = pd.constrainTo(parseFloat(t), -400, 1e4));
        }),
        (this.elevation.formatter = ko.pureComputed({
          read: function () {
            var t =
              pd.Dimension.type != pd.DimensionType.METRIC_IMPERIAL
                ? pd.DimensionType.METRIC_SI
                : pd.DimensionType.METRIC_IMPERIAL;
            return pd.Dimension.formatDimension(1e3 * o.elevation(), t, 1, !0);
          },
          write: function (t) {
            var e =
              pd.Dimension.type != pd.DimensionType.METRIC_IMPERIAL
                ? pd.DimensionType.METRIC_SI
                : pd.DimensionType.METRIC_IMPERIAL;
            o.elevation(pd.Dimension.parseDimension(t, e) / 1e3);
          },
          owner: this,
        })),
        (this.location = ko.computed({
          read: function () {
            return [o.latitude(), o.longitude(), parseFloat(o.timezone())];
          },
          write: function (t) {
            3 == t.length &&
              (o.latitude(parseFloat(t[0])),
              o.longitude(parseFloat(t[1])),
              o.timezone(parseFloat(t[2])));
          },
          owner: o,
        })),
        (this.handlePopoverShow = function () {
          t.UndoManager &&
            ((o.location.undoIgnore = !0),
            t.UndoManager.storeValues(
              o.latitude,
              o.longitude,
              o.timezone,
              o.northOffset,
              o.elevation
            ));
        }),
        (this.handlePopoverHide = function () {
          t.UndoManager &&
            ((o.location.undoIgnore = !1), t.UndoManager.checkForChanges());
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, o), this;
        });
    }),
    (pdKO.AnimationViewModel = function (d, t, l) {
      var h = this;
      (this.pause = ko.observable(!1)),
        (this.playing = ko.observable(!1)),
        (this.animateTime = ko.observable(t.animateTime || !1)),
        (this.animateDate = ko.observable(t.animateDate || !1)),
        (this.animateLatitude = ko.observable(t.animateLatitude || !1)),
        (this.animateLongitude = ko.observable(t.animateLongitude || !1)),
        (this.daylightOnly = ko.observable(t.daylightOnly || !1)),
        (this.speed = ko.observable(pd.toNumber(t.speed, 10)));
      var u = 1,
        c = 0,
        p = 0;
      function e() {
        if (h.pause()) return !1;
        var t,
          e = !1,
          r = Math.max(1, parseFloat(h.speed())),
          n = !1;
        if (
          (10 < r && (r = pd.mapAndConstrainTo(r - 10, 0, 10, 10, 200)),
          h.animateTime())
        ) {
          var i = +d.DateTime.timeOfDay();
          if (
            (1.01 < Math.abs(i - p) && (p = i),
            (t = p += 0.1 * r),
            h.daylightOnly())
          ) {
            var a = 60 * l.getDawnTime(l.twilight.CIVIL);
            60 * l.getDuskTime(l.twilight.CIVIL) < t
              ? (t = 1441)
              : t < a && (t = a);
          }
          1440 <= t &&
            h.animateDate() &&
            (d.DateTime.setDayOfYear(+d.DateTime.dayOfYear() + 1),
            (c = +d.DateTime.dayOfYear()),
            (t = p =
              h.daylightOnly() ? 60 * l.getDawnTime(l.twilight.CIVIL) : 0),
            (n = !0)),
            d.DateTime.timeOfDay(pd.wrapAt(t, 0, 1440)),
            d.DateTime.onDateTimeChange(d.DateTime, n),
            (e = !0);
        } else if (h.animateDate()) {
          var o = +d.DateTime.dayOfYear();
          1.01 < Math.abs(o - c) && (c = o);
          var s = Math.floor((c += 0.05 * r));
          s != o &&
            (d.DateTime.setDayOfYear(s),
            d.DateTime.onDateTimeChange(d.DateTime, !0),
            (e = !0));
        }
        return (
          h.animateLatitude() &&
            ((t = pd.snapTo(l.latitude() + 0.01 * r * u, 0.01)) < -89.8 &&
              ((u = 1), (t = -90)),
            89.8 < t && ((u = -1), (t = 90)),
            d.Location.latitude(t),
            d.Location.onLocationChange(),
            (e = !0)),
          h.animateLongitude() &&
            (d.Location.longitude(
              pd.snapTo(pd.wrapAt(l.longitude() + 0.01 * r, -180, 180), 0.01)
            ),
            d.Location.onLocationChange(),
            (e = !0)),
          e && window.gl && window.gl.update(),
          !h.playing() && (f(), !0)
        );
      }
      function r() {
        h.playing(!0),
          (d.Location.location.undoIgnore = !0),
          (d.DateTime.datetime.undoIgnore = !0),
          d.UndoManager.storeValues(d.Location.location, d.DateTime.datetime),
          $("#btn-play-icon").attr("class", "icon icon-stop"),
          $("#btn-play")
            .toggleClass("btn-default", !1)
            .toggleClass("btn-info", !0)
            .toggleClass("active", !0),
          (c = +d.DateTime.dayOfYear()),
          (p = +d.DateTime.timeOfDay()),
          pdDOM.getGlobalAnimationQueue().addOrReplace(e).start(),
          h.pause(!1);
      }
      function f() {
        d.UndoManager.checkForChanges(),
          $("#btn-play-icon").attr("class", "icon icon-play"),
          $("#btn-play")
            .toggleClass("btn-default", !0)
            .toggleClass("btn-info", !1)
            .toggleClass("active", !1),
          (d.Location.location.undoIgnore = !1),
          (d.DateTime.datetime.undoIgnore = !1),
          h.playing(!1),
          h.pause(!1);
      }
      (this.canAnimate = ko.computed(function () {
        return (
          h.animateTime() ||
          h.animateDate() ||
          h.animateLatitude() ||
          h.animateLongitude()
        );
      }, this)),
        (this.rewind = function () {
          h.animateDate() && (d.DateTime.dayOfYear(0), l.setDayOfYear(0)),
            h.animateTime() &&
              d.DateTime.timeOfDay(
                h.daylightOnly() ? 60 * l.getDawnTime(l.twilight.CIVIL) : 0
              ),
            h.animateLatitude() && d.Location.latitude(-90),
            h.animateLongitude() && d.Location.longitude(-180);
        }),
        (this.play = function () {
          h.playing(!h.playing()), h.playing() ? r() : f();
        }),
        (this.faster = function () {
          h.speed(h.speed() + 2), h.canAnimate() && !h.playing() && r();
        }),
        (this.stop = function () {
          h.playing(!1);
        }),
        (this.handlePopoverShow = function () {
          d.UndoManager &&
            d.UndoManager.storeValues(
              h.animateTime,
              h.animateDate,
              h.animateLatitude,
              h.animateLongitude,
              h.daylightOnly,
              h.speed
            );
        }),
        (this.handlePopoverHide = function () {
          (t.animateTime = h.animateTime()),
            (t.animateDate = h.animateDate()),
            (t.animateLatitude = h.animateLatitude()),
            (t.animateLongitude = h.animateLongitude()),
            (t.daylightOnly = h.daylightOnly()),
            (t.speed = +h.speed()),
            d.UndoManager && d.UndoManager.checkForChanges();
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, h), this;
        });
    }),
    (pdKO.SliderViewModel = function (e, r, n, i) {
      var a = this;
      function o(t) {
        return (+t).toFixed(3);
      }
      function s(t) {
        return (+t).toFixed(1) + "°";
      }
      function d(t) {
        return n.formatAsTime(t / 60);
      }
      function l(t) {
        return n.formatAsDate(t);
      }
      function h() {
        c(e.Camera.viewZoom, gl.orbitalView.zoomFactor);
      }
      function u(t) {
        switch (
          ((t = pd.toInteger(t, 0)),
          gl.orbitalView &&
            (4 == t
              ? gl.orbitalView.on("change", h)
              : gl.orbitalView.off("change", h)),
          t)
        ) {
          case 0:
            (r.index = t),
              i.set({
                type: i.TYPE_NUMERIC,
                observable: e.Location.latitude,
                format: s,
                title: "Site\nLatitude",
                tickMajor: 15,
                tickMinor: 5,
                stepMajor: 15,
                stepMinor: 1,
                wrap: !1,
                min: -90,
                max: 90,
                step: 0.1,
              });
            break;
          case 1:
            (r.index = t),
              i.set({
                type: i.TYPE_NUMERIC,
                observable: e.Location.longitude,
                format: s,
                title: "Site\nLongitude",
                tickMajor: 15,
                tickMinor: 5,
                stepMajor: 15,
                stepMinor: 1,
                wrap: r.wrap,
                min: -180,
                max: 180,
                step: 0.1,
              });
            break;
          case 2:
            (r.index = t),
              i.set({
                type: i.TYPE_DATE,
                observable: e.DateTime.dayOfYear,
                format: l,
                title: "Day of\nthe Year",
                year: n.year(),
                tickMajor: 28,
                tickMinor: 7,
                stepMajor: 10,
                stepMinor: 1,
                wrap: r.wrap,
                min: 0,
                max: 364,
                step: 1,
              });
            break;
          case 3:
            (r.index = t),
              i.set({
                type: i.TYPE_TIME,
                observable: e.DateTime.timeOfDay,
                format: d,
                title: "Time of\nthe Day",
                tickMajor: 60,
                tickMinor: 15,
                stepMajor: 60,
                stepMinor: 5,
                wrap: r.wrap,
                min: 0,
                max: 1440,
                step: 1,
              }),
              i.updateDayNight(n);
            break;
          case 4:
            (r.index = t),
              i.set({
                type: i.TYPE_NUMERIC,
                observable: e.Camera.viewZoom,
                format: o,
                title: "View\nZoom",
                tickMajor: 0.25,
                tickMinor: 0.05,
                stepMajor: 0.05,
                stepMinor: 0.01,
                wrap: r.wrap,
                min: 0,
                max: 3,
                step: 0.001,
              });
        }
      }
      (this.show = ko.observable(pd.toBoolean(r.show, !1))),
        this.show.subscribe(function (t) {
          (r.show = !!t), i.show(r.show);
        }),
        (this.toggle = function () {
          a.show(!a.show()), $("#btn-slider-toggle").blur();
        }),
        (this.wrap = ko.observable(r.wrap || !1)),
        this.wrap.subscribe(function (t) {
          (r.wrap = !!t), i.wrap(r.wrap);
        }),
        (this.detail = ko.observable(r.detail || !1)),
        this.detail.subscribe(function (t) {
          (r.detail = !!t), i.detailMode(r.detail);
        }),
        (this.index = ko.observable(r.index || 0)),
        this.index.subscribe(function (t) {
          u(t);
        }),
        (this.setIndex = function (t) {
          a.index(t);
        }),
        (this.set = function (t) {
          return pdKO.setWritableObservables(t, a), this;
        }),
        u(r.index);
    });
})(),
  (Date.prototype.addDecimalHours = function (t) {
    var e = new Date();
    return e.setTime(this.getTime() + 60 * t * 60 * 1e3), e;
  }),
  (Date.prototype.isLeapYear = function () {
    var t = this.getFullYear();
    return 0 == (3 & t) && (t % 100 != 0 || t % 400 == 0);
  }),
  (Date.prototype.getDOY = function () {
    var t = this.getMonth(),
      e = this.getDate() - 1,
      r = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][t] + e;
    return 1 < t && this.isLeapYear() && r++, r;
  }),
  (Date.prototype.setDOY = function (t) {
    var e = this.isLeapYear(this.getFullYear());
    t = pd.constrainTo(t, 0, e ? 365 : 364);
    for (
      var r = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
        n = pd.constrainTo(Math.ceil(t / 30) + 1, 0, 11);
      0 <= n;
      n--
    )
      if (r[n] <= t)
        return (
          this.setMonth(Math.floor(pd.constrainTo(n, 0, 11))),
          void this.setDate(Math.floor(pd.constrainTo(t - r[n] + 1, 1, 31)))
        );
    this.setMonth(0), this.setDate(1);
  }),
  (Date.prototype.getDecimalHours = function () {
    return this.getHours() + this.getMinutes() / 60;
  }),
  ((pd = pd || {}).SolarPosition = function (t) {
    var a = Math.PI / 180,
      o = 180 / Math.PI,
      s = 2 * Math.PI,
      n = 1e-6,
      d = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335],
      l = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
      h = 0.26179938779915,
      u = [
        0, -0.014543897651582, -0.104528463267654, -0.207911690817759,
        -0.309016994374947,
      ],
      c = this,
      p = !0,
      f = !0;
    t = t || {};
    var i = isNaN(t.latitude) ? 54.15197 : t.latitude,
      m = isNaN(t.longitude) ? -4.48524 : t.longitude,
      g = isNaN(t.timezone) ? 0 : t.timezone,
      v = isNaN(t.northOffset) ? 0 : t.northOffset,
      y = 15 * g,
      b = y / 15,
      D = (m - y) / 15,
      M = m * a,
      x = i * a,
      T = Math.cos(x),
      w = Math.sin(x),
      A = 0,
      O = 1,
      V = 3,
      C = new Date().getFullYear(),
      S = 10,
      k = 90,
      N = 0,
      I = 0,
      E = 0,
      _ = 0,
      P = 0,
      L = 0,
      R = [0, 0, 0, 0, 0],
      F = [24, 24, 24, 24, 24],
      z = !!t.interpolateDeclination || !1,
      B = 0,
      Y = 0,
      U = 0,
      H = 0,
      q = 0,
      G = 0,
      W = 0,
      j = 0,
      K = 0,
      X = 0,
      $ = 0,
      Z = 0,
      r = null,
      Q = null,
      J = null,
      tt = null;
    function et(t, e, r) {
      return !(e + (r = r || n) < t || t < e - r);
    }
    function rt(t, e) {
      return 0 < e ? e * Math.round(t / e) : t;
    }
    function nt(t, e, r) {
      return isNaN(t) ? e : t < e ? e : r < t ? r : t;
    }
    function it(t, e, r) {
      return t < e ? t + (r - e) : r < t ? t - (r - e) : t;
    }
    function e(t) {
      return "ERROR: '" + t + "' property is read-only.";
    }
    function at() {
      z
        ? ((B = c.calcJulianCenturiesByMonth(O, V, C)),
          (U = c.calcSolarDeclination(B)),
          (K = c.calcEquationOfTime(B)),
          (q = Math.cos(U)),
          (G = Math.sin(U)),
          (Y = c.calcJulianCenturiesByMonth(O + 1, V, C)),
          (H = c.calcSolarDeclination(Y)),
          (X = c.calcEquationOfTime(Y)),
          (W = Math.cos(H)),
          (j = Math.sin(H)),
          (N = 0.5 * (B + Y)),
          (I = 0.5 * (U + H)),
          (E = 0.5 * (q + W)),
          (_ = 0.5 * (G + j)),
          (P = 0.5 * (K + X)))
        : ((N = c.calcJulianCenturiesByMonth(O, V, C)),
          (I = c.calcSolarDeclination(N)),
          (P = c.calcEquationOfTime(N)),
          (E = Math.cos(I)),
          (_ = Math.sin(I))),
        (L = 12 - P - D + A);
      for (var t, e, r = w * _, n = T * E, i = 0; i < 5; ++i)
        (t = (e = (u[i] - r) / n) <= -1 ? 12 : 1 <= e ? 0 : Math.acos(e) / h) <
        11.999
          ? ((R[i] = nt(L - t, 0, 24)), (F[i] = nt(L + t, 0, 24)))
          : ((R[i] = 0), (F[i] = 24));
      p = !1;
    }
    function ot() {
      !(function (t) {
        if (z) {
          var e = t / 24,
            r = 1 - e;
          (N = r * B + e * Y),
            (I = r * U + e * H),
            (E = r * q + e * W),
            (_ = r * G + e * j),
            (P = r * K + e * X);
        }
      })(S);
      var t = ((((S - b + P) / 24) * s + M) % s) - Math.PI,
        e = Math.acos(Math.max(-1, Math.min(1, w * _ + T * E * Math.cos(t)))),
        r = T * Math.sin(e);
      t < -Math.PI && (t += s),
        1e-6 < Math.abs(r) &&
          (t =
            (0 < t ? -1 : 1) *
            (Math.PI -
              Math.acos(Math.max(-1, Math.min(1, (w * Math.cos(e) - _) / r))))),
        t < 0 && (t += s);
      var n = 90 - e * o;
      if (n <= 85) {
        var i = Math.tan(n * a);
        e -=
          ((5 < n
            ? 58.1 / i - 0.07 / (i * i * i) + 86e-6 / (i * i * i * i * i)
            : -0.575 < n
            ? 1735 + n * (n * (103.4 + n * (0.711 * n - 12.79)) - 518.2)
            : -20.774 / i) /
            3600) *
          a;
      }
      ($ = it(90 - e * o, -180, 180)), (Z = it(t * o, -180, 180)), (f = !1);
    }
    function st() {
      p ? (at(), ot()) : f && ot();
    }
    function dt(t, e, r, n) {
      (r *= a), (n *= a);
      var i = e * Math.cos(n);
      return [
        t[0] + i * Math.sin(r),
        t[1] + i * Math.cos(r),
        t[2] + e * Math.sin(n),
      ];
    }
    function lt(t) {
      return 0 == (3 & t) && (t % 100 != 0 || t % 400 == 0);
    }
    function ht(t, e, r) {
      return (e = nt(e, 0, 11)), (lt(r) ? d : l)[e] + t - 1;
    }
    function ut(t) {
      return (357.52911 + t * (35999.05029 - 1537e-7 * t)) * a;
    }
    function ct(t) {
      var e = (280.46646 + t * (36000.76983 + 3032e-7 * t)) % 360;
      return (e < 0 ? e + 360 : e) * a;
    }
    function pt(t) {
      return (
        ct(t) +
        ((r = ut((e = t))),
        (Math.sin(r) * (1.914602 - e * (0.004817 + 14e-6 * e)) +
          Math.sin(r + r) * (0.019993 - 101e-6 * e) +
          289e-6 * Math.sin(r + r + r)) *
          a)
      );
      var e, r;
    }
    function ft(t) {
      return (
        (23 +
          (26 +
            (21.448 - (e = t) * (46.815 + e * (59e-5 - 0.001813 * e))) / 60) /
            60) *
          a +
        0.00256 * Math.cos((125.04 - 1934.136 * t) * a) * a
      );
      var e;
    }
    function mt(t) {
      var e,
        r,
        n,
        i,
        a,
        o = Math.floor(t + 0.5),
        s = t + 0.5 - o,
        d =
          (o < 2299161
            ? o
            : o +
              1 +
              (e = Math.floor((o - 1867216.25) / 36524.25)) -
              Math.floor(e / 4)) + 1524,
        l = Math.floor((d - 122.1) / 365.25),
        h = Math.floor(365.25 * l),
        u = Math.floor((d - h) / 30.6001),
        c = d - h - Math.floor(30.6001 * u) + s,
        p = u - (u < 13.5 ? 1 : 13),
        f = l - (2.5 < p ? 4716 : 4715),
        m = Math.floor(c),
        g = 24 * (c - m),
        v = Math.floor(g),
        y = 60 * (g - v),
        b = Math.floor(y),
        D = Math.floor(60 * (y - b)),
        M = pd.DateTime.getDOY(m, p - 1, f),
        x =
          v +
          b / 60 +
          (D -
            ((r = [
              121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46,
              44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12,
              11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10,
              10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13,
              13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
              16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12,
              11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6,
              5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7,
              1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6,
              -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16,
              18.2, 20.2, 21.1, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7,
              24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2,
              33.1, 34, 35, 36.5, 38.3, 40.2, 42.2, 44.5, 46.5, 48.5, 50.5,
              52.5, 53.8, 54.9, 55.8, 56.9, 58.3, 60, 61.6, 63, 63.8, 64.3,
            ]),
            (n = 0),
            (a = ((i = C) - 2e3) / 100),
            1620 <= i && i <= 2002
              ? (n =
                  i % 2
                    ? (r[(i - 1620 - 1) / 2] + r[(i - 1620 + 1) / 2]) / 2
                    : r[(i - 1620) / 2])
              : i < 948
              ? (n = 2177 + 497 * a + 44.1 * Math.pow(a, 2))
              : 948 <= i &&
                ((n = 102 + 102 * a + 25.3 * Math.pow(a, 2)),
                2e3 <= i && i <= 2100 && (n += 0.37 * (i - 2100))),
            n)) /
            3600;
      return (
        24 < x && ((x -= 24), M++, m++),
        x < 0 && ((x += 24), M--, m--),
        { dayOfYear: M, timeOfDay: x, month: p - 1, day: m }
      );
    }
    function gt(t, e) {
      var r = 0,
        n = (e - 2e3) / 1e3;
      switch (t) {
        case 0:
          r =
            2451623.80984 +
            365242.37404 * n +
            0.05169 * Math.pow(n, 2) -
            0.00411 * Math.pow(n, 3) -
            57e-5 * Math.pow(n, 4);
          break;
        case 1:
          r =
            2451716.56767 +
            365241.62603 * n +
            0.00325 * Math.pow(n, 2) +
            0.00888 * Math.pow(n, 3) -
            3e-4 * Math.pow(n, 4);
          break;
        case 2:
          r =
            2451810.21715 +
            365242.01767 * n -
            0.11575 * Math.pow(n, 2) +
            0.00337 * Math.pow(n, 3) +
            78e-5 * Math.pow(n, 4);
          break;
        case 3:
          r =
            2451900.05952 +
            365242.74049 * n -
            0.06223 * Math.pow(n, 2) -
            0.00823 * Math.pow(n, 3) +
            32e-5 * Math.pow(n, 4);
      }
      var i = (r - 2451545) / 36525,
        a = 35999.373 * i - 2.47,
        o = 1 + 0.0334 * pd.cosDegrees(a) + 7e-4 * pd.cosDegrees(2 * a);
      return mt(
        r +
          (1e-5 *
            (function (t) {
              for (
                var e = [
                    485, 203, 199, 182, 156, 136, 77, 74, 70, 58, 52, 50, 45,
                    44, 29, 18, 17, 16, 14, 12, 12, 12, 9, 8,
                  ],
                  r = [
                    324.96, 337.23, 342.08, 27.85, 73.14, 171.52, 222.54,
                    296.72, 243.58, 119.81, 297.17, 21.02, 247.54, 325.15,
                    60.93, 155.12, 288.79, 198.04, 199.76, 95.39, 287.11,
                    320.81, 227.73, 15.45,
                  ],
                  n = [
                    1934.136, 32964.467, 20.186, 445267.112, 45036.886,
                    22518.443, 65928.934, 3034.906, 9037.513, 33718.147,
                    150.678, 2281.226, 29929.562, 31555.956, 4443.417,
                    67555.328, 4562.452, 62894.029, 31436.921, 14577.848,
                    31931.756, 34777.259, 1222.114, 16859.074,
                  ],
                  i = 0,
                  a = 0;
                a < 24;
                ++a
              )
                i += e[a] * pd.cosDegrees(r[a] + n[a] * t);
              return i;
            })(i)) /
            o
      );
    }
    return (
      (this.calculate = function () {
        return st(), c;
      }),
      (this.getSunAnglesArray = function (t) {
        return st(), t ? ((t[0] = Z), (t[1] = $)) : (t = [Z, $]), t;
      }),
      (this.getSunAnglesObject = function () {
        return st(), { azi: Z, alt: $ };
      }),
      (this.getSunDirection = function (t) {
        st();
        var e = Z * a,
          r = $ * a,
          n = Math.cos(r);
        return (
          pd.isArray(t) || (t = []),
          (t[0] = n * Math.sin(e)),
          (t[1] = n * Math.cos(e)),
          (t[2] = Math.sin(r)),
          t
        );
      }),
      (this.getSunDirectionWithNorthOffset = function (t) {
        st();
        var e = (Z + v) * a,
          r = $ * a,
          n = Math.cos(r);
        return (
          pd.isArray(t) || (t = []),
          (t[0] = n * Math.sin(e)),
          (t[1] = n * Math.cos(e)),
          (t[2] = Math.sin(r)),
          t
        );
      }),
      (this.getDateObject = function () {
        var t = C,
          e = nt(V, 0, 11),
          r = O,
          n = S - g;
        if (n < 0)
          (n = it(n, 0, 24)),
            --r < 0 &&
              (--e < 0 && ((e = 11), --t), (r = (lt(t) ? d : l)[e] - 1));
        else if (24 <= n) {
          (n = it(n, 0, 24)),
            ++r >= (lt(t) ? d : l)[e] && (11 < ++e && ((e = 0), ++t), (r = 0));
        }
        var i = nt(Math.floor(n), 0, 24),
          a = nt(Math.round(60 * (n - i)), 0, 60);
        return (
          59.5 < a && ((i = i < 23 ? i + 1 : 0), (a = 0)),
          new Date(Date.UTC(t, e, r, i, a, 0))
        );
      }),
      (this.copyLocation = function (t) {
        return (
          t instanceof pd.SolarPosition &&
            (this.setLocation(t.latitude(), t.longitude(), t.timezone()),
            this.northOffset(t.northOffset()),
            this.setDayMonthYear(t.dayOfMonth(), t.monthOfYear(), t.year())),
          c
        );
      }),
      (this.setLocation = function (t, e, r) {
        if (arguments.length < 2)
          throw new Error(
            "This method requires at least latitude and longitude as arguments."
          );
        return (
          (t = nt(parseFloat(t), -89.9, 89.9)),
          (e = it(parseFloat(e), -180, 180)),
          (r = pd.toNumber(r, this.calcDefaultTimezone(e))),
          (et(i, t, n) && et(m, e, n) && et(g, r, 1 / 3600)) || (p = !0),
          (b = (y = 15 * (g = r)) / 15),
          (D = ((m = e) - y) / 15),
          (M = m * a),
          (x = (i = t) * a),
          (T = Math.cos(x)),
          (w = Math.sin(x)),
          (A = 0),
          c
        );
      }),
      (this.setDateTime = function (t) {
        return (
          t &&
            !isNaN(t.getTime()) &&
            (c.setDayMonthYear(t.getDate(), t.getMonth(), t.getFullYear()),
            c.setTime(t)),
          c
        );
      }),
      (this.setDate = function (t) {
        return (
          t &&
            !isNaN(t.getTime()) &&
            c.setDayMonthYear(t.getDate(), t.getMonth(), t.getFullYear()),
          c
        );
      }),
      (this.setTime = function (t) {
        return (
          t &&
            !isNaN(t.getTime()) &&
            c.setTimeOfDay(
              t.getHours() + t.getMinutes() / 60 + t.getSeconds() / 3600
            ),
          c
        );
      }),
      (this.setDayOfYear = function (t, e) {
        t = nt(t, 0, lt((e = e ? parseFloat(e) : C)) ? 365 : 364);
        for (
          var r = nt(Math.ceil(t / 30) + 1, 0, 11), n = lt(e) ? d : l, i = r;
          0 <= i;
          i--
        )
          if (t >= n[i]) {
            c.setDayMonthYear(t - n[i] + 1, i, e);
            break;
          }
        return c;
      }),
      (this.setDayMonthYear = function (t, e, r) {
        return (
          (r = Math.floor(pd.constrainTo(r, -4712, 3500))),
          (e = Math.floor(e)),
          (t = Math.floor(t)),
          (O == t && V == e && C == r) || ((k = -1), (p = !0)),
          (O = t),
          (V = e),
          (C = r),
          c
        );
      }),
      (this.setTimeOfDay = function (t) {
        return (t = nt(t, 0, 24)), et(S, t, 1 / 3600) || (f = !0), (S = t), c;
      }),
      (this.setDateTimeAndGetArray = function (t) {
        return (
          t &&
            !isNaN(t.getTime()) &&
            (c.setDayMonthYear(t.getDate(), t.getMonth(), t.getFullYear()),
            c.setTime(t)),
          c.getSunAnglesArray()
        );
      }),
      (this.setTimeAndGetArray = function (t) {
        return c.setTime(t).getSunAnglesArray();
      }),
      (this.setTimeOfDayAndGetArray = function (t) {
        return c.setTimeOfDay(t).getSunAnglesArray();
      }),
      (this.getSunPosition = function (t, e) {
        return dt(t, e, Z + v, $);
      }),
      (this.getDailySunPathSegmentsAsArray = function (t, e, r) {
        var n = [[]],
          i = n[0];
        (t = nt(parseFloat(t), 1 / 60, 6)),
          (e = isNaN(e) ? 0 : e),
          (r = isNaN(r) ? 24 : r),
          st();
        for (var a = e; a < r; a += t) c.setTimeOfDay(a), ot(), i.push([Z, $]);
        return c.setTimeOfDay(r), ot(), i.push([Z, $]), n;
      }),
      (this.getAnalemmaSunPathsAsArray = function (t, e, r, n) {
        var i = [];
        (t = nt(t, 1, 90)),
          (e = nt(parseFloat(e), 0, 24)),
          isNaN(e) && (e = 0),
          (r = nt(parseFloat(r), 0, 24)),
          (isNaN(r) || r <= e) && (r = 24),
          (n = nt(parseFloat(n), 1 / 60, 6)),
          isNaN(n) && (r = 1);
        for (var a, o = e; o < r; o += n) i.push([]), 0;
        for (var s = 0; s <= 364; s += t) {
          this.setDayOfYear(s, C), st(), (a = 0);
          for (o = e; o < r; o += n)
            c.setTimeOfDay(it(o, 0, 24)), ot(), i[a].push([Z, $]), a++;
        }
        this.setDayOfYear(0, C), st(), (a = 0);
        for (o = e; o < r; o += n)
          c.setTimeOfDay(it(o, 0, 24)), ot(), i[a].push([Z, $]), a++;
        return i;
      }),
      (this.getHourlySunPathAsArray = function (t, e, r) {
        var n = [],
          i = nt(parseFloat(e), 0, 24);
        isNaN(i) && (i = 0);
        var a = nt(parseFloat(r), 0, 24);
        (isNaN(a) || a <= i) && (a = 24),
          (t = nt(parseFloat(t), 1 / 60, 6)),
          this.setTimeOfDay(i),
          st(),
          n.push([Z, $]);
        for (var o = (i = rt(i + t, t)); o < a; o += t)
          this.setTimeOfDay(o), ot(), n.push([Z, $]);
        return this.setTimeOfDay(a), ot(), n.push([Z, $]), n;
      }),
      (this.getHourlySunPathAsPositions3D = function (t, e, r, n, i) {
        (i = i || { vertices: [], lines: [] }), (t = nt(t, 1 / 60, 6));
        var a = i.vertices.length;
        this.setTimeOfDay(0), st(), i.vertices.push(dt(e, r, Z, $));
        for (var o = t; o < 24; o += t)
          this.setTimeOfDay(o),
            ot(),
            i.vertices.push(dt(e, r, Z, $)),
            (n || a % 2) && i.lines.push([a, a + 1]),
            a++;
        return (
          this.setTimeOfDay(24),
          ot(),
          i.vertices.push(dt(e, r, Z, $)),
          i.lines.push([a, ++a]),
          i
        );
      }),
      (this.reuseHourlySunPathAsPositions3D = function (t, e, r, n, i) {
        var a, o;
        if (!i || !i.vertices)
          return this.getHourlySunPathAsPositions3D(t, e, r, n, null);
        (t = nt(t, 1 / 60, 6)),
          this.setTimeOfDay(0),
          st(),
          (a = i.addVertex(dt(e, r, Z, $)));
        for (var s = t; s < 24; s += t)
          this.setTimeOfDay(s),
            ot(),
            (o = i.addVertex(dt(e, r, Z, $))),
            (n || a % 2) && i.addLine(a, o),
            (a = o);
        return (
          (n || a % 2) &&
            (this.setTimeOfDay(24),
            ot(),
            (o = i.addVertex(dt(e, r, Z, $))),
            i.addLine(a, o)),
          i
        );
      }),
      (this.getAnalemmaSunPathAsArray = function (t) {
        var e = [];
        (t = nt(t, 1, 90)), this.setDayOfYear(0, C), st(), e.push([Z, $]);
        for (var r = t; r <= 364; r += t)
          this.setDayOfYear(r, C), at(), ot(), e.push([Z, $]);
        return this.setDayOfYear(0, C), at(), ot(), e.push([Z, $]), e;
      }),
      (this.getAnalemmaSunPathAsPositions3D = function (t, e, r, n, i) {
        t = nt(t, 1, 90);
        var a = (i = i || { vertices: [], lines: [] }).vertices.length;
        this.setDayOfYear(0, C), at(), ot();
        var o = dt(e, r, Z, $);
        i.vertices.push(o);
        for (var s = 0; s <= 364; s += t)
          this.setDayOfYear(s, C),
            at(),
            ot(),
            i.vertices.push(dt(e, r, Z, $)),
            (n || a % 2) && i.lines.push([a, a + 1]),
            a++;
        return i.vertices.push(o), i.lines.push([a, ++a]), i;
      }),
      (this.getSunriseSunsetAsObjectArray = function (t, e) {
        t = nt(t, 1, 90);
        var r = lt(C) ? 365 : 364;
        e = e || [];
        for (var n = 0; n < r; n += t)
          this.setDayOfYear(n, C),
            at(),
            e.push({
              dayOfYear: n,
              solarNoon: L,
              sunrise: R[1],
              sunset: F[1],
              civilDawn: R[2],
              civilDusk: F[2],
              nauticalDawn: R[3],
              nauticalDusk: F[3],
              astronomicalDawn: R[4],
              astronomicalDusk: F[4],
            });
        return (
          this.setDayOfYear(r, C),
          at(),
          e.push({
            dayOfYear: n,
            solarNoon: L,
            sunrise: R[1],
            sunset: F[1],
            civilDawn: R[2],
            civilDusk: F[2],
            nauticalDawn: R[3],
            nauticalDusk: F[3],
            astronomicalDawn: R[4],
            astronomicalDusk: F[4],
          }),
          e
        );
      }),
      (this.twilight = {
        SOLAR_DISK_CENTER: 0,
        SOLAR_DISK_TOP_WITH_ATM_REFRACTION: 1,
        CIVIL: 2,
        NAUTICAL: 3,
        ASTRONOMICAL: 4,
      }),
      (this.getDuskDawnData = function () {
        return (
          st(),
          {
            solarNoon: L,
            sunrise: R[1],
            sunset: F[1],
            civilDawn: R[2],
            civilDusk: F[2],
            nauticalDawn: R[3],
            nauticalDusk: F[3],
            astronomicalDawn: R[4],
            astronomicalDusk: F[4],
          }
        );
      }),
      (this.getDawnTime = function (t) {
        if (
          t < this.twilight.SOLAR_DISK_CENTER ||
          t > this.twilight.ASTRONOMICAL
        )
          throw "ERROR: 'stage' parameter must be between twilight.SOLAR_DISK_CENTER and twilight.ASTRONOMICAL, inclusive.";
        return st(), R[t];
      }),
      (this.getDuskTime = function (t) {
        if (
          t < this.twilight.SOLAR_DISK_CENTER ||
          t > this.twilight.ASTRONOMICAL
        )
          throw "ERROR: 'stage' parameter must be between twilight.SOLAR_DISK_CENTER and twilight.ASTRONOMICAL, inclusive.";
        return st(), F[t];
      }),
      (this.latitude = function (t) {
        if (!arguments.length) return i;
        var e = nt(parseFloat(t), -89.9, 89.9);
        return (
          et(i, e, n) || (p = !0),
          (x = (i = e) * a),
          (T = Math.cos(x)),
          (w = Math.sin(x)),
          c
        );
      }),
      (this.longitude = function (t) {
        if (!arguments.length) return m;
        var e = it(parseFloat(t), -180, 180);
        return (
          et(m, e, n) || (p = !0),
          (m = e),
          (g = this.calcDefaultTimezone(m)),
          (b = (y = 15 * g) / 15),
          (D = (m - y) / 15),
          (M = m * a),
          c
        );
      }),
      (this.timezone = function (t) {
        if (!arguments.length) return g;
        var e = nt(parseFloat(t), -14, 14);
        return (
          et(g, e, 1 / 3600) || (p = !0),
          (b = (y = 15 * (g = e)) / 15),
          (D = (m - y) / 15),
          c
        );
      }),
      (this.northOffset = function (t) {
        return arguments.length ? ((v = it(parseFloat(t), -180, 180)), c) : v;
      }),
      (this.dayOfMonth = function (t) {
        if (!arguments.length) return O;
        var e = nt(parseInt(t, 10), 1, 31);
        return O != e && ((k = -1), (p = !0)), (O = e), c;
      }),
      (this.monthOfYear = function (t) {
        if (!arguments.length) return V;
        var e = nt(parseInt(t, 10), 0, 11);
        return V != e && ((k = -1), (p = !0)), (V = e), c;
      }),
      (this.year = function (t) {
        if (!arguments.length) return C;
        var e = parseInt(t, 10);
        return (
          (e = Math.floor(pd.constrainTo(e, -4712, 3500))),
          C != e &&
            (J && (J = gt(0, e)),
            Q && (Q = gt(1, e)),
            tt && (tt = gt(2, e)),
            r && (r = gt(3, e)),
            (k = -1),
            (p = !0)),
          (C = e),
          c
        );
      }),
      (this.dayOfYear = function (t) {
        return arguments.length
          ? (c.setDayOfYear(parseInt(t, 10), C), c)
          : (k < 0 && (k = ht(O, V, C)), k);
      }),
      (this.clockTime = function (t) {
        return arguments.length
          ? (c.setTimeOfDay(it(parseFloat(t), 0, 24)), c)
          : S;
      }),
      (this.clockTimeUTC = function (t) {
        return arguments.length
          ? (c.setTimeOfDay(nt(parseFloat(t) + g, 0, 24)), c)
          : S - g;
      }),
      (this.solarTime = function (t) {
        if ((st(), !arguments.length)) return S + P + D - A;
        var e = parseFloat(t) - P - D + A;
        return c.setTimeOfDay(it(e, 0, 24)), c;
      }),
      (this.solarTimeUTC = function (t) {
        return arguments.length
          ? c.solarTime(parseFloat(t) + g)
          : c.solarTime() - g;
      }),
      (this.isLeapYear = function () {
        if (arguments.length) throw e("isLeapYear");
        return lt(C);
      }),
      (this.dateAsString = function () {
        if (arguments.length) throw e("dateAsString");
        return this.formatAsDate(this.dayOfYear(), C);
      }),
      (this.timeAsString = function () {
        if (arguments.length) throw e("timeAsString");
        return this.formatAsTime(this.clockTime());
      }),
      (this.timezoneAsString = function () {
        if (arguments.length) throw e("timeAsString");
        var t = this.timezone();
        return 0 <= t
          ? "+" + this.formatAsDuration(t)
          : this.formatAsDuration(t);
      }),
      (this.solarNoon = function () {
        if (arguments.length) throw e("solarNoon");
        return st(), L;
      }),
      (this.timezoneCorrection = function () {
        if (arguments.length) throw e("timezoneCorrection");
        return D - A;
      }),
      (this.sunriseTime = function () {
        if (arguments.length) throw e("sunriseTime");
        return st(), R[this.twilight.SOLAR_DISK_TOP_WITH_ATM_REFRACTION];
      }),
      (this.sunsetTime = function () {
        if (arguments.length) throw e("sunsetTime");
        return st(), F[this.twilight.SOLAR_DISK_TOP_WITH_ATM_REFRACTION];
      }),
      (this.azimuthAngle = function () {
        if (arguments.length) throw e("azimuthAngle");
        return st(), Z;
      }),
      (this.altitudeAngle = function () {
        if (arguments.length) throw e("altitudeAngle");
        return st(), $;
      }),
      (this.declinationAngle = function () {
        if (arguments.length) throw e("declinationAngle");
        return st(), I * o;
      }),
      (this.hourAngle = function () {
        if (arguments.length) throw e("hourAngle");
        return ((12 - c.solarTime()) / 24) * 360;
      }),
      (this.hourAngleSolarUTC = function () {
        if (arguments.length) throw e("hourAngleWithTimeZoneOffset");
        return ((12 - (S + P - g)) / 24) * 360;
      }),
      (this.eqnOfTime = function () {
        if (arguments.length) throw e("eqnOfTime");
        return P;
      }),
      (this.calcDefaultTimezone = function (t) {
        return rt(t, 15) / 15;
      }),
      (this.calcDayOfYearIndex = function (t, e, r) {
        return ht(t, e, r);
      }),
      (this.formatAsTime = function (t, e) {
        var r = pd.sign(t);
        if (((t = it(t, 0, 24)), e)) {
          var n = 3600 * Math.abs(t),
            i = nt(Math.floor(t), 0, 24),
            a = nt(Math.floor(60 * (t - i)), 0, 60),
            o = nt(Math.round(n - (3600 * i + 60 * a)), 0, 60);
          return (
            59.5 < o && ((a = a < 59 ? a + 1 : 0), (o = 0)),
            59.5 < a && ((i = i < 23 ? i + 1 : 0), (a = 0)),
            i < 10 && (i = "0" + i),
            a < 10 && (a = "0" + a),
            o < 10 && (o = "0" + o),
            r < 0 ? "-" + i + ":" + a + ":" + o : i + ":" + a + ":" + o
          );
        }
        i = Math.floor(t);
        return (
          59.5 < (a = nt(Math.round(60 * (t - i)), 0, 60)) &&
            ((i = i < 23 ? i + 1 : 0), (a = 0)),
          i < 10 && (i = "0" + i),
          a < 10 && (a = "0" + a),
          r < 0 ? "-" + i + ":" + a : i + ":" + a
        );
      }),
      (this.formatAsDuration = function (t, e) {
        var r = pd.sign(t);
        if (((t = Math.abs(t)), e)) {
          var n = Math.floor(t),
            i = 3600 * Math.abs(t),
            a = nt(Math.floor(60 * (t - n)), 0, 60),
            o = nt(Math.round(i - (3600 * n + 60 * a)), 0, 60);
          return (
            59.5 < o && ((a = a < 59 ? a + 1 : 0), (o = 0)),
            59.5 < a && ((n = n < 23 ? n + 1 : 0), (a = 0)),
            n < 10 && (n = "0" + n),
            a < 10 && (a = "0" + a),
            o < 10 && (o = "0" + o),
            (r < 0 ? "-" : "") + n + ":" + a + ":" + o
          );
        }
        n = Math.floor(t);
        return (
          59.5 < (a = nt(Math.round(60 * (t - n)), 0, 60)) &&
            ((n = n < 23 ? n + 1 : 0), (a = 0)),
          n < 10 && (n = "0" + n),
          a < 10 && (a = "0" + a),
          r < 0 ? "-" + n + ":" + a : n + ":" + a
        );
      }),
      (this.formatAsTimezone = function (t) {
        return 0 <= (t = pd.toNumber(t, this.timezone()))
          ? "+" + this.formatAsDuration(t)
          : this.formatAsDuration(t);
      }),
      (this.formatAsDate = function (t, e) {
        var r = e || C;
        t = nt(t, 0, lt(r) ? 366 : 365);
        for (
          var n = nt(Math.ceil(t / 30) + 1, 0, 11), i = lt(r) ? d : l, a = n;
          0 <= a;
          a--
        )
          if (t >= i[a]) {
            var o = Math.floor(nt(a, 0, 11)),
              s = Math.floor(nt(t - i[a] + 1, 1, 31));
            return (
              s < 10 && (s = "0" + s),
              (e ? " " + e : "") +
                "年" +
                " " +
                [
                  "1月",
                  "2月",
                  "3月",
                  "4月",
                  "5月",
                  "6月",
                  "4月",
                  "8月",
                  "9月",
                  "10月",
                  "11月",
                  "12月",
                ][o] +
                s +
                "日"
            );
          }
        return "";
      }),
      (this.calcJulianCenturies = function (t, e) {
        var r = Math.floor(--e / 100),
          n = 2 - r + Math.floor(r / 4);
        return (
          (Math.floor(365.25 * (e + 4716)) + t + n - 1524.5 - 2451545) / 36525
        );
      }),
      (this.calcJulianCenturiesByMonth = function (t, e, r) {
        ++e <= 2 && ((e += 12), (r -= 1));
        var n = Math.floor(--r / 100),
          i = 2 - n + Math.floor(n / 4);
        return (
          (Math.floor(365.25 * (r + 4716)) +
            Math.floor(30.6001 * (e + 1)) +
            t +
            i -
            1524.5 -
            2451545) /
          36525
        );
      }),
      (this.calcSolarDeclination = function (t) {
        return Math.asin(
          Math.sin(ft(t)) *
            Math.sin(
              pt((e = t)) -
                (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * e) * a)) * a
            )
        );
        var e;
      }),
      (this.calcEquationOfTime = function (t) {
        var e,
          r = 0.016708634 - (e = t) * (42037e-9 + 1.267e-7 * e),
          n = ut(t),
          i = ct(t),
          a = Math.tan(ft(t) / 2);
        a *= a;
        var o = Math.sin(n);
        return (
          4 *
          (a * Math.sin(2 * i) -
            2 * r * o +
            4 * r * a * o * Math.cos(2 * i) -
            0.5 * a * a * Math.sin(4 * i) -
            1.25 * r * r * Math.sin(2 * n))
        );
      }),
      (this.getEquinoxMar = function () {
        return null == J && (J = gt(0, C)), J;
      }),
      (this.getSolsticeJun = function () {
        return null == Q && (Q = gt(1, C)), Q;
      }),
      (this.getEquinoxSep = function () {
        return null == tt && (tt = gt(2, C)), tt;
      }),
      (this.getSolsticeDec = function () {
        return null == r && (r = gt(3, C)), r;
      }),
      this
    );
  });
